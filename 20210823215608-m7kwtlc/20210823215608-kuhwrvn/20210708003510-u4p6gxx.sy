{
	"ID": "20210708003510-u4p6gxx",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20210708003510-u4p6gxx",
		"title": "103.列数据类型",
		"type": "doc"
	},
	"Children": [
		{
			"ID": "20210708003510-ebcz7ar",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708003510-ebcz7ar"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "数字类型"
				}
			]
		},
		{
			"ID": "20210708003510-3y3s467",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-3y3s467"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "整数（精确值）🔥"
				}
			]
		},
		{
			"ID": "20210708003510-92kz3gm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-92kz3gm"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "很显然，使用的字节数越多，意味着能表示的数值范围就越大，但是也就越耗费存储空间。根据表示一个数占用字节数的不同，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "MySQL"
				},
				{
					"Type": "NodeText",
					"Data": "把整数划分成如下所示的类型："
				}
			]
		},
		{
			"ID": "20210708003510-5nckx4z",
			"Type": "NodeTable",
			"Data": "|              类型              | 占用的字节 |      无符号数取值范围      |            有符号数取值范围             |      含义      |\n| :----------------------------: | :--------: | :------------------------: | :-------------------------------------: | :------------: |\n|           `TINYINT`            |     1      |     0 ~ 2⁸-1\u003cbr/\u003e0~255     |         -2⁷ ~ 2⁷-1\u003cbr/\u003e-128~127         |  非常小的整数  |\n|      标准 SQL：`SMALLINT`      |     2      |   0 ~ 2¹⁶-1\u003cbr/\u003e0~65535    |      -2¹⁵ ~ 2¹⁵-1\u003cbr/\u003e-32768~32767      |    小的整数    |\n|          `MEDIUMINT`           |     3      |  0 ~ 2²⁴-1\u003cbr/\u003e0~16777215  |    -2²³ ~ 2²³-1\u003cbr/\u003e-8388608~8388607    | 中等大小的整数 |\n| 标准 SQL：`INT`或别名`INTEGER` |     4      | 0 ~ 2³²-1\u003cbr/\u003e0~4294967295 | -2³¹ ~ 2³¹-1\u003cbr/\u003e-2147483648~2147483647 |   标准的整数   |\n|            `BIGINT`            |     8      |         0 ~ 2⁶⁴-1          |              -2⁶³ ~ 2⁶³-1               |     大整数     |",
			"TableAligns": [
				2,
				2,
				2,
				2,
				2
			],
			"Properties": {
				"id": "20210708003510-5nckx4z"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Children": [
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "类型"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "占用的字节"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "无符号数取值范围"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "有符号数取值范围"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "含义"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "TINYINT"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "1"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "0 ~ 2⁸-1\u003cbr/\u003e0~255"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "-2⁷ ~ 2⁷-1\u003cbr/\u003e-128~127"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "非常小的整数"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "标准 SQL："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "SMALLINT"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "2"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "0 ~ 2¹⁶-1\u003cbr/\u003e0~65535"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "-2¹⁵ ~ 2¹⁵-1\u003cbr/\u003e-32768~32767"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "小的整数"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "MEDIUMINT"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "3"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "0 ~ 2²⁴-1\u003cbr/\u003e0~16777215"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "-2²³ ~ 2²³-1\u003cbr/\u003e-8388608~8388607"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "中等大小的整数"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "标准 SQL："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "INT"
								},
								{
									"Type": "NodeText",
									"Data": "或别名"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "INTEGER"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "4"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "0 ~ 2³²-1\u003cbr/\u003e0~4294967295"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "-2³¹ ~ 2³¹-1\u003cbr/\u003e-2147483648~2147483647"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "标准的整数"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "BIGINT"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "8"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "0 ~ 2⁶⁴-1"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "-2⁶³ ~ 2⁶³-1"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "大整数"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-xb89vdx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-xb89vdx"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "以"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "TINYINT"
				},
				{
					"Type": "NodeText",
					"Data": "为例，用 1 个字节，也就是 8 个位表示"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "有符号数"
				},
				{
					"Type": "NodeText",
					"Data": "的话，就是既可以表示正数，也可以表示负数的话，需要有一个比特位表示正负号。但是如果表示"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "无符号数"
				},
				{
					"Type": "NodeText",
					"Data": "的话，也就是只表示非负数的话，就不需要表示正负号，这是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "有符号数"
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "无符号数"
				},
				{
					"Type": "NodeText",
					"Data": "的区别。"
				}
			]
		},
		{
			"ID": "20210708003510-yyag98f",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-yyag98f"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "整数类型声明时如"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "TINYINT(11)"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "中 11 和占用字节无关，只是影响 ZEROFILL，详细见 DDL 章节"
				}
			]
		},
		{
			"ID": "20210708003510-xnd52mf",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-xnd52mf"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "浮点（不精确值）"
				}
			]
		},
		{
			"ID": "20210708003510-dfyvfrl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-dfyvfrl"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "::: tip"
				}
			]
		},
		{
			"ID": "20210708003510-fh516i6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-fh516i6"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "首先要明确："
				}
			]
		},
		{
			"ID": "20210708003510-0yflubt",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210708003510-0yflubt"
			},
			"Children": [
				{
					"ID": "20210708003510-joox6vj",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-joox6vj"
					},
					"Children": [
						{
							"ID": "20210708003510-cremdz8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-cremdz8"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "无理数概念：也称为"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "无限不循环小数，不能写作两整数之比"
								},
								{
									"Type": "NodeText",
									"Data": "。如 派，e 等。1/3 不是无理数！但是也不能用二进制表示"
								}
							]
						},
						{
							"ID": "20210708003510-z5r1a68",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-z5r1a68"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "两有理数运算不会产生无理数（即使是 1/3）"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-8azgcri",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-8azgcri"
					},
					"Children": [
						{
							"ID": "20210708003510-xusf229",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-xusf229"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "待续..."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-vijex74",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-vijex74"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": ":::"
				}
			]
		},
		{
			"ID": "20210708003510-mlx823h",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210708003510-mlx823h"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "引入—用二进制表示十进制小数"
				}
			]
		},
		{
			"ID": "20210708003510-t46ow5x",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-t46ow5x"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "::: tip 用二进制表示十进制小数"
				}
			]
		},
		{
			"ID": "20210708003510-yrww8w7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-yrww8w7"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "浮点数是用来表示小数的，我们平时用的十进制小数也可以被转换成二进制后被计算机存储。比如"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "9.875"
				},
				{
					"Type": "NodeText",
					"Data": "，这个小数可以被表示成这样："
				}
			]
		},
		{
			"ID": "20210708003510-nzq9u4m",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-nzq9u4m"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "9.875 = 8 + 1 + 0.5 + 0.25 + 0.125 = 1 × 2³ + 1 × 2⁰ + 1 × 2⁻¹ + 1 × 2⁻² + 1 × 2⁻³\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-8knprpp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-8knprpp"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "也就是说，如果十进制小数"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "9.875"
				},
				{
					"Type": "NodeText",
					"Data": "转换成二进制小数的话就是："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "1001.111"
				},
				{
					"Type": "NodeText",
					"Data": "。为了在计算机里存储这种二进制小数，我们统一把它们表示成"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "a × 2ⁿ"
				},
				{
					"Type": "NodeText",
					"Data": "的科学计数法的形式，其中 1≤"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "|a|"
				},
				{
					"Type": "NodeText",
					"Data": "＜ 2（其首位数必然是 1，二进制嘛），比如"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "1001.111"
				},
				{
					"Type": "NodeText",
					"Data": "可以被表示成"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "1.001111 × 2³"
				},
				{
					"Type": "NodeText",
					"Data": "，我们把小数点之后的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "001111"
				},
				{
					"Type": "NodeText",
					"Data": "称为"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "尾数"
				},
				{
					"Type": "NodeText",
					"Data": "，把"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "2³"
				},
				{
					"Type": "NodeText",
					"Data": "中的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "3"
				},
				{
					"Type": "NodeText",
					"Data": "称为"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "指数"
				},
				{
					"Type": "NodeText",
					"Data": "，然后"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "只需要在计算机中的比特位中表示出"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "尾数"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "和"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "指数"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "就行了"
				},
				{
					"Type": "NodeText",
					"Data": "。另外，小数也有正负之分，我们还需要单独的部分来表示小数的正负号。综上所述，表示一个浮点数需要下边几个部分："
				}
			]
		},
		{
			"ID": "20210708003510-llu8ict",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210708003510-llu8ict"
			},
			"Children": [
				{
					"ID": "20210708003510-wadc40c",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-wadc40c"
					},
					"Children": [
						{
							"ID": "20210708003510-vfrrub3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-vfrrub3"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "符号部分，占用 1 个比特位即可"
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-m7hle45",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-m7hle45"
					},
					"Children": [
						{
							"ID": "20210708003510-3971ek0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-3971ek0"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "尾数部分，视具体浮点数格式而定"
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-x2pgiiq",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-x2pgiiq"
					},
					"Children": [
						{
							"ID": "20210708003510-06irs27",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-06irs27"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "指数部分，视具体浮点数格式而定"
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-vnj3z4i",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-vnj3z4i"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": ":::"
				}
			]
		},
		{
			"ID": "20210708003510-97zav65",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210708003510-97zav65"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "浮点数类型"
				}
			]
		},
		{
			"ID": "20210708003510-26jzs9s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-26jzs9s"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "很显然，我们表示一个浮点数使用的字节数越多，表示"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "尾数"
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "指数"
				},
				{
					"Type": "NodeText",
					"Data": "的范围就越大，也就是说可以表示的小数范围就越大，设计"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "MySQL"
				},
				{
					"Type": "NodeText",
					"Data": "的大叔根据表示一个小数需要的不同字节数定义了如下的两种浮点数类型："
				}
			]
		},
		{
			"ID": "20210708003510-m75ti14",
			"Type": "NodeTable",
			"Data": "|   类型   | 占用的存储空间（单位：字节） |    绝对值最小非 0 值     |    绝对值最大非 0 值     |     含义     |\n| :------: | :--------------------------: | :----------------------: | :----------------------: | :----------: |\n| `FLOAT`  |              4               |     ±1.175494351E-38     |     ±3.402823466E+38     | 单精度浮点数 |\n| `DOUBLE` |              8               | ±2.2250738585072014E-308 | ±1.7976931348623157E+308 | 双精度浮点数 |",
			"TableAligns": [
				2,
				2,
				2,
				2,
				2
			],
			"Properties": {
				"id": "20210708003510-m75ti14"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Children": [
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "类型"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "占用的存储空间（单位：字节）"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "绝对值最小非 0 值"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "绝对值最大非 0 值"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "含义"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "FLOAT"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "4"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "±1.175494351E-38"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "±3.402823466E+38"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "单精度浮点数"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "DOUBLE"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "8"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "±2.2250738585072014E-308"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "±1.7976931348623157E+308"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "双精度浮点数"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-6n67ptd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-6n67ptd"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "以单精度浮点数类型"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "FLOAT"
				},
				{
					"Type": "NodeText",
					"Data": "类型为例，它占用的 4 个字节的各个组成部分如下图所示："
				}
			]
		},
		{
			"ID": "20210708003510-wtssinu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-wtssinu"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Children": [
						{
							"Type": "NodeBang",
							"Data": "!"
						},
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "img"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "../assets/16d6779ae10315f9.png"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-0pij6oj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-0pij6oj"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "另外需要注意的是，虽然有的十进制小数，比如"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "1.875"
				},
				{
					"Type": "NodeText",
					"Data": "可以被很容易的转换成二进制数"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "1.111"
				},
				{
					"Type": "NodeText",
					"Data": "，但是更多的小数是无法直接转换成二进制的，比如说"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "0.3"
				},
				{
					"Type": "NodeText",
					"Data": "，它转换成的二进制小数就是一个无限小数，但是我们现在只能用 4 个字节或者 8 个字节来表示这个小数，所以只能进行一些舍入来近似的表示，所以我们说计算机的浮点数表示有时是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "不精确"
				},
				{
					"Type": "NodeText",
					"Data": "的。"
				}
			]
		},
		{
			"ID": "20210708003510-2wuhb0q",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210708003510-2wuhb0q"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "设置最大位数和小数位数"
				}
			]
		},
		{
			"ID": "20210708003510-wwnq72n",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-wwnq72n"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在定义浮点数类型时，还可以在"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "FLOAT"
				},
				{
					"Type": "NodeText",
					"Data": "或者"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "DOUBLE"
				},
				{
					"Type": "NodeText",
					"Data": "后边跟上两个参数，就像这样："
				}
			]
		},
		{
			"ID": "20210708003510-w28o5sv",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-w28o5sv"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "FLOAT(M, D)\nDOUBLE(M, D)\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-ls1n255",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-ls1n255"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对于我们用户而言，使用的都是十进制小数。如果我们事先知道表中的某个列要存储的小数在一定范围内，我们可以使用"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "FLOAT(M, D)"
				},
				{
					"Type": "NodeText",
					"Data": "或者"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "DOUBLE(M, D)"
				},
				{
					"Type": "NodeText",
					"Data": "来限制可以存储到本列中的小数范围。其中："
				}
			]
		},
		{
			"ID": "20210708003510-sgs27mu",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210708003510-sgs27mu"
			},
			"Children": [
				{
					"ID": "20210708003510-5n5lbif",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-5n5lbif"
					},
					"Children": [
						{
							"ID": "20210708003510-gy2en9e",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-gy2en9e"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "M"
								},
								{
									"Type": "NodeText",
									"Data": "表示该小数最多需要的十进制有效数字个数。"
								}
							]
						},
						{
							"ID": "20210708003510-z3bo1l9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-z3bo1l9"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "注意是"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "有效数字"
								},
								{
									"Type": "NodeText",
									"Data": "个数，比方说对于小数"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "-2.3"
								},
								{
									"Type": "NodeText",
									"Data": "来说有效数字个数就是 2，对于小数"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "0.9"
								},
								{
									"Type": "NodeText",
									"Data": "来说有效数字个数就是"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "1"
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-yb5v5ar",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-yb5v5ar"
					},
					"Children": [
						{
							"ID": "20210708003510-eqdi4lr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-eqdi4lr"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "D"
								},
								{
									"Type": "NodeText",
									"Data": "表示该小数的小数点后的十进制数字个数。"
								}
							]
						},
						{
							"ID": "20210708003510-3e4dk17",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-3e4dk17"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "这个好理解，小数点后有几个十进制数字，"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "D"
								},
								{
									"Type": "NodeText",
									"Data": "的值就是什么。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-1894yap",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-1894yap"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "举个例子看一下，设置了"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "M"
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "D"
				},
				{
					"Type": "NodeText",
					"Data": "的单精度浮点数的取值范围的变化："
				}
			]
		},
		{
			"ID": "20210708003510-jri4do5",
			"Type": "NodeTable",
			"Data": "|     类型      |     取值范围     |\n| :-----------: | :--------------: |\n| `FLOAT(4, 1)` |   -999.9~999.9   |\n| `FLOAT(5, 1)` |  -9999.9~9999.9  |\n| `FLOAT(6, 1)` | -99999.9~99999.9 |\n| `FLOAT(4, 0)` |    -9999~9999    |\n| `FLOAT(4, 1)` |   -999.9~999.9   |\n| `FLOAT(4, 2)` |   -99.99~99.99   |",
			"TableAligns": [
				2,
				2
			],
			"Properties": {
				"id": "20210708003510-jri4do5"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Children": [
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "类型"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "取值范围"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "FLOAT(4, 1)"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "-999.9~999.9"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "FLOAT(5, 1)"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "-9999.9~9999.9"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "FLOAT(6, 1)"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "-99999.9~99999.9"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "FLOAT(4, 0)"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "-9999~9999"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "FLOAT(4, 1)"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "-999.9~999.9"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "FLOAT(4, 2)"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "-99.99~99.99"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-pd7kn2p",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-pd7kn2p"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可以看到，在 D 相同的情况下，M 越大，该类型的取值范围越大；在 M 相同的情况下，D 越大，该类型的取值范围越小。当然，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "M"
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "D"
				},
				{
					"Type": "NodeText",
					"Data": "的取值也不是无限大的，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "M"
				},
				{
					"Type": "NodeText",
					"Data": "的取值范围是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "1~255"
				},
				{
					"Type": "NodeText",
					"Data": "，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "D"
				},
				{
					"Type": "NodeText",
					"Data": "的取值范围是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "0~30"
				},
				{
					"Type": "NodeText",
					"Data": "，而且"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "D"
				},
				{
					"Type": "NodeText",
					"Data": "的值必须不大于"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "M"
				},
				{
					"Type": "NodeText",
					"Data": "。"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "M"
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "D"
				},
				{
					"Type": "NodeText",
					"Data": "都是可选的，如果我们省略了它们，那它们的值按照机器支持的最大值来存储。"
				}
			]
		},
		{
			"ID": "20210708003510-tjibybf",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-tjibybf"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "定点（精确值）🔥"
				}
			]
		},
		{
			"ID": "20210708003510-un05nmi",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210708003510-un05nmi"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "定点数类型"
				}
			]
		},
		{
			"ID": "20210708003510-p4fjajk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-p4fjajk"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "正因为用浮点数表示小数可能会有不精确的情况，在一些情况下我们必须保证小数是精确的，所以设计"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "MySQL"
				},
				{
					"Type": "NodeText",
					"Data": "的大叔们提出一种称之为"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "定点数"
				},
				{
					"Type": "NodeText",
					"Data": "的数据类型，它也是存储小数的一种方式："
				}
			]
		},
		{
			"ID": "20210708003510-q67niwh",
			"Type": "NodeTable",
			"Data": "|      类型       | 占用的存储空间（单位：字节） |   取值范围    |\n| :-------------: | :--------------------------: | :-----------: |\n| `DECIMAL(M, D)` |        取决于 M 和 D         | 取决于 M 和 D |",
			"TableAligns": [
				2,
				2,
				2
			],
			"Properties": {
				"id": "20210708003510-q67niwh"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Children": [
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "类型"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "占用的存储空间（单位：字节）"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "取值范围"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "DECIMAL(M, D)"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "取决于 M 和 D"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "取决于 M 和 D"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-kwosx2q",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-kwosx2q"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "此处的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "M"
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "D"
				},
				{
					"Type": "NodeText",
					"Data": "的含义与浮点数中的含义一样。"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "M"
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "D"
				},
				{
					"Type": "NodeText",
					"Data": "对取值范围的影响我们之前在唠叨浮点数的时候已经介绍过了，但是我们又说单精度浮点数类型"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "FLOAT(M, D)"
				},
				{
					"Type": "NodeText",
					"Data": "占用的字节数一直都是 4 字节，双精度浮点数"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "DOUBLE(M, D)"
				},
				{
					"Type": "NodeText",
					"Data": "占用的字节数一直都是 8 字节，它们占用的存储空间大小并不随着 M 和 D 的值的变动而变动，为啥到了这个所谓的定点数类型"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "DECIMAL(M, D)"
				},
				{
					"Type": "NodeText",
					"Data": "中，它占用的存储空间大小就和"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "M"
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "D"
				},
				{
					"Type": "NodeText",
					"Data": "的取值有关了呢？哈哈，回答这个问题还得且听我细细道来。"
				}
			]
		},
		{
			"ID": "20210708003510-3sp4qi9",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210708003510-3sp4qi9"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "分析"
				}
			]
		},
		{
			"ID": "20210708003510-ijlnkd2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-ijlnkd2"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们说定点数是一种精确的小数，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "为了达到精确的目的"
				},
				{
					"Type": "NodeText",
					"Data": "我们就"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "不能把它转换成二进制小数之后再存储"
				},
				{
					"Type": "NodeText",
					"Data": "(因为有很多十进制小数转为二进制小数后需要进行舍入操作，导致二进制小数表示的数值是不精确的，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "如 0.3"
				},
				{
					"Type": "NodeText",
					"Data": ")。其实转念一想，所谓的小数只是把两个十进制整数用小数点分割开来而已，我们只要把小数点左右的两个十进制整数给存储起来，那不就是精确的了么。比方说对于十进制小数"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "2.38"
				},
				{
					"Type": "NodeText",
					"Data": "来说，我们可以把这个小数的小数点左右的两个整数，也就是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "2"
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "38"
				},
				{
					"Type": "NodeText",
					"Data": "分别保存起来，那么不就相当于保存了一个精确的小数么，这波操作是不是很 6。"
				}
			]
		},
		{
			"ID": "20210708003510-rqurf2t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-rqurf2t"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当然事情并没有这么简单，对于给定"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "M"
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "D"
				},
				{
					"Type": "NodeText",
					"Data": "值的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "DECIMAL(M, D)"
				},
				{
					"Type": "NodeText",
					"Data": "类型，比如"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "DEMCIMAL(16, 4)"
				},
				{
					"Type": "NodeText",
					"Data": "来说："
				}
			]
		},
		{
			"ID": "20210708003510-wdca0ui",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210708003510-wdca0ui"
			},
			"Children": [
				{
					"ID": "20210708003510-vq4jrju",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-vq4jrju"
					},
					"Children": [
						{
							"ID": "20210708003510-5l5wce8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-5l5wce8"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "首先确定小数点左边的整数最多需要存储的十进制位数是 12 位，小数点右边的整数需要存储的十进制位数是 4 位，如图所示："
								}
							]
						},
						{
							"ID": "20210708003510-y4k92kv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-y4k92kv"
							},
							"Children": [
								{
									"Type": "NodeImage",
									"Children": [
										{
											"Type": "NodeBang",
											"Data": "!"
										},
										{
											"Type": "NodeOpenBracket",
											"Data": "["
										},
										{
											"Type": "NodeLinkText",
											"Data": "img"
										},
										{
											"Type": "NodeCloseBracket",
											"Data": "]"
										},
										{
											"Type": "NodeOpenParen",
											"Data": "("
										},
										{
											"Type": "NodeLinkDest",
											"Data": "../assets/16d6779ad10263a2.png"
										},
										{
											"Type": "NodeCloseParen",
											"Data": ")"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-nbwoej0",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-nbwoej0"
					},
					"Children": [
						{
							"ID": "20210708003510-57e5kqa",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-57e5kqa"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "从小数点位置出发，"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "每个整数每隔 9 个十进制位划分为 1 组"
								},
								{
									"Type": "NodeText",
									"Data": "，效果就是这样："
								}
							]
						},
						{
							"ID": "20210708003510-h17rhvu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-h17rhvu"
							},
							"Children": [
								{
									"Type": "NodeImage",
									"Children": [
										{
											"Type": "NodeBang",
											"Data": "!"
										},
										{
											"Type": "NodeOpenBracket",
											"Data": "["
										},
										{
											"Type": "NodeLinkText",
											"Data": "img"
										},
										{
											"Type": "NodeCloseBracket",
											"Data": "]"
										},
										{
											"Type": "NodeOpenParen",
											"Data": "("
										},
										{
											"Type": "NodeLinkDest",
											"Data": "../assets/16d6779ad21ff99f.png"
										},
										{
											"Type": "NodeCloseParen",
											"Data": ")"
										}
									]
								}
							]
						},
						{
							"ID": "20210708003510-izq5tr3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-izq5tr3"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "从图中可以看出，"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "如果不足 9 个十进制位，也会被划分成一组"
								},
								{
									"Type": "NodeText",
									"Data": "。🔥"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-mzx67f0",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-mzx67f0"
					},
					"Children": [
						{
							"ID": "20210708003510-am2tp5u",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-am2tp5u"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "针对每个组中的十进制数字，将其转换为二进制数字进行存储"
								},
								{
									"Type": "NodeText",
									"Data": "，根据组中包含的十进制数字位数不同，所需的存储空间大小也不同，具体见下表："
								}
							]
						},
						{
							"ID": "20210708003510-oa9a0ye",
							"Type": "NodeTable",
							"Data": "|      组中包含的十进制位数       | 占用存储空间大小（单位：字节） |\n| :-----------------------------: | :----------------------------: |\n| 1 或 2（0 ～ 9，0 ～ 99，下同） |               1                |\n| 3 或 4（0 ～ 999，9999，下同）  |               2                |\n|             5 或 6              |               3                |\n|           7 或 8 或 9           |               4                |",
							"TableAligns": [
								2,
								2
							],
							"Properties": {
								"id": "20210708003510-oa9a0ye"
							},
							"Children": [
								{
									"Type": "NodeTableHead",
									"Children": [
										{
											"Type": "NodeTableRow",
											"Children": [
												{
													"Type": "NodeTableCell",
													"TableCellAlign": 2,
													"Children": [
														{
															"Type": "NodeText",
															"Data": "组中包含的十进制位数"
														}
													]
												},
												{
													"Type": "NodeTableCell",
													"TableCellAlign": 2,
													"Children": [
														{
															"Type": "NodeText",
															"Data": "占用存储空间大小（单位：字节）"
														}
													]
												}
											]
										}
									]
								},
								{
									"Type": "NodeTableRow",
									"TableAligns": [
										2,
										2
									],
									"Children": [
										{
											"Type": "NodeTableCell",
											"TableCellAlign": 2,
											"Children": [
												{
													"Type": "NodeText",
													"Data": "1 或 2（0 ～ 9，0 ～ 99，下同）"
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"TableCellAlign": 2,
											"Children": [
												{
													"Type": "NodeText",
													"Data": "1"
												}
											]
										}
									]
								},
								{
									"Type": "NodeTableRow",
									"TableAligns": [
										2,
										2
									],
									"Children": [
										{
											"Type": "NodeTableCell",
											"TableCellAlign": 2,
											"Children": [
												{
													"Type": "NodeText",
													"Data": "3 或 4（0 ～ 999，9999，下同）"
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"TableCellAlign": 2,
											"Children": [
												{
													"Type": "NodeText",
													"Data": "2"
												}
											]
										}
									]
								},
								{
									"Type": "NodeTableRow",
									"TableAligns": [
										2,
										2
									],
									"Children": [
										{
											"Type": "NodeTableCell",
											"TableCellAlign": 2,
											"Children": [
												{
													"Type": "NodeText",
													"Data": "5 或 6"
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"TableCellAlign": 2,
											"Children": [
												{
													"Type": "NodeText",
													"Data": "3"
												}
											]
										}
									]
								},
								{
									"Type": "NodeTableRow",
									"TableAligns": [
										2,
										2
									],
									"Children": [
										{
											"Type": "NodeTableCell",
											"TableCellAlign": 2,
											"Children": [
												{
													"Type": "NodeText",
													"Data": "7 或 8 或 9"
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"TableCellAlign": 2,
											"Children": [
												{
													"Type": "NodeText",
													"Data": "4"
												}
											]
										}
									]
								}
							]
						},
						{
							"ID": "20210708003510-tt71n8e",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-tt71n8e"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "所以"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "DECIMAL(16, 4)"
								},
								{
									"Type": "NodeText",
									"Data": "共需要占用"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "8"
								},
								{
									"Type": "NodeText",
									"Data": "个字节的存储空间大小，这 8 个字节由下边 3 个部分组成："
								}
							]
						},
						{
							"ID": "20210708003510-fgvnifa",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210708003510-fgvnifa"
							},
							"Children": [
								{
									"ID": "20210708003510-787xlny",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210708003510-787xlny"
									},
									"Children": [
										{
											"ID": "20210708003510-3nz0hov",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210708003510-3nz0hov"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "第 1 组包含 3 个十进制位，需要使用 2 个字节存储（这里是按照 16,4 划分的，别忘了！即使没有值也占用空间！）。"
												}
											]
										}
									]
								},
								{
									"ID": "20210708003510-nxukxnf",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210708003510-nxukxnf"
									},
									"Children": [
										{
											"ID": "20210708003510-xdxpnoe",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210708003510-xdxpnoe"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "第 2 组包含 9 个十进制位，需要使用 4 个字节存储。"
												}
											]
										}
									]
								},
								{
									"ID": "20210708003510-t5baqul",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210708003510-t5baqul"
									},
									"Children": [
										{
											"ID": "20210708003510-02inldy",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210708003510-02inldy"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "第 3 组包含 4 个十进制位，需要使用 2 个字节存储。"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-t8qm953",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-t8qm953"
					},
					"Children": [
						{
							"ID": "20210708003510-8xlpttc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-8xlpttc"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "将转换完成的比特位序列的最高位设置为 1？为啥。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-5cb7k3j",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210708003510-5cb7k3j"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "例子"
				}
			]
		},
		{
			"ID": "20210708003510-yellyru",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-yellyru"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这些步骤看的有一丢丢懵逼吧，别着急，举个例子就都清楚了。比方说我们使用定点数类型"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "DECIMAL(16, 4)"
				},
				{
					"Type": "NodeText",
					"Data": "来存储十进制小数"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "1234567890.1234"
				},
				{
					"Type": "NodeText",
					"Data": "，这个小数会被划分成 3 个部分："
				}
			]
		},
		{
			"ID": "20210708003510-y3woafn",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-y3woafn"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "1 234567890 1234\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-zucrz3g",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-zucrz3g"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "也就是："
				}
			]
		},
		{
			"ID": "20210708003510-ei6vejs",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210708003510-ei6vejs"
			},
			"Children": [
				{
					"ID": "20210708003510-b8pkwvt",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-b8pkwvt"
					},
					"Children": [
						{
							"ID": "20210708003510-iqql5e2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-iqql5e2"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "第 1 组中包含整数"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "1"
								},
								{
									"Type": "NodeText",
									"Data": "。"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "但是该组有 3 个十进制空间！"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-vwhpf0u",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-vwhpf0u"
					},
					"Children": [
						{
							"ID": "20210708003510-r1jxvwx",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-r1jxvwx"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "第 2 组中包含整数"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "234567890"
								},
								{
									"Type": "NodeText",
									"Data": "。该组有 9 个十进制空间"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-ga65mp1",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-ga65mp1"
					},
					"Children": [
						{
							"ID": "20210708003510-v2jtpyf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-v2jtpyf"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "第 3 组中包含整数"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "1234"
								},
								{
									"Type": "NodeText",
									"Data": "。该组有 4 个十进制空间"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-u32s6o6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-u32s6o6"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "然后将每一组中的十进制数字转换成对应的二进制数字："
				}
			]
		},
		{
			"ID": "20210708003510-iuir7nq",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210708003510-iuir7nq"
			},
			"Children": [
				{
					"ID": "20210708003510-3vlzewu",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-3vlzewu"
					},
					"Children": [
						{
							"ID": "20210708003510-73ic2so",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-73ic2so"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "第 1 组占用 2 个字节，整数"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "1"
								},
								{
									"Type": "NodeText",
									"Data": "对应的二进制数就是（字节之间实际上没有空格，只不过为了大家理解上的方便我们加了一个空格）（"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "这里是按照 16,4 划分的，别忘了！即使没有值也占用空间！"
								},
								{
									"Type": "NodeText",
									"Data": "）。："
								}
							]
						},
						{
							"ID": "20210708003510-zfxp3h2",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210708003510-zfxp3h2"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker"
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "00000000 00000001\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						},
						{
							"ID": "20210708003510-usuu8t4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-usuu8t4"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "二进制看起来太难受，我们还是转换成对应的十六进制看一下："
								}
							]
						},
						{
							"ID": "20210708003510-1xdzwlh",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210708003510-1xdzwlh"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker"
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "0x0001\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-5y2t3ca",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-5y2t3ca"
					},
					"Children": [
						{
							"ID": "20210708003510-hlw8m15",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-hlw8m15"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "第 2 组占用 4 个字节，整数"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "234567890"
								},
								{
									"Type": "NodeText",
									"Data": "对应的十六进制数就是："
								}
							]
						},
						{
							"ID": "20210708003510-pzz1xfm",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210708003510-pzz1xfm"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker"
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "0x0DFB38D2\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-kv1qz7r",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-kv1qz7r"
					},
					"Children": [
						{
							"ID": "20210708003510-mzwy6ym",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-mzwy6ym"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "第 3 组占用 2 个字节，整数"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "1234"
								},
								{
									"Type": "NodeText",
									"Data": "对应的十六进制数就是："
								}
							]
						},
						{
							"ID": "20210708003510-pwc9ucz",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210708003510-pwc9ucz"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker"
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "0x04D2\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-12t4l8v",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-12t4l8v"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "所以将这些十六进制数字连起来之后就是："
				}
			]
		},
		{
			"ID": "20210708003510-tvnj47x",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-tvnj47x"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "0x00010DFB38D204D2\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-b03d2mo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-b03d2mo"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "最后还要将这个结果的最高位设置为 1，所以最终十进制小数"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "1234567890.1234"
				},
				{
					"Type": "NodeText",
					"Data": "使用定点数类型"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "DECIMAL(16, 4)"
				},
				{
					"Type": "NodeText",
					"Data": "存储时共占用 8 个字节，具体内容为："
				}
			]
		},
		{
			"ID": "20210708003510-6vyqt9f",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-6vyqt9f"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "0x80010DFB38D204D2\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-t69iymb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-t69iymb"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "有的同学会问，如果我们想使用定点数类型"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "DECIMAL(16, 4)"
				},
				{
					"Type": "NodeText",
					"Data": "存储一个负数怎么办，比方说"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "-1234567890.1234"
				},
				{
					"Type": "NodeText",
					"Data": "，这时只需要将"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "0x80010DFB38D204D2"
				},
				{
					"Type": "NodeText",
					"Data": "中的每一个比特位都执行一个取反操作就好，也就是得到下边这个结果："
				}
			]
		},
		{
			"ID": "20210708003510-l8j4h66",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-l8j4h66"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "0x7FFEF204C72DFB2D\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-085ncim",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-085ncim"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "从上边的叙述中我们可以知道，对于"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "DECIMAL(M, D)"
				},
				{
					"Type": "NodeText",
					"Data": "类型来说，给定的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "M"
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "D"
				},
				{
					"Type": "NodeText",
					"Data": "的值不同，所需的存储空间大小也不同。可以看到，与浮点数相比，定点数需要更多的空间来存储数据，所以如果不是在某些需要存储精确小数的场景下，一般的小数用浮点数表示就足够了。"
				}
			]
		},
		{
			"ID": "20210708003510-625hcqb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-625hcqb"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对于定点数类型"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "DECIMAL(M, D)"
				},
				{
					"Type": "NodeText",
					"Data": "来说，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "M"
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "D"
				},
				{
					"Type": "NodeText",
					"Data": "都是可选的，默认的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "M"
				},
				{
					"Type": "NodeText",
					"Data": "的值是 10，默认的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "D"
				},
				{
					"Type": "NodeText",
					"Data": "的值是 0，也就是说下列等式是成立的："
				}
			]
		},
		{
			"ID": "20210708003510-8c8rh2q",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-8c8rh2q"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "DECIMAL = DECIMAL(10) = DECIMAL(10, 0)\nDECIMAL(n) = DECIMAL(n, 0)\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-c45dp90",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-c45dp90"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "另外"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "M"
				},
				{
					"Type": "NodeText",
					"Data": "的范围是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "1~65"
				},
				{
					"Type": "NodeText",
					"Data": "，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "D"
				},
				{
					"Type": "NodeText",
					"Data": "的范围是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "0~30"
				},
				{
					"Type": "NodeText",
					"Data": "，且"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "D"
				},
				{
					"Type": "NodeText",
					"Data": "的值不能超过"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "M"
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20210708003510-6ue46d4",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-6ue46d4"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "无符号数值类型 🔥"
				}
			]
		},
		{
			"ID": "20210708003510-lcf43ez",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-lcf43ez"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对于数值类型，包括整数、浮点数和定点数，有些情况下我们只需要用到无符号数（就是非负数）。"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "MySQL"
				},
				{
					"Type": "NodeText",
					"Data": "给我们提供了一个表示无符号数值类型的方式，就是在原数值类型后加一个单词"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "UNSIGNED"
				},
				{
					"Type": "NodeText",
					"Data": "："
				}
			]
		},
		{
			"ID": "20210708003510-6lwnkdb",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-6lwnkdb"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "数值类型 UNSIGNED\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-ldzhmvz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-ldzhmvz"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "大家可以把它当成一种新类型对待，比如"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "INT UNSIGNED"
				},
				{
					"Type": "NodeText",
					"Data": "就表示无符号整数，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "FLOAT UNSIGNED"
				},
				{
					"Type": "NodeText",
					"Data": "表示无符号浮点数，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "DECIMAL UNSIGNED"
				},
				{
					"Type": "NodeText",
					"Data": "表示无符号定点数。"
				}
			]
		},
		{
			"ID": "20210708003510-alacjgc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-alacjgc"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "::: tip 提示"
				}
			]
		},
		{
			"ID": "20210708003510-y6rrmyq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-y6rrmyq"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在使用的存储空间大小相同的情况下，无符号整数可以表示的正整数范围比有符号整数能表示的正整数范围大一倍。不过受浮点数和定点数具体的存储格式影响，无符号浮点数和定点数并不能提升正数的表示范围。"
				}
			]
		},
		{
			"ID": "20210708003510-dnczw3a",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-dnczw3a"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": ":::"
				}
			]
		},
		{
			"ID": "20210708003510-l9r8haj",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708003510-l9r8haj"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "日期和时间类型"
				}
			]
		},
		{
			"ID": "20210708003510-7x12igp",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-7x12igp"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "简介"
				}
			]
		},
		{
			"ID": "20210708003510-nhbx8x8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-nhbx8x8"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "MySQL"
				},
				{
					"Type": "NodeText",
					"Data": "为我们提供了多种关于时间和日期的类型，各种类型能表示的范围如下（版本更新后又变了）："
				}
			]
		},
		{
			"ID": "20210708003510-kcnlxh9",
			"Type": "NodeTable",
			"Data": "|       类型       | 存储空间要求（根据取值范围） |                    取值范围                    |                               含义                                |\n| :--------------: | :--------------------------: | :--------------------------------------------: | :---------------------------------------------------------------: |\n| `YEAR`（不用？） |            1 字节            |                   1901~2155                    |                              年份值                               |\n|      `DATE`      |            3 字节            |          '1000-01-01' ~ '9999-12-31'           |                              日期值                               |\n|      `TIME`      |            3 字节            |           '-838:59:59' ~ '838:59:59'           |                              时间值                               |\n|    `DATETIME`    |            8 字节            | '1000-01-01 00:00:00' ～ '9999-12-31 23:59:59' |                           日期加时间值                            |\n|   `TIMESTAMP`    |            4 字节            | '1970-01-01 00:00:01' ～ '2038-01-19 03:14:07' | 时间戳。若不给这个字段赋值，或赋值为 null，则默认使用当前系统时间 |",
			"TableAligns": [
				2,
				2,
				2,
				2
			],
			"Properties": {
				"id": "20210708003510-kcnlxh9"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Children": [
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "类型"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "存储空间要求（根据取值范围）"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "取值范围"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "含义"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "YEAR"
								},
								{
									"Type": "NodeText",
									"Data": "（不用？）"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "1 字节"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "1901~2155"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "年份值"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "DATE"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "3 字节"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "'1000-01-01' ~ '9999-12-31'"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "日期值"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "TIME"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "3 字节"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "'-838:59:59' ~ '838:59:59'"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "时间值"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "DATETIME"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "8 字节"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "'1000-01-01 00:00:00' ～ '9999-12-31 23:59:59'"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "日期加时间值"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "TIMESTAMP"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "4 字节"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "'1970-01-01 00:00:01' ～ '2038-01-19 03:14:07'"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "时间戳。若不给这个字段赋值，或赋值为 null，则默认使用当前系统时间"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-seqahx8",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20210708003510-seqahx8"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e "
				},
				{
					"ID": "20210708003510-vumfbqk",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20210708003510-vumfbqk"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "除了年月日之外，Oracle 中使用的 DATE 型还包含时分秒"
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-rje3qre",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-rje3qre"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "MySQL5.6.4"
				},
				{
					"Type": "NodeText",
					"Data": "这个版本之后，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "TIME"
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "DATETIME"
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "TIMESTAMP"
				},
				{
					"Type": "NodeText",
					"Data": "这几种类型添加了对毫秒、微秒的支持。由于毫秒、微秒都不到 1 秒，所以也被称为"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "小数秒"
				},
				{
					"Type": "NodeText",
					"Data": "，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "MySQL"
				},
				{
					"Type": "NodeText",
					"Data": "最多支持 6 位小数秒的精度，各个位代表的意思如下："
				}
			]
		},
		{
			"ID": "20210708003510-0tk9zom",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-0tk9zom"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Children": [
						{
							"Type": "NodeBang",
							"Data": "!"
						},
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "img"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "../assets/20210107230954415.png"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-czqxos8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-czqxos8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果我们想让"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "TIME"
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "DATETIME"
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "TIMESTAMP"
				},
				{
					"Type": "NodeText",
					"Data": "这几种类型支持小数秒，可以这样写："
				}
			]
		},
		{
			"ID": "20210708003510-fiuvclz",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-fiuvclz"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "类型(小数秒位数)\n\n其中的小数秒位数可以在0、1、2、3、4、5、6中选择\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-zy2p9iq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-zy2p9iq"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "比如"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "DATETIME(0)"
				},
				{
					"Type": "NodeText",
					"Data": "表示精确到秒，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "DATETIME(3)"
				},
				{
					"Type": "NodeText",
					"Data": "表示精确到毫秒，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "DATETIME(5)"
				},
				{
					"Type": "NodeText",
					"Data": "表示精确到 10 微秒，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "DATETIME(6)"
				},
				{
					"Type": "NodeText",
					"Data": "表示精确到微秒。如果你在选择"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "TIME"
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "DATETIME"
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "TIMESTAMP"
				},
				{
					"Type": "NodeText",
					"Data": "这几种类型的时候添加了对小数秒的支持，那么所需的存储空间需要相应的扩大，保留不同的小数秒位数，那么增加的存储空间大小也不同，如下表（同定点数需要空间一样，都是根据 10 进制位数计算出的）："
				}
			]
		},
		{
			"ID": "20210708003510-lwo3eds",
			"Type": "NodeTable",
			"Data": "| 保留的小数秒位数 | 额外需要的存储空间要 |\n| :--------------: | :------------------: |\n|        0         |        0 字节        |\n|      1 或 2      |        1 字节        |\n|      3 或 4      |        2 字节        |\n|      5 或 6      |        3 字节        |",
			"TableAligns": [
				2,
				2
			],
			"Properties": {
				"id": "20210708003510-lwo3eds"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Children": [
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "保留的小数秒位数"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "额外需要的存储空间要"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "0"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "0 字节"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "1 或 2"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "1 字节"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "3 或 4"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "2 字节"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "5 或 6"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "3 字节"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-0jno2h3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-0jno2h3"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "也就是说如果你选择使用"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "DATETIME(1)"
				},
				{
					"Type": "NodeText",
					"Data": "，那么需要的存储空间就是在"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "DATETIME"
				},
				{
					"Type": "NodeText",
					"Data": "的空间上再加上小数秒需要的空间，就是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "8 + 1 = 9"
				},
				{
					"Type": "NodeText",
					"Data": "个字节，类似的，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "DATETIME(3)"
				},
				{
					"Type": "NodeText",
					"Data": "就需要"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "8 + 2 = 10"
				},
				{
					"Type": "NodeText",
					"Data": "个字节。所以，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "MySQL5.6.4"
				},
				{
					"Type": "NodeText",
					"Data": "这个版本之后的各个类型需要的存储空间和取值范围就如下："
				}
			]
		},
		{
			"ID": "20210708003510-sjg66g4",
			"Type": "NodeTable",
			"Data": "|    类型     | 存储空间要求（根据取值范围） |                             取值范围                             |                               含义                                |\n| :---------: | :--------------------------: | :--------------------------------------------------------------: | :---------------------------------------------------------------: |\n|   `YEAR`    |            1 字节            |                            1901~2155                             |                              年份值                               |\n|   `DATE`    |            3 字节            |                   '1000-01-01' ~ '9999-12-31'                    |                              日期值                               |\n|   `TIME`    |   3 字节+小数秒的存储空间    |           '-838:59:59[.000000]' ~ '838:59:59[.000000]'           |                              时间值                               |\n| `DATETIME`  |   5 字节+小数秒的存储空间    | '1000-01-01 00:00:00[.000000]' ～ '9999-12-31 23:59:59'[.999999] |                           日期加时间值                            |\n| `TIMESTAMP` |   4 字节+小数秒的存储空间    | '1970-01-01 00:00:01[.000000]' ～ '2038-01-19 03:14:07'[.999999] | 时间戳。若不给这个字段赋值，或赋值为 null，则默认使用当前系统时间 |",
			"TableAligns": [
				2,
				2,
				2,
				2
			],
			"Properties": {
				"id": "20210708003510-sjg66g4"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Children": [
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "类型"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "存储空间要求（根据取值范围）"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "取值范围"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "含义"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "YEAR"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "1 字节"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "1901~2155"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "年份值"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "DATE"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "3 字节"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "'1000-01-01' ~ '9999-12-31'"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "日期值"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "TIME"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "3 字节+小数秒的存储空间"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "'-838:59:59[.000000]' ~ '838:59:59[.000000]'"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "时间值"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "DATETIME"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "5 字节+小数秒的存储空间"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "'1000-01-01 00:00:00[.000000]' ～ '9999-12-31 23:59:59'[.999999]"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "日期加时间值"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "TIMESTAMP"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "4 字节+小数秒的存储空间"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "'1970-01-01 00:00:01[.000000]' ～ '2038-01-19 03:14:07'[.999999]"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "时间戳。若不给这个字段赋值，或赋值为 null，则默认使用当前系统时间"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-3nqjco2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-3nqjco2"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "大家应该发现其中的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "在没有存储小数秒的情况下，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "DATETIME"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "类型占用的存储空间从原来的 8 字节变成了 5 字节"
				},
				{
					"Type": "NodeText",
					"Data": "，这是因为设计"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "MySQL"
				},
				{
					"Type": "NodeText",
					"Data": "的大叔背后做了些努力，使"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "存储格式变得更紧凑了"
				},
				{
					"Type": "NodeText",
					"Data": "些（在"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "MySQL5.6.4"
				},
				{
					"Type": "NodeText",
					"Data": "这个版本之后）。"
				}
			]
		},
		{
			"ID": "20210708003510-bccp6kl",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-bccp6kl"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "YEAR"
				}
			]
		},
		{
			"ID": "20210708003510-dri7tkj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-dri7tkj"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "YEAR"
				},
				{
					"Type": "NodeText",
					"Data": "类型也可以写成"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "YEAR(4)"
				},
				{
					"Type": "NodeText",
					"Data": "，它单纯表示一个年份值，取值范围为"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "1901 ～ 2155"
				},
				{
					"Type": "NodeText",
					"Data": "，仅仅占用 1 个字节大小而已。因为可以存储的年份值有限，如果我们想存储更大范围的年份值，可以不使用"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "MySQL"
				},
				{
					"Type": "NodeText",
					"Data": "自带的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "YEAR"
				},
				{
					"Type": "NodeText",
					"Data": "类型，换成"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "SMALLINT"
				},
				{
					"Type": "NodeText",
					"Data": "（2 字节）或者字符串类型啥的都可以。"
				}
			]
		},
		{
			"ID": "20210708003510-97pd5tk",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20210708003510-97pd5tk"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e "
				},
				{
					"ID": "20210708003510-htde248",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20210708003510-htde248"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "小贴士： 曾经也有 YEAR(2)这种使用 2 个数字来表示年份的类型，比方说数字 99 表示 1999 年。不过在 MySQL 5.7.5 之后就不再支持这种类型了，我们稍微了解一下就好了。"
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-3vduq1e",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-3vduq1e"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "DATE、TIME 和 DATETIME"
				}
			]
		},
		{
			"ID": "20210708003510-ldsx7p5",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210708003510-ldsx7p5"
			},
			"Children": [
				{
					"ID": "20210708003510-lyi4edd",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-lyi4edd"
					},
					"Children": [
						{
							"ID": "20210708003510-g9kl6ul",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-g9kl6ul"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "DATE"
								},
								{
									"Type": "NodeText",
									"Data": "表示日期，格式是"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "YYYY-MM-DD"
								},
								{
									"Type": "NodeText",
									"Data": "；"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-tdsegwz",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-tdsegwz"
					},
					"Children": [
						{
							"ID": "20210708003510-0u6x5e0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-0u6x5e0"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "TIME"
								},
								{
									"Type": "NodeText",
									"Data": "表示时间，格式是"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "hh:mm:ss[.uuuuuu]"
								},
								{
									"Type": "NodeText",
									"Data": "或者"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "hhh:mm:ss[.uuuuuu]"
								},
								{
									"Type": "NodeText",
									"Data": "（有时候要存储的小时值是三位数）"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-bjp8peb",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-bjp8peb"
					},
					"Children": [
						{
							"ID": "20210708003510-lggz8d7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-lggz8d7"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "DATETIME"
								},
								{
									"Type": "NodeText",
									"Data": "表示日期+时间，格式是"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "YYYY-MM-DD hh:mm:ss[.uuuuuu]"
								},
								{
									"Type": "NodeText",
									"Data": "。其中的"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "YYYY"
								},
								{
									"Type": "NodeText",
									"Data": "、"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "MM"
								},
								{
									"Type": "NodeText",
									"Data": "、"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "DD"
								},
								{
									"Type": "NodeText",
									"Data": "、"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "hh"
								},
								{
									"Type": "NodeText",
									"Data": "、"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "mm"
								},
								{
									"Type": "NodeText",
									"Data": "、"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "ss"
								},
								{
									"Type": "NodeText",
									"Data": "、"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "uuuuuu"
								},
								{
									"Type": "NodeText",
									"Data": "分别表示年、月、日、时、分、秒、小数秒。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-tuaoiq5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-tuaoiq5"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "需要注意的是，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "DATETIME"
				},
				{
					"Type": "NodeText",
					"Data": "中的时间部分表示的是一天内的时间(00:00:00 ~ 23:59:59)，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "而 TIME 表示的是一段时间，而且可以表示负值（可用于存储计时）"
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20210708003510-q4t2q30",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-q4t2q30"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "TIMESTAMP"
				}
			]
		},
		{
			"ID": "20210708003510-4qk9beq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-4qk9beq"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "1970-01-01 00:00:00"
				},
				{
					"Type": "NodeText",
					"Data": "注定是一个特殊的时刻，我们把某个时刻距离"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "1970-01-01 00:00:00"
				},
				{
					"Type": "NodeText",
					"Data": "的秒数称为"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "时间戳"
				},
				{
					"Type": "NodeText",
					"Data": "。比方说当前时间是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "2018-01-24 11:39:21"
				},
				{
					"Type": "NodeText",
					"Data": "，距离"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "1970-01-01 00:00:00"
				},
				{
					"Type": "NodeText",
					"Data": "的秒数为"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "1516765161"
				},
				{
					"Type": "NodeText",
					"Data": "，那么"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "2018-01-24 11:39:21"
				},
				{
					"Type": "NodeText",
					"Data": "这个时刻的时间戳就是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "1516765161"
				},
				{
					"Type": "NodeText",
					"Data": "。不过在"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "MySQL5.6.4"
				},
				{
					"Type": "NodeText",
					"Data": "之后，时间戳的值也可以加入小数秒。"
				}
			]
		},
		{
			"ID": "20210708003510-1jn5dwn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-1jn5dwn"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "用时间戳存储时间的好处就是，它展示的值可以随着时区的变化而变化。比方说我们把"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "2018-01-24 11:39:21"
				},
				{
					"Type": "NodeText",
					"Data": "这个时刻存储到一个"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "TIMESTAMP"
				},
				{
					"Type": "NodeText",
					"Data": "的列中，那么在中国你看到的时间就是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "2018-01-24 11:39:21"
				},
				{
					"Type": "NodeText",
					"Data": "，如果你去了日本，他们哪里的使用的是东京时间，比北京时间早一个小时，所以他们那显示的就是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "2018-01-24 12:39:21"
				},
				{
					"Type": "NodeText",
					"Data": "。而如果你用"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "DATETIME"
				},
				{
					"Type": "NodeText",
					"Data": "存储"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "2018-01-24 11:39:21"
				},
				{
					"Type": "NodeText",
					"Data": "的话，那不同时区看到的时间值都是一样的。"
				}
			]
		},
		{
			"ID": "20210708003510-9i9hoyp",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-9i9hoyp"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "总结"
				}
			]
		},
		{
			"ID": "20210708003510-ktip89k",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-ktip89k"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "需要存储精确类型，可以使用 INT（BIGINT） UNSIGNED 存储时间戳即可"
				}
			]
		},
		{
			"ID": "20210708003510-guc8n23",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708003510-guc8n23"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "字符串类型"
				}
			]
		},
		{
			"ID": "20210708003510-3fz5eou",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-3fz5eou"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "字符和字符串"
				}
			]
		},
		{
			"ID": "20210708003510-r3edha0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-r3edha0"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "字符"
				},
				{
					"Type": "NodeText",
					"Data": "可以大致分为两种，一种叫"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "可见字符"
				},
				{
					"Type": "NodeText",
					"Data": "，一种叫"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "不可见字符"
				},
				{
					"Type": "NodeText",
					"Data": "。顾名思义，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "可见字符"
				},
				{
					"Type": "NodeText",
					"Data": "就是打印出来后能看见的字符。比如"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "'a'"
				},
				{
					"Type": "NodeText",
					"Data": "，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "'b'"
				},
				{
					"Type": "NodeText",
					"Data": "，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "'我'"
				},
				{
					"Type": "NodeText",
					"Data": "，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "'。'"
				},
				{
					"Type": "NodeText",
					"Data": " ... 这样的人眼能看见的单个的国家文字、标点符号、图形符号、数字等这样的东东，我们就叫做一个"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "可见字符"
				},
				{
					"Type": "NodeText",
					"Data": "。"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "不可见字符"
				},
				{
					"Type": "NodeText",
					"Data": "也好理解，就是打印机或者在黑框框里打印字符的时候有时候需要换行，打个制表符啥的，或者在输出某个字符的时候就发出"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "嘟"
				},
				{
					"Type": "NodeText",
					"Data": "地一声，这种我们看不到，只是为了控制输出效果的字符叫做"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "不可见字符"
				},
				{
					"Type": "NodeText",
					"Data": "。"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "字符串"
				},
				{
					"Type": "NodeText",
					"Data": "就是把字符连起来的样子，比如"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "'abc'"
				},
				{
					"Type": "NodeText",
					"Data": "，就是由"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "'a'"
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "'b'"
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "'c'"
				},
				{
					"Type": "NodeText",
					"Data": "三个字符连起来的一个"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "字符串"
				},
				{
					"Type": "NodeText",
					"Data": "，下边列举了 4 个字符串的例子："
				}
			]
		},
		{
			"ID": "20210708003510-y6oraom",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-y6oraom"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "'我喜欢你'\n'me, too'\n'give me a hug'\n'么么哒'\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-1jzfh7u",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-1jzfh7u"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "字符编码简介 🔥"
				}
			]
		},
		{
			"ID": "20210708003510-08vp2k8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-08vp2k8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在具体分析"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "MySQL"
				},
				{
					"Type": "NodeText",
					"Data": "中各个字符串类型之前，我们一定要先搞明白字符和字节的区别。字符是面向人的概念，字节是面向计算机的概念。如果你想在计算机中表示字符，那就需要将该字符与一个特定的字节序列对应起来，这个映射过程称之为"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "编码"
				},
				{
					"Type": "NodeText",
					"Data": "。不幸的是，这种映射关系并不是唯一的，不同的人制作了不同的编码方案，根据表示一个字符使用的字节数量是不是固定的，编码方案可以分为下边两种："
				}
			]
		},
		{
			"ID": "20210708003510-lzkvsx8",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210708003510-lzkvsx8"
			},
			"Children": [
				{
					"ID": "20210708003510-cf62e3j",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-cf62e3j"
					},
					"Children": [
						{
							"ID": "20210708003510-z3cz60u",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-z3cz60u"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "固定长度的编码方案"
								}
							]
						},
						{
							"ID": "20210708003510-wo2j4y2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-wo2j4y2"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "表示不同的字符所需要的字节数量是相同的。比方说"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "ASCII"
								},
								{
									"Type": "NodeText",
									"Data": "编码方案采用 1 个字节来编码一个字符，"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "ucs2"
								},
								{
									"Type": "NodeText",
									"Data": "采用 2 个字节来编码一个字符。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-hj1l7a3",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-hj1l7a3"
					},
					"Children": [
						{
							"ID": "20210708003510-wb9dvee",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-wb9dvee"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "变长的编码方案"
								}
							]
						},
						{
							"ID": "20210708003510-xctdjb3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-xctdjb3"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "表示不同的字符所需要的字节数量是不同的。比方说"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "utf8"
								},
								{
									"Type": "NodeText",
									"Data": "编码方案采用"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "1~3"
								},
								{
									"Type": "NodeText",
									"Data": "个字节来编码一个字符，"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "gb2312"
								},
								{
									"Type": "NodeText",
									"Data": "采用"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "1~2"
								},
								{
									"Type": "NodeText",
									"Data": "个字节来编码一个字符。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-rd2dpkg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-rd2dpkg"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对于不同的字符编码方案来说，同一个字符可能被编码成不同的字节序列。比如同样一个字符："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "我"
				},
				{
					"Type": "NodeText",
					"Data": "，在"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "utf8"
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "gb2312"
				},
				{
					"Type": "NodeText",
					"Data": "这两种编码方案下被映射成如下的字节序列："
				}
			]
		},
		{
			"ID": "20210708003510-yubmipz",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210708003510-yubmipz"
			},
			"Children": [
				{
					"ID": "20210708003510-69cfape",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-69cfape"
					},
					"Children": [
						{
							"ID": "20210708003510-oa98bdl",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-oa98bdl"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "utf8 编码方案"
								}
							]
						},
						{
							"ID": "20210708003510-ndirblk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-ndirblk"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "字符"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "'我'"
								},
								{
									"Type": "NodeText",
									"Data": "被编码成："
								}
							]
						},
						{
							"ID": "20210708003510-rk48bqy",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210708003510-rk48bqy"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker"
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "111001101000100010010001\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						},
						{
							"ID": "20210708003510-d1e84a8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-d1e84a8"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "共占用 3 个字节，用十六进制表示就是："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "0xE68891"
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-71cwarr",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-71cwarr"
					},
					"Children": [
						{
							"ID": "20210708003510-ytfioll",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-ytfioll"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "gb2312 编码方案"
								}
							]
						},
						{
							"ID": "20210708003510-5oipy9i",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-5oipy9i"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "字符"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "'我'"
								},
								{
									"Type": "NodeText",
									"Data": "被编码成："
								}
							]
						},
						{
							"ID": "20210708003510-3ef3doj",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210708003510-3ef3doj"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker"
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "1100111011010010\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						},
						{
							"ID": "20210708003510-upg6icg",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-upg6icg"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "共占用 2 个字节，用十六进制表示就是："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "0xCED2"
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-rz7oktm",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20210708003510-rz7oktm"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e "
				},
				{
					"ID": "20210708003510-9xqgf5p",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20210708003510-9xqgf5p"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "小贴士： 注：十六进制前边的 0x 是前缀，表示后边的是 16 进制数据。"
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-uee0ctv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-uee0ctv"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "另外，设计 MySQL 的大叔似乎对"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "编码方案"
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "字符集"
				},
				{
					"Type": "NodeText",
					"Data": "这两个概念并没做什么区分，也就是说我们之后所讲的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "utf8"
				},
				{
					"Type": "NodeText",
					"Data": "字符集指的就是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "utf8"
				},
				{
					"Type": "NodeText",
					"Data": "编码方案，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "gb2312"
				},
				{
					"Type": "NodeText",
					"Data": "字符集指的也就是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "gb2312"
				},
				{
					"Type": "NodeText",
					"Data": "编码方案。"
				}
			]
		},
		{
			"ID": "20210708003510-yrtukq6",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20210708003510-yrtukq6"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e "
				},
				{
					"ID": "20210708003510-vo8gz4s",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20210708003510-vo8gz4s"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "小贴士： 正宗的 utf8 字符集是使用 1~4 个字节来编码一个字符的，不过 MySQL 中对 utf8 字符集做了阉割，编码一个字符最多使用 3 个字节。如果我们之后有存储使用 4 个字节来编码的字符的情景，可以使用一种称之为"
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "strong",
							"TextMarkTextContent": "utf8mb4 的字符集，它才是正宗的 utf8 字符集"
						},
						{
							"Type": "NodeText",
							"Data": "。"
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-5tum320",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-5tum320"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "字符串类型总览 🔥"
				}
			]
		},
		{
			"ID": "20210708003510-x49zalf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-x49zalf"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "现在我们可以看一下"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "MySQL"
				},
				{
					"Type": "NodeText",
					"Data": "中提供的各种字符串类型（注：其中"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "M"
				},
				{
					"Type": "NodeText",
					"Data": "代表该数据类型最多能存储的字符数量，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "L"
				},
				{
					"Type": "NodeText",
					"Data": "代表我们实际向该类型的属性中存储的字符串在特定字符集下所占的字节数，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "W"
				},
				{
					"Type": "NodeText",
					"Data": "代表在该特定字符集下，编码一个字符最多需要的字节数）："
				}
			]
		},
		{
			"ID": "20210708003510-djewt37",
			"Type": "NodeTable",
			"Data": "|     类型     |   最大长度   |   存储空间要求    |       含义       |\n| :----------: | :----------: | :---------------: | :--------------: |\n|  `CHAR(M)`   |   M 个字符   |    M×W 个字节     | 固定长度的字符串 |\n| `VARCHAR(M)` |   M 个字符   | L+1 或 L+2 个字节 | 可变长度的字符串 |\n|  `TINYTEXT`  | 2⁸-1 个字节  |    L+1 个字节     | 非常小型的字符串 |\n|    `TEXT`    | 2¹⁶-1 个字节 |    L+2 个字节     |   小型的字符串   |\n| `MEDIUMTEXT` | 2²⁴-1 个字节 |    L+3 个字节     | 中等大小的字符串 |\n|  `LONGTEXT`  | 2³²-1 个字节 |    L+4 个字节     |   大型的字符串   |",
			"TableAligns": [
				2,
				2,
				2,
				2
			],
			"Properties": {
				"id": "20210708003510-djewt37"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Children": [
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "类型"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "最大长度"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "存储空间要求"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "含义"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "CHAR(M)"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "M 个字符"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "M×W 个字节"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "固定长度的字符串"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "VARCHAR(M)"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "M 个字符"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "L+1 或 L+2 个字节"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "可变长度的字符串"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "TINYTEXT"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "2⁸-1 个字节"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "L+1 个字节"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "非常小型的字符串"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "TEXT"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "2¹⁶-1 个字节"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "L+2 个字节"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "小型的字符串"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "MEDIUMTEXT"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "2²⁴-1 个字节"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "L+3 个字节"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "中等大小的字符串"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "LONGTEXT"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "2³²-1 个字节"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "L+4 个字节"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "大型的字符串"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-aco1s9e",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-aco1s9e"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当然，就画这么个表格大家一准儿有些懵，我们接下来看一下各种字符串类型的细节。"
				}
			]
		},
		{
			"ID": "20210708003510-pshz3j5",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-pshz3j5"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "CHAR(M)"
				}
			]
		},
		{
			"ID": "20210708003510-orjrmcu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-orjrmcu"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "总结："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "固定长度字符串类型，数据的长度不足指定长度，补空格到指定长度！取出时再把“右侧”空格删掉（即右侧本身有空格，则会丢失"
				}
			]
		},
		{
			"ID": "20210708003510-tiph3ic",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-tiph3ic"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "CHAR(M)"
				},
				{
					"Type": "NodeText",
					"Data": "中的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "M"
				},
				{
					"Type": "NodeText",
					"Data": "代表该类型最多可以存储的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "字符数量"
				},
				{
					"Type": "NodeText",
					"Data": "，注意，是字符数量，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "不是字节数量"
				},
				{
					"Type": "NodeText",
					"Data": "。"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "其中"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "M"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "的取值范围是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "0~255"
				},
				{
					"Type": "NodeText",
					"Data": "。如果省略掉"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "M"
				},
				{
					"Type": "NodeText",
					"Data": "的值，那它的默认值就是 1，也就是说"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "CHAR"
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "CHAR(1)"
				},
				{
					"Type": "NodeText",
					"Data": "是一个意思。"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "CHAR(0)"
				},
				{
					"Type": "NodeText",
					"Data": "是一种特别的类型，它只能存储空字符串"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "''"
				},
				{
					"Type": "NodeText",
					"Data": "或者"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "NULL"
				},
				{
					"Type": "NodeText",
					"Data": "值（我们后边会详细介绍啥是个"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "NULL"
				},
				{
					"Type": "NodeText",
					"Data": "）。再回头看一眼我们的学生基本信息表，如果你觉得学生的姓名不会超过 5 个字符，你就可以指定这个姓名列的类型为"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "CHAR(5)"
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20210708003510-g93war3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-g93war3"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "CHAR(M)"
				},
				{
					"Type": "NodeText",
					"Data": "在不同的字符集下需要的存储空间也是不一样的，我们假设某个字符集编码一个字符最多需要"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "W"
				},
				{
					"Type": "NodeText",
					"Data": "个字节，那么类型"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "CHAR(M)"
				},
				{
					"Type": "NodeText",
					"Data": "占用的存储空间大小就是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "M×W"
				},
				{
					"Type": "NodeText",
					"Data": "个字节。比方说："
				}
			]
		},
		{
			"ID": "20210708003510-a4r1kun",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210708003510-a4r1kun"
			},
			"Children": [
				{
					"ID": "20210708003510-wnxqaxf",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-wnxqaxf"
					},
					"Children": [
						{
							"ID": "20210708003510-ogmlj22",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-ogmlj22"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "对于采用"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "ascii"
								},
								{
									"Type": "NodeText",
									"Data": "字符集的"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "CHAR(5)"
								},
								{
									"Type": "NodeText",
									"Data": "类型来说，"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "ascii"
								},
								{
									"Type": "NodeText",
									"Data": "字符集编码一个字符最多需要 1 个字节，也就是"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "M=5"
								},
								{
									"Type": "NodeText",
									"Data": "、"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "W=1"
								},
								{
									"Type": "NodeText",
									"Data": "，所以这种情况下该类型占用的存储空间大小就是"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "5×1 = 5"
								},
								{
									"Type": "NodeText",
									"Data": "个字节。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-zqti33e",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-zqti33e"
					},
					"Children": [
						{
							"ID": "20210708003510-nxzcpcd",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-nxzcpcd"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "对于采用"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "gbk"
								},
								{
									"Type": "NodeText",
									"Data": "字符集的"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "CHAR(5)"
								},
								{
									"Type": "NodeText",
									"Data": "类型来说，"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "gbk"
								},
								{
									"Type": "NodeText",
									"Data": "字符集编码一个字符最多需要 2 个字节，也就是"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "M=5"
								},
								{
									"Type": "NodeText",
									"Data": "、"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "W=2"
								},
								{
									"Type": "NodeText",
									"Data": "，所以这种情况下该类型占用的存储空间大小就是"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "5×2 = 10"
								},
								{
									"Type": "NodeText",
									"Data": "个字节。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-o6gh6d5",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-o6gh6d5"
					},
					"Children": [
						{
							"ID": "20210708003510-zacn0qu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-zacn0qu"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "对于采用"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "utf8"
								},
								{
									"Type": "NodeText",
									"Data": "字符集的"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "CHAR(5)"
								},
								{
									"Type": "NodeText",
									"Data": "类型来说，"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "utf8"
								},
								{
									"Type": "NodeText",
									"Data": "字符集编码一个字符最多需要 3 个字节，也就是"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "M=5"
								},
								{
									"Type": "NodeText",
									"Data": "、"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "W=3"
								},
								{
									"Type": "NodeText",
									"Data": "，所以这种情况下该类型占用的存储空间大小就是"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "5×3 = 15"
								},
								{
									"Type": "NodeText",
									"Data": "个字节。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-nxvdk47",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-nxvdk47"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果我们实际存储的字符串在特定字符集编码下占用的字节数不足"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "M×W"
				},
				{
					"Type": "NodeText",
					"Data": "，那么剩余的那些存储空间用空格字符（也就是："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "' '"
				},
				{
					"Type": "NodeText",
					"Data": "）补齐。比方说表的某个属性的类型是采用"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "ascii"
				},
				{
					"Type": "NodeText",
					"Data": "字符集的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "CHAR(5)"
				},
				{
					"Type": "NodeText",
					"Data": "类型，我们想将字符串"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "'abc'"
				},
				{
					"Type": "NodeText",
					"Data": "存入使用这个类型的表属性中，其中字符串"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "'abc'"
				},
				{
					"Type": "NodeText",
					"Data": "在"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "ascii"
				},
				{
					"Type": "NodeText",
					"Data": "字符集下需要 3 个字节存储，而采用"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "ascii"
				},
				{
					"Type": "NodeText",
					"Data": "字符集的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "CHAR(5)"
				},
				{
					"Type": "NodeText",
					"Data": "类型又需要 5 个字节的存储空间，那么剩下的那两个字节的存储空间就会存储空格字符"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "' '"
				},
				{
					"Type": "NodeText",
					"Data": "的编码。这也就是说：一旦你确定了 CHAR(M)类型的 M 的值，如果 M 的值很大，而你实际存储的字符串占用字节数又很少，会造成存储空间的浪费。"
				}
			]
		},
		{
			"ID": "20210708003510-ztxac9b",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20210708003510-ztxac9b"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e "
				},
				{
					"ID": "20210708003510-2aa40og",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20210708003510-2aa40og"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "小贴士： 字符'a'在 ascii 字符集下被编码为 0x61，字符'b'在 ascii 字符集下被编码为 0x62，字符'c'在 ascii 字符集下被编码为 0x63，空格字符被编码为 0x20，所以将字符串'abc'存入采用 ascii 字符集的 CHAR(5)类型的表属性中时，实际存储的字节序列就是：0x6162632020。"
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-ls8rlr7",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-ls8rlr7"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "VARCHAR(M)"
				}
			]
		},
		{
			"ID": "20210708003510-r9x4517",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-r9x4517"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "总结："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "可变长度字符串类型"
				},
				{
					"Type": "NodeText",
					"Data": "（+1 或+2 字节）"
				}
			]
		},
		{
			"ID": "20210708003510-q0ifm66",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-q0ifm66"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果你表中的某个列需要存储字符串类型的数据，而且这些字符串长短不一，那么使用"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "CHAR(M)"
				},
				{
					"Type": "NodeText",
					"Data": "可能会浪费很多存储空间，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "VARCHAR(M)"
				},
				{
					"Type": "NodeText",
					"Data": "正是为了解决这个问题而生的。"
				}
			]
		},
		{
			"ID": "20210708003510-0gj24bn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-0gj24bn"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "VARCHAR(M)"
				},
				{
					"Type": "NodeText",
					"Data": "中的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "M"
				},
				{
					"Type": "NodeText",
					"Data": "也是代表该类型最多可以存储的字符数量，理论上的取值范围是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "1~65535"
				},
				{
					"Type": "NodeText",
					"Data": "。但是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "MySQL"
				},
				{
					"Type": "NodeText",
					"Data": "中还有一个规定，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "表中某一行包含的所有列中存储的数据大小总共不得超过 65535 个字节"
				},
				{
					"Type": "NodeText",
					"Data": "（注意是字节），也就是说"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "VARCHAR(M)"
				},
				{
					"Type": "NodeText",
					"Data": "类型实际能够容纳的字符数量是小于 65535 的。"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "按照 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "utf-8 mb4"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "存储，最多 65536/3 个数的字符"
				},
				{
					"Type": "NodeText",
					"Data": "。🔥"
				}
			]
		},
		{
			"ID": "20210708003510-ba88po7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-ba88po7"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "VARCHAR(M)"
				},
				{
					"Type": "NodeText",
					"Data": "类型占用的存储空间不确定，那系统在读一个"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "VARCHAR(M)"
				},
				{
					"Type": "NodeText",
					"Data": "类型的数据时怎么知道该数据占用多少个字节呢？答案是：不知道。所以一个"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "VARCHAR(M)"
				},
				{
					"Type": "NodeText",
					"Data": "类型表示的数据其实是由这么"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "两部分组成"
				},
				{
					"Type": "NodeText",
					"Data": "："
				}
			]
		},
		{
			"ID": "20210708003510-axv8jd3",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20210708003510-axv8jd3"
			},
			"Children": [
				{
					"ID": "20210708003510-pfuuypy",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20210708003510-pfuuypy"
					},
					"Children": [
						{
							"ID": "20210708003510-rvlfmc5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-rvlfmc5"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "真正的字符串内容"
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						},
						{
							"ID": "20210708003510-vsxlsgo",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-vsxlsgo"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "假设真正的字符串在特定字符集编码后占用的字节数为"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "L"
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-d0t7msc",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20210708003510-d0t7msc"
					},
					"Children": [
						{
							"ID": "20210708003510-tvpsaon",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-tvpsaon"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "占用字节数"
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						},
						{
							"ID": "20210708003510-b7zxjcy",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-b7zxjcy"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "假设"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "VARCHAR(M)"
								},
								{
									"Type": "NodeText",
									"Data": "类型采用的字符集编码一个字符最多需要"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "W"
								},
								{
									"Type": "NodeText",
									"Data": "个字节，那么："
								}
							]
						},
						{
							"ID": "20210708003510-3p4682a",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210708003510-3p4682a"
							},
							"Children": [
								{
									"ID": "20210708003510-b1pkwfi",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210708003510-b1pkwfi"
									},
									"Children": [
										{
											"ID": "20210708003510-qn0btop",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210708003510-qn0btop"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "当"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "M×W \u0026lt; 256"
												},
												{
													"Type": "NodeText",
													"Data": "时，只需要一个字节来表示占用的字节数。"
												}
											]
										}
									]
								},
								{
									"ID": "20210708003510-3y2in2f",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210708003510-3y2in2f"
									},
									"Children": [
										{
											"ID": "20210708003510-s0at01w",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210708003510-s0at01w"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "当"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "M×W \u0026gt;= 256"
												},
												{
													"Type": "NodeText",
													"Data": "且"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "M×W \u0026lt; 65536"
												},
												{
													"Type": "NodeText",
													"Data": "时，需要两个字节来表示占用的字节数。"
												}
											]
										}
									]
								}
							]
						},
						{
							"ID": "20210708003510-r2ueefb",
							"Type": "NodeBlockquote",
							"Properties": {
								"id": "20210708003510-r2ueefb"
							},
							"Children": [
								{
									"Type": "NodeBlockquoteMarker",
									"Data": "\u003e "
								},
								{
									"ID": "20210708003510-uj7cltm",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20210708003510-uj7cltm"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "小贴士： 一个字节占用 8 个比特位，能表示的最大无符号数就是 255，两个字节占用 16 个比特位，能表示的最大无符号数就是 65535。"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-gi1r4c0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-gi1r4c0"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们还用学生的姓名属性做例子，假设我们给姓名列定义的类型为采用"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "utf8"
				},
				{
					"Type": "NodeText",
					"Data": "字符集的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "VARCHAR(5)"
				},
				{
					"Type": "NodeText",
					"Data": "，也就是说"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "M = 5"
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "W = 3"
				},
				{
					"Type": "NodeText",
					"Data": "，所以"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "M × W= 5×3 = 15"
				},
				{
					"Type": "NodeText",
					"Data": "，而"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "15 \u0026lt; 256"
				},
				{
					"Type": "NodeText",
					"Data": "，所以我们只需要一个字节来表示真实数据占用的字节长度就好了。对于"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "'杜子腾'"
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "'范统'"
				},
				{
					"Type": "NodeText",
					"Data": "这两个字符串来说，它们在"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "utf8"
				},
				{
					"Type": "NodeText",
					"Data": "字符集下可以被编码成如下的样子(二进制太长了，用 16 进制表示)："
				}
			]
		},
		{
			"ID": "20210708003510-3255o6l",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-3255o6l"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "'杜子腾'：0xE69D9CE5AD90E885BE （共9个字节）\n'范统'：0xE88C83E7BB9F （共6个字节）\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-un3q9hq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-un3q9hq"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "那么这两个字符串的实际存储示意图就是这样："
				}
			]
		},
		{
			"ID": "20210708003510-cdfahnz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-cdfahnz"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Children": [
						{
							"Type": "NodeBang",
							"Data": "!"
						},
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "img"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "../assets/16d6779aca2f7215.png"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-4qavjrr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-4qavjrr"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "而如果我们给姓名列定义的类型为采用"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "utf8"
				},
				{
					"Type": "NodeText",
					"Data": "字符集的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "VARCHAR(100)"
				},
				{
					"Type": "NodeText",
					"Data": "，也就是说"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "M = 100"
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "W = 3"
				},
				{
					"Type": "NodeText",
					"Data": "，所以"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "M × W= 100×3 = 300"
				},
				{
					"Type": "NodeText",
					"Data": "，而"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "300 \u0026gt; 256"
				},
				{
					"Type": "NodeText",
					"Data": "，所以我们需要 2 个字节来表示真实数据占用的字节长度，此时"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "'杜子腾'"
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "'范统'"
				},
				{
					"Type": "NodeText",
					"Data": "这两个字符串的实际存储示意图就是这样："
				}
			]
		},
		{
			"ID": "20210708003510-pdekt69",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-pdekt69"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Children": [
						{
							"Type": "NodeBang",
							"Data": "!"
						},
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "img"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "../assets/16d6779ad14c8389.png"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-60wxnbk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-60wxnbk"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "从上边的示例中可以看出，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "VARCHAR(M)"
				},
				{
					"Type": "NodeText",
					"Data": "类型占用的存储空间大小随着实际存储的内容变化而变化，假设实际存储的内容占用的字节长度为"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "L"
				},
				{
					"Type": "NodeText",
					"Data": "，那么整个"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "VARCHAR(M)"
				},
				{
					"Type": "NodeText",
					"Data": "类型占用的存储空间大小就"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "L+1"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "或者"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "L+2"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "个字节"
				},
				{
					"Type": "NodeText",
					"Data": "。所以我们说"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "VARCHAR(M)"
				},
				{
					"Type": "NodeText",
					"Data": "是一种"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "可变长度"
				},
				{
					"Type": "NodeText",
					"Data": "的字符串类型。"
				}
			]
		},
		{
			"ID": "20210708003510-i09row6",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20210708003510-i09row6"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e "
				},
				{
					"ID": "20210708003510-6oyvs6x",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20210708003510-6oyvs6x"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "Oracle 中使用 VARCHAR2 型 ( MySQL 中也有 VARCHAR2 这种数据类型，但并不推荐使用)"
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-2w9l1no",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-2w9l1no"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "CHAR VS VARCHAR"
				}
			]
		},
		{
			"ID": "20210708003510-y5ragq4",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210708003510-y5ragq4"
			},
			"Children": [
				{
					"ID": "20210708003510-yoqgp8p",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-yoqgp8p"
					},
					"Children": [
						{
							"ID": "20210708003510-5yd59f9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-5yd59f9"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "char 长度固定，不需要考虑边界问题，读写效率高于 varchar，适合存储长度固定（不太多）、频繁读写的数据"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-g0epstg",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-g0epstg"
					},
					"Children": [
						{
							"ID": "20210708003510-46s5bzn",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-46s5bzn"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "varchar 长度不固定，但可以通过 varchar(m)的方式指定上限，适合存储长度波动、更新不频繁的数据"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-3pskv98",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-3pskv98"
					},
					"Children": [
						{
							"ID": "20210708003510-inpnchv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-inpnchv"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "char 的存储长度不够灵活，而 varchar 则需要浪费 1~2 个字节来存储当前值的实际长度，且更新会导致重新计算"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-u4fxxln",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-u4fxxln"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "没有最完美的类型，只有最合适的类型。比如，当你需要存储手机号码或者身份证号时，用 char(11)、char(18)显然更合适。但存储“个人介绍”时，用 varchar 更好，因为个人介绍的长度是可变的且长度可能很长。"
				}
			]
		},
		{
			"ID": "20210708003510-ps8cbkv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-ps8cbkv"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "优化："
				}
			]
		},
		{
			"ID": "20210708003510-zp0m2uk",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210708003510-zp0m2uk"
			},
			"Children": [
				{
					"ID": "20210708003510-hgwg1im",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-hgwg1im"
					},
					"Children": [
						{
							"ID": "20210708003510-jiqb9t0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-jiqb9t0"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "可以采取定长、变长分表"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-4kmgp1a",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-4kmgp1a"
					},
					"Children": [
						{
							"ID": "20210708003510-kzhl9p1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-kzhl9p1"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "常用列与不常用列分表"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-qi86n5y",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-qi86n5y"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "各种 TEXT（或称 CLOB）类型"
				}
			]
		},
		{
			"ID": "20210708003510-2a8vl2e",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-2a8vl2e"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "虽然"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "VARCHAR(M)"
				},
				{
					"Type": "NodeText",
					"Data": "已经可以存储很长的字符串了，可是有时候还是不够咋办？对于很长的字符串，设计"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "MySQL"
				},
				{
					"Type": "NodeText",
					"Data": "的大叔们给我们提供了"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "TINYTEXT"
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "TEXT"
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "MEDIUMTEXT"
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "LONGTEXT"
				},
				{
					"Type": "NodeText",
					"Data": "四种可以存储大型的字符串的类型。它们也都是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "变长类型"
				},
				{
					"Type": "NodeText",
					"Data": "，也就是说这些类型"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "占用的存储空间"
				},
				{
					"Type": "NodeText",
					"Data": "由"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "实际内容"
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "内容占用的字节长度"
				},
				{
					"Type": "NodeText",
					"Data": "两部分构成。"
				}
			]
		},
		{
			"ID": "20210708003510-lls8vbm",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210708003510-lls8vbm"
			},
			"Children": [
				{
					"ID": "20210708003510-kk290bf",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-kk290bf"
					},
					"Children": [
						{
							"ID": "20210708003510-a4uaozv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-a4uaozv"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "因为"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "TINYTEXT"
								},
								{
									"Type": "NodeText",
									"Data": "最多可以存储"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "2⁸-1"
								},
								{
									"Type": "NodeText",
									"Data": "个字节，所以内容占用的"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "字节长度（不是内容长度）"
								},
								{
									"Type": "NodeText",
									"Data": "用 1 个字节就可以表示"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-fkxvtsb",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-fkxvtsb"
					},
					"Children": [
						{
							"ID": "20210708003510-yd68q0m",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-yd68q0m"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "TEXT"
								},
								{
									"Type": "NodeText",
									"Data": "最多可以存储"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "2¹⁶-1"
								},
								{
									"Type": "NodeText",
									"Data": "个字节，所以内容占用的字节长度用 2 个字节就可以表示。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-pwnnx52",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-pwnnx52"
					},
					"Children": [
						{
							"ID": "20210708003510-7inbybs",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-7inbybs"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "MEDIUMTEXT"
								},
								{
									"Type": "NodeText",
									"Data": "最多可以存储"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "2²⁴-1"
								},
								{
									"Type": "NodeText",
									"Data": "个字节，所以内容占用的字节长度用 3 个字节就可以表示。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-5jaopdo",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-5jaopdo"
					},
					"Children": [
						{
							"ID": "20210708003510-7ol00xi",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-7ol00xi"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "LONGTEXT"
								},
								{
									"Type": "NodeText",
									"Data": "最多可以存储"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "2³²-1"
								},
								{
									"Type": "NodeText",
									"Data": "个字节，所以内容占用的字节长度用 4 个字节就可以表示。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-99z8sh3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-99z8sh3"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "因此，变长为 1、2、3、4 字节"
				}
			]
		},
		{
			"ID": "20210708003510-qglnl2c",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-qglnl2c"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "不过之前不是有个规定说"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "某一行包含的所有列中存储的数据大小总和不得超过 65535 个字节"
				},
				{
					"Type": "NodeText",
					"Data": "么？"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "这个规定对这些 TEXT 类型是不起作用的"
				},
				{
					"Type": "NodeText",
					"Data": "，它们并不在这个规定的限制范围之内。一个表中如果有的属性需要存储特别长的文本的话，就可以考虑使用这几个类型了。"
				}
			]
		},
		{
			"ID": "20210708003510-p5bv2ow",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708003510-p5bv2ow"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "ENUM 类型和 SET 类型"
				}
			]
		},
		{
			"ID": "20210708003510-p59ce3m",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-p59ce3m"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "视角回到我们的学生信息表，性别一列也需要填写字符串，但是比较特殊的一点是，这一列只能填"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "男"
				},
				{
					"Type": "NodeText",
					"Data": "或者"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "女"
				},
				{
					"Type": "NodeText",
					"Data": "，填别的字符串就尴尬了！针对这种情况，我们提出了一个叫"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "ENUM"
				},
				{
					"Type": "NodeText",
					"Data": "的类型，也称为"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "枚举类型"
				},
				{
					"Type": "NodeText",
					"Data": "，它的格式如下："
				}
			]
		},
		{
			"ID": "20210708003510-gqkvxjp",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-gqkvxjp"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "ENUM('str1', 'str2', 'str3' ⋯)\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-y6au1qt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-y6au1qt"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "它表示在给定的字符串列表里选择一个。比如我们的性别一列可以定义成"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "ENUM('男', '女')"
				},
				{
					"Type": "NodeText",
					"Data": "类型。这个的意思就是性别一列只能在"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "'男'"
				},
				{
					"Type": "NodeText",
					"Data": "或者"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "'女'"
				},
				{
					"Type": "NodeText",
					"Data": "这两个字符串之间选择一个，相当于一个单选框～"
				}
			]
		},
		{
			"ID": "20210708003510-zrtnulx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-zrtnulx"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "有的时候某一列的值可以在给定的字符串列表中挑选多个，假设学生的基本信息加了一列"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "兴趣"
				},
				{
					"Type": "NodeText",
					"Data": "属性，这个属性的值可以从给定的兴趣列表中挑选多个，那我们可以使用"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "SET"
				},
				{
					"Type": "NodeText",
					"Data": "类型，它的格式如下："
				}
			]
		},
		{
			"ID": "20210708003510-grmxa0u",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-grmxa0u"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "SET('str1', 'str2', 'str3' ⋯)\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-ym5lku0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-ym5lku0"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "它表示可以在给定的字符串列表里选择多个。我们的兴趣一列就可以定义成"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "SET('打球', '画画', '扯犊子', '玩游戏')"
				},
				{
					"Type": "NodeText",
					"Data": "类型。这个的意思就是兴趣一列可以在给定的这几个字符串中选择一个或多个，相当于一个多选框～效果就像这样："
				}
			]
		},
		{
			"ID": "20210708003510-wt88tfn",
			"Type": "NodeTable",
			"Data": "|   学号   |  姓名  | ··· |            兴趣            |\n| :------: | :----: | :-: | :------------------------: |\n| 20180101 | 杜子腾 | ··· |       '打球', '画画'       |\n| 20180102 | 杜琦燕 | ··· |          '扯犊子'          |\n| 20180103 |  范统  | ··· |     '扯犊子', '玩游戏'     |\n| 20180104 | 史珍香 | ··· | '画画', '扯犊子', '玩游戏' |",
			"TableAligns": [
				2,
				2,
				2,
				2
			],
			"Properties": {
				"id": "20210708003510-wt88tfn"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Children": [
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "学号"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "姓名"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "···"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "兴趣"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "20180101"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "杜子腾"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "···"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "'打球', '画画'"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "20180102"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "杜琦燕"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "···"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "'扯犊子'"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "20180103"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "范统"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "···"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "'扯犊子', '玩游戏'"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "20180104"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "史珍香"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "···"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "'画画', '扯犊子', '玩游戏'"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-ug3jzt1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-ug3jzt1"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "综上所述，ENUM 和 SET 类型都是一种特殊的字符串类型，在"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "从字符串列表中单选或多选元素的时候会用得到它们"
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20210708003510-iocick4",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708003510-iocick4"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "二进制类型"
				}
			]
		},
		{
			"ID": "20210708003510-xpj2lf0",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-xpj2lf0"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "BIT 类型 🔥"
				}
			]
		},
		{
			"ID": "20210708003510-98cwxz1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-98cwxz1"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "有时候我们有存储单个或者多个比特位的需求，此时就可以用到下边这种类型："
				}
			]
		},
		{
			"ID": "20210708003510-jm7qsao",
			"Type": "NodeTable",
			"Data": "|   类型   |    字节数     |        含义         |\n| :------: | :-----------: | :-----------------: |\n| `BIT(M)` | 近似为(M+7)/8 | 存储 M 个比特位的值 |",
			"TableAligns": [
				2,
				2,
				2
			],
			"Properties": {
				"id": "20210708003510-jm7qsao"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Children": [
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "类型"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "字节数"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "含义"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "BIT(M)"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "近似为(M+7)/8"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "存储 M 个比特位的值"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-urds2z9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-urds2z9"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其中"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "M"
				},
				{
					"Type": "NodeText",
					"Data": "的取值范围为"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "1~64"
				},
				{
					"Type": "NodeText",
					"Data": "，而且"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "M"
				},
				{
					"Type": "NodeText",
					"Data": "可以省略，它的默认值为 1，也就是说"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "BIT(1)"
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "BIT"
				},
				{
					"Type": "NodeText",
					"Data": "的意思是一样的。"
				}
			]
		},
		{
			"ID": "20210708003510-4hb13bk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-4hb13bk"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "MySQL"
				},
				{
					"Type": "NodeText",
					"Data": "是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "以字节为单位存储数据"
				},
				{
					"Type": "NodeText",
					"Data": "的，一个字节拥有 8 个比特位。如果我们想存储的比特位个数不足整数个字节，那么"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "MySQL"
				},
				{
					"Type": "NodeText",
					"Data": "会"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "偷偷的填充满"
				},
				{
					"Type": "NodeText",
					"Data": "，比方说："
				}
			]
		},
		{
			"ID": "20210708003510-6ijrpm7",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210708003510-6ijrpm7"
			},
			"Children": [
				{
					"ID": "20210708003510-764e50x",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-764e50x"
					},
					"Children": [
						{
							"ID": "20210708003510-5bgolzt",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-5bgolzt"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "BIT(1)"
								},
								{
									"Type": "NodeText",
									"Data": "类型仅仅需要存储 1 个比特位的数据，但是"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "MySQL"
								},
								{
									"Type": "NodeText",
									"Data": "会为其申请"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "(1+7)/8 = 1"
								},
								{
									"Type": "NodeText",
									"Data": "个字节。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-nktakyu",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-nktakyu"
					},
					"Children": [
						{
							"ID": "20210708003510-uxxodtb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-uxxodtb"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "BIT(5)"
								},
								{
									"Type": "NodeText",
									"Data": "类型仅仅需要存储 5 个比特位的数据，但是"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "MySQL"
								},
								{
									"Type": "NodeText",
									"Data": "会为其申请"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "(5+7)/8 = 1"
								},
								{
									"Type": "NodeText",
									"Data": "个字节。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-fu2kbze",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-fu2kbze"
					},
					"Children": [
						{
							"ID": "20210708003510-dyb8tzy",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-dyb8tzy"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "BIT(9)"
								},
								{
									"Type": "NodeText",
									"Data": "类型仅仅需要存储 9 个比特位的数据，但是"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "MySQL"
								},
								{
									"Type": "NodeText",
									"Data": "会为其申请"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "(9+7)/8 = 2"
								},
								{
									"Type": "NodeText",
									"Data": "个字节。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-q28b7ax",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-q28b7ax"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "据此来说，也没有必要对类似 status 使用该类型"
				}
			]
		},
		{
			"ID": "20210708003510-753xszi",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-753xszi"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "BINARY(M)与 VARBINARY(M)"
				}
			]
		},
		{
			"ID": "20210708003510-mlf9ok8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-mlf9ok8"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "BINARY(M)"
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "VARBINARY(M)"
				},
				{
					"Type": "NodeText",
					"Data": "对应于我们前边提到的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "CHAR(M)"
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "VARCHAR(M)"
				},
				{
					"Type": "NodeText",
					"Data": "，都是前者是固定长度的类型，后者是可变长度的类型，只不过"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "BINARY(M)"
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "VARBINARY(M)"
				},
				{
					"Type": "NodeText",
					"Data": "是用来存放"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "字节"
				},
				{
					"Type": "NodeText",
					"Data": "的，其中的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "M"
				},
				{
					"Type": "NodeText",
					"Data": "代表该类型最多能存放的字节数量，而"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "CHAR(M)"
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "VARCHAR(M)"
				},
				{
					"Type": "NodeText",
					"Data": "是用来存储"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "字符"
				},
				{
					"Type": "NodeText",
					"Data": "的，其中的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "M"
				},
				{
					"Type": "NodeText",
					"Data": "代表该类型最多能存放的字符数量。"
				}
			]
		},
		{
			"ID": "20210708003510-r8xzizp",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-r8xzizp"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "各种 BLOB 类型 ☠️"
				}
			]
		},
		{
			"ID": "20210708003510-bi1ohhd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-bi1ohhd"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "TINYBLOB"
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "BLOB"
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "MEDIUMBLOB"
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "LONGBLOB"
				},
				{
					"Type": "NodeText",
					"Data": "是针对数据量很大的二进制数据提出的，比如图片、音频、压缩文件啥的。它们很像"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "TINYTEXT"
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "TEXT"
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "MEDIUMTEXT"
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "LONGTEXT"
				},
				{
					"Type": "NodeText",
					"Data": "，不过各种"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "BLOB"
				},
				{
					"Type": "NodeText",
					"Data": "类型是用来存储字节的，而各种"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "TEXT"
				},
				{
					"Type": "NodeText",
					"Data": "类型是用来存储字符的而已。"
				}
			]
		},
		{
			"ID": "20210708003510-whf6ohy",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210708003510-whf6ohy"
			},
			"Children": [
				{
					"ID": "20210708003510-dvk7zza",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-dvk7zza"
					},
					"Children": [
						{
							"ID": "20210708003510-ra08d5s",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-ra08d5s"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "tinyblob(2^ 8-1B)"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-a6lfpr9",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-a6lfpr9"
					},
					"Children": [
						{
							"ID": "20210708003510-aybwdos",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-aybwdos"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "blob(2^ 16-1B)"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-sjt5fvw",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-sjt5fvw"
					},
					"Children": [
						{
							"ID": "20210708003510-iqrifgf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-iqrifgf"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "mediumblob(2^ 24-1B)"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-6mabale",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-6mabale"
					},
					"Children": [
						{
							"ID": "20210708003510-ypw5750",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-ypw5750"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "longblob(2^32-1B)"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-4sat0tw",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20210708003510-4sat0tw"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e "
				},
				{
					"ID": "20210708003510-679ytp7",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20210708003510-679ytp7"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "小贴士： 对于比较大的二进制数据，比方说图片、音频、压缩文件什么的，通常情况下都不直接存储到数据库管理系统中，而是将它们"
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "strong",
							"TextMarkTextContent": "保存到文件系统"
						},
						{
							"Type": "NodeText",
							"Data": "中，然后"
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "strong",
							"TextMarkTextContent": "在数据库中之存放一个文件路径即可"
						},
						{
							"Type": "NodeText",
							"Data": "。"
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-6xroiih",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708003510-6xroiih"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "注意"
				}
			]
		},
		{
			"ID": "20210708003510-fcbo0ql",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20210708003510-fcbo0ql"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e "
				},
				{
					"ID": "20210708003510-xanj0dc",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20210708003510-xanj0dc"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "小贴士： MySQL 其实可以大致被分为 server 层和存储引擎层，server 层用来做一些通用的逻辑，存储引擎层负责具体的数据读取和存储，针对不同的使用场景设计了许多种不同的存储引擎。各种数据类型在 server 层的格式是一致的，本文对各种数据类型占用存储空间的分析也是基于 server 层的，不同的存储引擎针对不同的数据类型可能有其特定的实现，我们就不单独唠叨了。在《MySQL 是怎样运行的：从根儿上理解 MySQL》这本书中介绍了 InnoDB 存储引擎对于 VARCHAR 和 CHAR 格式的具体实现，有兴趣的小伙伴可以到该书中查看。 当然，这段话是给有经验的小伙伴看的，如果大家压根儿没听说过 server 层、存储引擎的概念，请自动忽略这段话，请自动忽略这段话，请自动忽略这段话！"
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-8vzrqjv",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708003510-8vzrqjv"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "常用的字段列类型 🔥"
				}
			]
		},
		{
			"ID": "20210708003510-nqhz1is",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210708003510-nqhz1is"
			},
			"Children": [
				{
					"ID": "20210708003510-h77d3v5",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-h77d3v5"
					},
					"Children": [
						{
							"ID": "20210708003510-1q1iaec",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-1q1iaec"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "身份证号"
								},
								{
									"Type": "NodeText",
									"Data": "由于最后一位可能是 X，所以就归为"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "字符串"
								},
								{
									"Type": "NodeText",
									"Data": "了"
								}
							]
						}
					]
				}
			]
		}
	]
}