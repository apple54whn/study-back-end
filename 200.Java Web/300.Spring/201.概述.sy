{
	"ID": "20210707233138-eepu6ij",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20210707233138-eepu6ij",
		"title": "201.概述",
		"type": "doc",
		"updated": "20210707233138"
	},
	"Children": [
		{
			"ID": "20210707233138-x46f227",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707233138-x46f227"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "什么是框架"
				}
			]
		},
		{
			"ID": "20210707233138-db1kfoh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707233138-db1kfoh"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "框架"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "（Framework）是整个或部分系统的"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "可重用设计"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，表现为一组抽象构件及构件实例间交互的方法；另一种定义认为，框架是可被应用开发者定制的应用骨架。前者是从应用方面而后者是从目的方面给出的定义。"
				}
			]
		},
		{
			"ID": "20210707233138-vqw5mdq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707233138-vqw5mdq"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "框架一般处在低层应用平台（如 J2EE）和高层业务逻辑之间的中间层。"
				}
			]
		},
		{
			"ID": "20210707233138-maei1qt",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707233138-maei1qt"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "Spring 概述"
				}
			]
		},
		{
			"ID": "20210707233138-tn8g589",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707233138-tn8g589"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Spring是分层的 Java SE/EE应用 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "full-stack 轻量级开源框架"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "以 IoC（Inverse Of Control： 控制反转）和 AOP（Aspect Oriented Programming：面向切面编程）为内核"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，提供了展现层 Spring MVC 和持久层 Spring JDBC 以及业务层事务管理等众多的企业级应用技术，还能整合开源世界众多著名的第三方框架和类库，逐渐成为使用最多的Java EE 企业应用开源框架。"
				}
			]
		},
		{
			"ID": "20210707233138-mtmows1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707233138-mtmows1"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Spring的"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "优势"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "："
				}
			]
		},
		{
			"ID": "20210707233138-ic3qx2c",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 42,
				"Padding": 2,
				"Marker": "Kg==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707233138-ic3qx2c"
			},
			"Children": [
				{
					"ID": "20210707233138-79442pr",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707233138-79442pr"
					},
					"Children": [
						{
							"ID": "20210707233138-4ivbkgg",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707233138-4ivbkgg"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "方便解耦，简化开发"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						},
						{
							"ID": "20210707233138-60g5prj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707233138-60g5prj"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "通过Spring提供的IoC容器，可以将对象间的依赖关系交由 Spring进行控制，避免硬编码所造成的过度程序耦合。用户也不必再为单例模式类、属性文件解析等这些很底层的需求编写代码，可以更专注于上层的应用"
								}
							]
						}
					]
				},
				{
					"ID": "20210707233138-vpeplg3",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707233138-vpeplg3"
					},
					"Children": [
						{
							"ID": "20210707233138-9ndacu2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707233138-9ndacu2"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "AOP编程"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "的支持"
								}
							]
						},
						{
							"ID": "20210707233138-64gx5t0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707233138-64gx5t0"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "通过 Spring的 AOP 功能，方便进行面向切面的编程，许多不容易用传统OOP实现的功能可以通过 AOP 轻松应付"
								}
							]
						}
					]
				},
				{
					"ID": "20210707233138-kfufzn9",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707233138-kfufzn9"
					},
					"Children": [
						{
							"ID": "20210707233138-gvjantn",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707233138-gvjantn"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "声明式事务"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "的支持"
								}
							]
						},
						{
							"ID": "20210707233138-26c8pdv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707233138-26c8pdv"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "可以将我们从单调烦闷的事务管理代码中解脱出来，通过声明式方式灵活的进行事务的管理， 提高开发效率和质量"
								}
							]
						}
					]
				},
				{
					"ID": "20210707233138-3hqj14c",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707233138-3hqj14c"
					},
					"Children": [
						{
							"ID": "20210707233138-wkgnc56",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707233138-wkgnc56"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "方便程序的"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "测试"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						},
						{
							"ID": "20210707233138-xhpqnri",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707233138-xhpqnri"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "可以用非容器依赖的编程方式进行几乎所有的测试工作，测试不再是昂贵的操作，而是随手可做的事情"
								}
							]
						}
					]
				},
				{
					"ID": "20210707233138-8bxsozx",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707233138-8bxsozx"
					},
					"Children": [
						{
							"ID": "20210707233138-bkwzprp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707233138-bkwzprp"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "方便"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "集成各种优秀框架"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						},
						{
							"ID": "20210707233138-0741fjd",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707233138-0741fjd"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Spring可以降低各种框架的使用难度，提供了对各种优秀框架（Struts、Hibernate、Hessian、Quartz 等）的直接支持"
								}
							]
						}
					]
				},
				{
					"ID": "20210707233138-z35lb1f",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707233138-z35lb1f"
					},
					"Children": [
						{
							"ID": "20210707233138-zljpj5z",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707233138-zljpj5z"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "降低JavaEE API的使用难度"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						},
						{
							"ID": "20210707233138-6i0uuua",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707233138-6i0uuua"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Spring对 JavaEE API（如 JDBC、JavaMail、远程调用等）进行了薄薄的封装层，使这些 API 的 使用难度大为降低"
								}
							]
						}
					]
				},
				{
					"ID": "20210707233138-cnh3oxi",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707233138-cnh3oxi"
					},
					"Children": [
						{
							"ID": "20210707233138-2j28lg9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707233138-2j28lg9"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "Java源码是经典学习范例"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						},
						{
							"ID": "20210707233138-96cklk0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707233138-96cklk0"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Spring的源代码设计精妙、结构清晰、匠心独用，处处体现着大师对Java 设计模式灵活运用以 及对 Java技术的高深造诣。它的源代码无意是 Java 技术的最佳实践的范例"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707233138-czh23hq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707233138-czh23hq",
				"updated": "20210707233138"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "Spring的体系结构"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20210707233259-8mz97vu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707233259-8mz97vu",
				"updated": "20210707233300"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "spring-overview.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "./assets/spring-overview-20210707233300-6a9ov2t.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n"
				}
			]
		},
		{
			"ID": "20210707233138-n5w2d86",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707233138-n5w2d86",
				"updated": "20210707233138"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "\n"
				}
			]
		},
		{
			"ID": "20210707233138-vge256c",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707233138-vge256c"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "Spring 简史"
				}
			]
		},
		{
			"ID": "20210707233138-jjjx8s5",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707233138-jjjx8s5"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "Spring 1.x 时代"
				}
			]
		},
		{
			"ID": "20210707233138-144whm5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707233138-144whm5"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在 Spring1.x 时代，都是通过 xml 文件配置 bean，随着项目的不断扩大，需要将 xml 配置分放到不同的配置文件中，需要频繁的在 java 类和 xml 配置文件中切换。"
				}
			]
		},
		{
			"ID": "20210707233138-27q80rr",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20210707233138-27q80rr"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e "
				},
				{
					"ID": "20210707233138-n5jq0ng",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20210707233138-n5jq0ng"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "POJO：比JavaBean更纯净的简单类或接口，主要用于数据的临时传递，它只能装载数据， 作为数据存储的载体，而不具有业务逻辑处理的能力。"
						}
					]
				},
				{
					"ID": "20210707233138-ekujdau",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20210707233138-ekujdau"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "JavaBean：虽然数据的获取与POJO一样，但是JavaBean当中可以有其它的方法。"
						}
					]
				}
			]
		},
		{
			"ID": "20210707233138-6zqaeru",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707233138-6zqaeru"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "Spring 2.x 时代"
				}
			]
		},
		{
			"ID": "20210707233138-8jgce2y",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707233138-8jgce2y"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "随着 JDK 1.5 带来的注解支持，Spring2.x 可以使用注解对 Bean 进行申明和注入，大大的减少了 xml 配置文件，同时也大大简化了项目的开发。"
				}
			]
		},
		{
			"ID": "20210707233138-bgngyfe",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707233138-bgngyfe"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "那么，问题来了，究竟是应该使用 xml 还是注解呢？"
				}
			]
		},
		{
			"ID": "20210707233138-x876yej",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707233138-x876yej"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "最佳实践："
				}
			]
		},
		{
			"ID": "20210707233138-c0px5v4",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707233138-c0px5v4"
			},
			"Children": [
				{
					"ID": "20210707233138-8s5vuze",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707233138-8s5vuze"
					},
					"Children": [
						{
							"ID": "20210707233138-aqjay7g",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707233138-aqjay7g"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "应用的基本配置用 xml，比如：数据源、资源文件等"
								}
							]
						}
					]
				},
				{
					"ID": "20210707233138-tfchgk3",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707233138-tfchgk3"
					},
					"Children": [
						{
							"ID": "20210707233138-y5zh7n0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707233138-y5zh7n0"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "业务开发用注解，比如：Service 中注入 bean 等"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707233138-uowlvwf",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707233138-uowlvwf"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "Spring 3.x 时代"
				}
			]
		},
		{
			"ID": "20210707233138-45prg4i",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707233138-45prg4i"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "从 Spring 3.x 开始提供了 Java 配置方式，使用 Java 配置方式可以更好的理解你配置的 Bean，并且 Spring 4.x 和 Spring boot 都推荐使用 java 配置的方式。"
				}
			]
		},
		{
			"ID": "20210707233138-6ewdm7q",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707233138-6ewdm7q"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "Spring 5.x 时代"
				}
			]
		},
		{
			"ID": "20210707233138-7pl1oty",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707233138-7pl1oty"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Spring 5.x 是 Java 界首个支持响应式的 Web 框架，是 Spring 的一个重要版本，距离 Spring4.x 差不多四年。在此期间，大多数增强都是在 Spring Boot 项目中完成的，其最大的亮点就是提供了完整的端到端响应式编程的支持（新增 Spring WebFlux 模块）。"
				}
			]
		},
		{
			"ID": "20210707233138-pmfkinp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707233138-pmfkinp"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Spring WebFlux 同时支持使用旧的 Spring MVC 注解声明 "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Reactive Controller"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。和传统的 "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "MVC Controller"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 不同，"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Reactive Controller"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 操作的是 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "非阻塞"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 的 "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "ServerHttpRequest"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 和 "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "ServerHttpResponse"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，而不再是 Spring MVC 里的 HttpServletRequest 和 HttpServletResponse。"
				}
			]
		},
		{
			"ID": "20210707233138-yiohbld",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707233138-yiohbld"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "至此也代表着 Java 正式迎来了响应式异步编程的时代。"
				}
			]
		}
	]
}