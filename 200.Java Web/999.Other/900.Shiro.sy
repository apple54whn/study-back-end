{
	"ID": "20210708002458-4w7vg19",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20210708002458-4w7vg19",
		"type": "doc",
		"updated": "20210708002458"
	},
	"Children": [
		{
			"ID": "20210708002458-q3jeds9",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708002458-q3jeds9"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "功能"
				}
			]
		},
		{
			"ID": "20210708002458-h07i0gt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-h07i0gt"
			},
			"Children": [
				{
					"Type": "NodeLink",
					"Children": [
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "官方文档"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://shiro.apache.org/index.html"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20210708002458-4ip9bbp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-4ip9bbp"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Apache Shiro是一个功能强大且灵活的开源安全框架，可以干净地处理身份认证，授权，企业会话管理和加密。Apache Shiro的首要目标是易于使用和理解。 安全有时可能非常复杂，甚至会很痛苦，但这不是必须的。 框架应尽可能掩盖复杂性，并公开简洁直观的API，以简化开发人员确保其应用程序安全的工作。Shiro功能如下："
				}
			]
		},
		{
			"ID": "20210708002458-slu75on",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-slu75on",
				"updated": "20210708002458"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "img"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "./assets/ShiroFeatures.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n"
				}
			]
		},
		{
			"ID": "20210708002458-5afm0gj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-5afm0gj"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Primary Concerns"
				}
			]
		},
		{
			"ID": "20210708002458-ojxbv6e",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 42,
				"Padding": 2,
				"Marker": "Kg==",
				"Num": -1
			},
			"Properties": {
				"id": "20210708002458-ojxbv6e"
			},
			"Children": [
				{
					"ID": "20210708002458-etk0ce7",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708002458-etk0ce7"
					},
					"Children": [
						{
							"ID": "20210708002458-mbwrtzb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708002458-mbwrtzb"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "认证"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：有时称为“登录”，这是证明用户就是他们所说的身份的行为。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708002458-tx5joun",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708002458-tx5joun"
					},
					"Children": [
						{
							"ID": "20210708002458-qeop7s9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708002458-qeop7s9"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "授权"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：访问控制的过程，即确定“谁”有权访问“什么”。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708002458-bnsdamr",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708002458-bnsdamr"
					},
					"Children": [
						{
							"ID": "20210708002458-o184dpb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708002458-o184dpb"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "会话管理：即使在非Web或EJB应用程序中，也可以管理用户特定的会话。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708002458-uyr1t0v",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708002458-uyr1t0v"
					},
					"Children": [
						{
							"ID": "20210708002458-ujbgdu9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708002458-ujbgdu9"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "加密：使用密码算法保持数据安全，同时仍然易于使用。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708002458-rx7d5d4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-rx7d5d4"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Supporting Features"
				}
			]
		},
		{
			"ID": "20210708002458-63mccb6",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 42,
				"Padding": 2,
				"Marker": "Kg==",
				"Num": -1
			},
			"Properties": {
				"id": "20210708002458-63mccb6"
			},
			"Children": [
				{
					"ID": "20210708002458-8fns4j8",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708002458-8fns4j8"
					},
					"Children": [
						{
							"ID": "20210708002458-d3ctxon",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708002458-d3ctxon"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "网络支持：Shiro的网络支持API可帮助轻松保护网络应用程序。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708002458-v3re20e",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708002458-v3re20e"
					},
					"Children": [
						{
							"ID": "20210708002458-uh6j9da",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708002458-uh6j9da"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "缓存：缓存是Apache Shiro API的一线公民，可确保安全操作保持快速有效。比如用户登录后，其用户信息、拥有的角色/权限不必每次去查，这样可以提高效率；"
								}
							]
						}
					]
				},
				{
					"ID": "20210708002458-wqni7gr",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708002458-wqni7gr"
					},
					"Children": [
						{
							"ID": "20210708002458-donw055",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708002458-donw055"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "并发性：Apache Shiro的并发功能支持多线程应用程序。即如在一个线程中开启另一个线程，能把权限自动传播过去；"
								}
							]
						}
					]
				},
				{
					"ID": "20210708002458-d9zsq42",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708002458-d9zsq42"
					},
					"Children": [
						{
							"ID": "20210708002458-h3rxhu3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708002458-h3rxhu3"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "测试：测试支持可帮助您编写单元测试和集成测试，并确保您的代码将按预期进行保护。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708002458-bukpshg",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708002458-bukpshg"
					},
					"Children": [
						{
							"ID": "20210708002458-t1g1nq0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708002458-t1g1nq0"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "“"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "Run As"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "”：允许用户采用其他用户的身份（如果允许）的功能，有时在管理方案中很有用。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708002458-ly7t9jq",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708002458-ly7t9jq"
					},
					"Children": [
						{
							"ID": "20210708002458-p26qbch",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708002458-p26qbch"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "“"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "Remember Me"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "”：记住用户在各个会话中的身份，因此他们只需要在必要时登录即可。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708002458-b7d96nw",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708002458-b7d96nw"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "架构"
				}
			]
		},
		{
			"ID": "20210708002458-ix95xu7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-ix95xu7"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Apache Shiro的设计目标是通过直观且易于使用来简化应用程序安全性。Shiro的核心设计模拟了大多数人如何在与某人（或某物）进行交互的情况下如何考虑应用程序安全性。"
				}
			]
		},
		{
			"ID": "20210708002458-vewhmt4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-vewhmt4"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在最高概念层次，Shiro 的架构有3个主要的概念："
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Subject"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "SecurityManager"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Realms"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。下图是这些组件如何交互的高级概述，我们将在下面介绍每个概念："
				}
			]
		},
		{
			"ID": "20210708002458-e39ij0i",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-e39ij0i",
				"updated": "20210708002458"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "img"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "./assets/ShiroBasicArchitecture.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n"
				}
			]
		},
		{
			"ID": "20210708002458-532hk2r",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-532hk2r"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "Subject 🔥"
				}
			]
		},
		{
			"ID": "20210708002458-ge7uo17",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-ge7uo17"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "Subject 本质上是当前执行用户的特定于安全性的“视图”"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。 “用户”一词通常表示一个人，而主题可以是一个人，但是它也可以表示第三方服务，守护程序帐户，定时任务或类似的东西，基本上是"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "当前与该软件交互的任何东西"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "Subject 实例都绑定到（并需要）SecurityManager"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。与 Subject 进行交互时，这些交互会转换为与 SecurityManager 的特定 Subject 的交互。"
				}
			]
		},
		{
			"ID": "20210708002458-taqvh75",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-taqvh75"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "SecurityManager 🔥"
				}
			]
		},
		{
			"ID": "20210708002458-bmltmmn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-bmltmmn"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "SecurityManager 是 Shiro 体系结构的核心"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，充当一种伞形对象，协调其内部安全组件，这些组件一起形成一个对象图。但是，一旦为应用程序配置了SecurityManager及其内部对象图，它通常就会被搁置，应用程序开发人员几乎把所有时间都花在Subject API上。稍后我们将详细讨论SecurityManager，但重要的是要认识到，当您与主题交互时，实际上是SecurityManager在幕后执行"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "所有操作"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20210708002458-48h5u37",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-48h5u37"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "Realm 🔥"
				}
			]
		},
		{
			"ID": "20210708002458-i73co48",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-i73co48"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "领域充当 Shiro 和应用程序安全数据之间的桥梁或连接器。当需要与安全相关的数据(如用户帐户)进行实际交互以执行身份验证(登录)和授权(访问控制)时，Shiro会从为应用程序配置的"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "一个或多个"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "领域中查找这些内容。"
				}
			]
		},
		{
			"ID": "20210708002458-hb2r733",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-hb2r733"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "从这个意义上说，Realm 本质上是一个安全特定的 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "DAO"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "：它封装了数据源的连接细节，并根据需要将相关数据提供给Shiro。在配置Shiro时，必须指定至少一个用于身份验证和/或授权的领域。SecurityManager "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "可以配置多个域，但至少需要一个域"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20210708002458-ccs6lbq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-ccs6lbq"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Shiro 提供了开箱即用的 Realm 来连接许多安全数据源，如LDAP、关系数据库(JDBC)、文本配置源(如INI和属性文件)等等。如果缺省领域不能满足您的需要，您可以插入自己的域实现来表示自定义数据源。"
				}
			]
		},
		{
			"ID": "20210708002458-xnq28ja",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-xnq28ja"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "::: tip"
				}
			]
		},
		{
			"ID": "20210708002458-gms2rgx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-gms2rgx"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "与其他内部组件一样，"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "SecurityManager 管理如何使用 Realm 来获取安全数据和身份数据，并将其表示为 Subject 实例"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20210708002458-te3w5oo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-te3w5oo"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": ":::"
				}
			]
		},
		{
			"ID": "20210708002458-cbvww4q",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-cbvww4q"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "Authenticator"
				}
			]
		},
		{
			"ID": "20210708002458-e65s083",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-e65s083"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "认证器"
				}
			]
		},
		{
			"ID": "20210708002458-004ydjv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-004ydjv"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "是负责执行和响应用户身份验证(登录)尝试的组件。当用户尝试登录时，验证程序将执行该逻辑。Authenticator知道如何与存储相关用户/帐户信息的一个或多个域进行协调。从这些领域获得的数据用于验证用户的身份，以确保用户确实是他们所说的那个人。"
				}
			]
		},
		{
			"ID": "20210708002458-o27opqe",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-o27opqe"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "身份验证策略"
				}
			]
		},
		{
			"ID": "20210708002458-xfy4ej2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-xfy4ej2"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果配置了多个域，AuthenticationStrategy将协调域以确定身份验证尝试成功或失败的条件(例如，如果一个域成功但其他域失败，那么尝试成功吗?)所有领域必须成功吗?只有第一个?)"
				}
			]
		},
		{
			"ID": "20210708002458-yf769ff",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-yf769ff"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "Authrizer"
				}
			]
		},
		{
			"ID": "20210708002458-0hhzsws",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-0hhzsws"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "授权器是负责确定应用程序中用户访问控制的组件。它是最终决定用户是否被允许做某事的机制。与Authenticator一样，授权器也知道如何与多个后端数据源协调，以访问角色和权限信息。授权方使用此信息准确地确定是否允许用户执行给定的操作。"
				}
			]
		},
		{
			"ID": "20210708002458-879nxzg",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-879nxzg"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "SessionManager"
				}
			]
		},
		{
			"ID": "20210708002458-z84a5d3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-z84a5d3"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "SessionManager知道如何创建和管理用户会话生命周期，为所有环境中的用户提供健壮的会话体验。这是安全框架世界中的一个独特特性—Shiro能够在任何环境中本地管理用户会话，即使没有Web/Servlet或EJB容器可用。默认情况下，Shiro将使用现有的会话机制(如Servlet容器)，但如果没有，例如在独立应用程序或非web环境中，它将使用内置的企业会话管理来提供相同的编程体验。SessionDAO的存在是为了允许使用任何数据源来持久化会话。"
				}
			]
		},
		{
			"ID": "20210708002458-b5v0mob",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-b5v0mob"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "SessionDAO"
				}
			]
		},
		{
			"ID": "20210708002458-m1ycmv4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-m1ycmv4"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "SessionDAO代表SessionManager执行会话持久性(CRUD)操作。这允许将任何数据存储插入到会话管理基础设施。"
				}
			]
		},
		{
			"ID": "20210708002458-128l988",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-128l988"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "CacheManager"
				}
			]
		},
		{
			"ID": "20210708002458-jw5xd2s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-jw5xd2s"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "CacheManager创建和管理其他Shiro组件使用的缓存实例的生命周期。由于Shiro可以访问许多后端数据源来进行身份验证、授权和会话管理，因此缓存一直是框架中的一个一流架构特性，可以在使用这些数据源时提高性能。任何现代的开源和/或企业缓存产品都可以插入到Shiro中，以提供快速和高效的用户体验。"
				}
			]
		},
		{
			"ID": "20210708002458-32mbpcp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-32mbpcp"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "缓存控制器，来管理如用户、角色、权限等的缓存的；因为这些数据基本上很少去改变，放到缓存中后可以提高访问的性能"
				}
			]
		},
		{
			"ID": "20210708002458-tk5fmqv",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-tk5fmqv"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "Cryptography"
				}
			]
		},
		{
			"ID": "20210708002458-4fu3kle",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-4fu3kle"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "密码学是企业安全框架的自然补充。Shiro的加密包包含易于使用和理解的密码、散列(又名摘要)和不同的编解码器实现的表示形式。这个包中的所有类都经过精心设计，非常易于使用和理解。任何使用过Java的本地加密支持的人都知道，要驯服它是一种具有挑战性的动物。Shiro的crypto api简化了复杂的Java机制，使普通人可以轻松地使用密码术。"
				}
			]
		},
		{
			"ID": "20210708002458-pw6n1k2",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708002458-pw6n1k2"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "术语"
				}
			]
		},
		{
			"ID": "20210708002458-t7o3qg9",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-t7o3qg9"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "Authentication—认证"
				}
			]
		},
		{
			"ID": "20210708002458-x62bc6e",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-x62bc6e"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "身份验证是验证主体身份的过程——本质上证明某人确实是他们所说的那个人。当身份验证尝试成功时，应用程序可以相信该主题一定是应用程序所期望的。"
				}
			]
		},
		{
			"ID": "20210708002458-2woxe94",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-2woxe94"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "Authorization—授权"
				}
			]
		},
		{
			"ID": "20210708002458-gzdrh2d",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-gzdrh2d"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "授权，也称为访问控制，是决定 user / Subject 是否被允许做某事的过程。它通常是通过检查和解释 Subject 的角色和权限(见下面)，然后允许或拒绝访问请求的资源或函数来完成的。"
				}
			]
		},
		{
			"ID": "20210708002458-aey4fzm",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-aey4fzm"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "Cipher—加密算法"
				}
			]
		},
		{
			"ID": "20210708002458-w2tz0fr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-w2tz0fr"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "加密算法是执行加密或解密的算法。该算法通常依赖于一条名为密钥的信息。而加密是根据密钥而变化的，所以没有密钥的解密是非常困难的。"
				},
				{
					"Type": "NodeSoftBreak",
					"Data": "\n"
				},
				{
					"Type": "NodeText",
					"Data": "密码有不同的变体。块密码通常在固定大小的符号块上工作，而流密码则在连续的符号流上工作。对称密码使用相同的密钥进行加密和解密，而非对称密码使用不同的密钥。如果非对称密码中的密钥不能从另一个密钥派生出来，则可以公开共享一个密钥，从而创建公共/私有密钥对。"
				}
			]
		},
		{
			"ID": "20210708002458-ax24nl8",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-ax24nl8"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "Credential—凭据 🔥"
				}
			]
		},
		{
			"ID": "20210708002458-4n39exm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-4n39exm"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "凭据"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "是验证 user / Subject 身份的一段信息。在验证过程中，一个(或多个) Credential 与 Subject 一起提交，以验证提交 Credential 的 user / Subject 实际上是关联的用户。凭证通常是只有特定 user / Subject 才知道的非常秘密的东西，比如密码、PGP密钥、生物统计属性或类似的机制。"
				},
				{
					"Type": "NodeSoftBreak",
					"Data": "\n"
				},
				{
					"Type": "NodeText",
					"Data": "其思想是，对于一个负责人，只有一个人知道正确的 Credential 来与该负责人“配对”。如果当前 user / Subject 提供了与系统中存储的 Credential 相匹配的正确 Credential ，那么系统可以假定并相信当前 user / Subject 就是他们所说的那个人。信任程度随着更安全的凭据类型(例如生物特征签名\u003e密码)的增加而增加。"
				}
			]
		},
		{
			"ID": "20210708002458-68ubv0q",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-68ubv0q"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "Cryptography—加密"
				}
			]
		},
		{
			"ID": "20210708002458-mm3s3ip",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-mm3s3ip"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "加密是一种实践，通过隐藏信息或将其转换成没有意义的信息，从而避免不希望的访问，这样其他人就无法读取信息。Shiro专注于密码学的两个核心元素：使用公钥或私钥加密数据(如电子邮件)的密码，以及不可逆加密数据(如密码)的散列(又名消息摘要)。"
				}
			]
		},
		{
			"ID": "20210708002458-zlqs7jc",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-zlqs7jc"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "Hash—哈希"
				}
			]
		},
		{
			"ID": "20210708002458-dzbn9g6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-dzbn9g6"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "哈希函数是输入源(有时称为消息)到经过编码的哈希值(有时称为消息摘要)的单向、不可逆转换。它通常用于密码、数字指纹或具有底层字节数组的数据。"
				}
			]
		},
		{
			"ID": "20210708002458-36488gu",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-36488gu"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "Permission—权限"
				}
			]
		},
		{
			"ID": "20210708002458-di456d2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-di456d2"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "权限(至少按照Shiro的解释)是描述应用程序原始功能的语句，仅此而已。权限是安全策略中最低级别的构造。它们只定义应用程序可以做什么。它们没有描述“谁”能够执行这些操作。许可只是一种行为的陈述，仅此而已。"
				}
			]
		},
		{
			"ID": "20210708002458-2wrrqn1",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-2wrrqn1"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "Principal—主体 🔥"
				}
			]
		},
		{
			"ID": "20210708002458-lfe6g9y",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-lfe6g9y"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "Principal 是应用程序 user ( Subject ) 的标识属性"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。“标识属性”可以是对您的应用程序有意义的任何内容—用户名、姓氏、给定名称、社会安全号码、用户ID等等。"
				},
				{
					"Type": "NodeSoftBreak",
					"Data": "\n"
				},
				{
					"Type": "NodeText",
					"Data": "Shiro还引用了我们称为 Principal 的主要原则的东西。 Principal 是在整个应用程序中唯一标识 Subject 的任何 Principal。理想的Principal 是像 RDBMS 用户表主键那样的用户名或用户ID。在"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "应用程序中， user ( Subject ) 只有一个主 Principal"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20210708002458-chpw9jr",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-chpw9jr"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "Realm—领域"
				}
			]
		},
		{
			"ID": "20210708002458-88ht9kb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-88ht9kb"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "略"
				}
			]
		},
		{
			"ID": "20210708002458-g5s6qxn",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-g5s6qxn"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "Role—角色"
				}
			]
		},
		{
			"ID": "20210708002458-uaoow19",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-uaoow19"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "略"
				}
			]
		},
		{
			"ID": "20210708002458-jo0107u",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-jo0107u"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "Session—会话"
				}
			]
		},
		{
			"ID": "20210708002458-h6y03m8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-h6y03m8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Session 是与在一段时间内与软件系统交互的单个 user ( Subject ) 相关联的有状态数据上下文。当主题使用应用程序时，可以从会话中添加/读取/删除数据，而应用程序稍后在需要时可以使用这些数据。会话在用户/主题注销应用程序或由于不活动而超时时终止。"
				},
				{
					"Type": "NodeSoftBreak",
					"Data": "\n"
				},
				{
					"Type": "NodeText",
					"Data": "对于那些熟悉HttpSession的人来说，Shiro会话具有相同的用途，只是Shiro会话可以在任何环境中使用，即使没有Servlet容器或EJB容器可用。"
				}
			]
		},
		{
			"ID": "20210708002458-r9lbciv",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-r9lbciv"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "Subject"
				}
			]
		},
		{
			"ID": "20210708002458-cj4hfmh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-cj4hfmh"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Subject 只是一个花哨的安全术语，基本上是指应用程序用户的特定于安全的“视图”。但是，Subject并不总是需要反映人——它可以表示调用您的应用程序的外部进程，或者可能表示在一段时间内间歇执行某些操作的守护进程系统帐户(例如cron作业)。它基本上是任何对应用程序进行操作的实体的表示。"
				}
			]
		},
		{
			"ID": "20210708002458-j7juo7u",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708002458-j7juo7u"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "Authentication—认证"
				}
			]
		},
		{
			"ID": "20210708002458-6e0v0hq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-6e0v0hq",
				"updated": "20210708002458"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "img"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "./assets/ShiroAuthenticationSequence.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n"
				}
			]
		},
		{
			"ID": "20210708002458-tb3mmny",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-tb3mmny"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "认证流程"
				}
			]
		},
		{
			"ID": "20210708002458-smdxyqh",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 3,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20210708002458-smdxyqh"
			},
			"Children": [
				{
					"ID": "20210708002458-h7gyc0o",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20210708002458-h7gyc0o"
					},
					"Children": [
						{
							"ID": "20210708002458-prn1u7v",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708002458-prn1u7v"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "应用程序代码执行 "
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Subject.login"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 方法，传递构造的 AuthenticationToken 实例，该实例表示最终用户的 principals 和 credentials。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708002458-ewucjs9",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20210708002458-ewucjs9"
					},
					"Children": [
						{
							"ID": "20210708002458-6swudv8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708002458-6swudv8"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Subject 实例，通常是一个 DelegatingSubject（或子类）被应用委托来调用"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "SecurityManager.login(token)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，实际的身份验证工作从这里开始。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708002458-b1hobny",
					"Type": "NodeListItem",
					"Data": "3",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 3,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "Mw==",
						"Num": 3
					},
					"Properties": {
						"id": "20210708002458-b1hobny"
					},
					"Children": [
						{
							"ID": "20210708002458-ocy0g7y",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708002458-ocy0g7y"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "SecurityManager 是一个基本的“伞形”组件，它接收令牌并通过调用"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Authenticator.authenticate(token)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "将其简单地委托给它的内部 Authenticator 实例。这几乎总是一个 ModularRealmAuthenticator 实例，它支持在身份验证期间协调一个或多个 Realm 实例。 ModularRealmAuthenticator 本质上为Apache Shiro提供了一个PAM样式的范型(在PAM术语中，每个 Realm 都是一个“模块”)。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708002458-54x5j5a",
					"Type": "NodeListItem",
					"Data": "4",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 4,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "NA==",
						"Num": 4
					},
					"Properties": {
						"id": "20210708002458-54x5j5a"
					},
					"Children": [
						{
							"ID": "20210708002458-gwbonlg",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708002458-gwbonlg"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果只配置了单个 Realm，则直接调用它——在单个域应用程序中不需要验证策略。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708002458-q2n5gg7",
					"Type": "NodeListItem",
					"Data": "5",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 5,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "NQ==",
						"Num": 5
					},
					"Properties": {
						"id": "20210708002458-q2n5gg7"
					},
					"Children": [
						{
							"ID": "20210708002458-cxdu1rq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708002458-cxdu1rq"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果为应用程序配置了多个 Realm，ModularRealmAuthenticator 实例将利用其配置的 AuthenticationStrategy 发起多域身份验证尝试。在为身份验证调用领域之前、期间和之后，将调用 AuthenticationStrategy 以允许它对每个领域的结果作出反应。我们将很快介绍身份验证策略。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708002458-fsdb686",
					"Type": "NodeListItem",
					"Data": "6",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 6,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "Ng==",
						"Num": 6
					},
					"Properties": {
						"id": "20210708002458-fsdb686"
					},
					"Children": [
						{
							"ID": "20210708002458-maodhn3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708002458-maodhn3"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "每个已配置的 Realm 都将被查询，以查看它是否支持提交的 AuthenticationToken。如果是，将使用提交的令牌调用支持域的"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "getAuthenticationInfo"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "方法。"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "getAuthenticationInfo"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "方法有效地表示该特定 Realm 的单个身份认证尝试。我们稍后将讨论领域身份认证行为。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708002458-4gd63ip",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-4gd63ip"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "Authenticator"
				}
			]
		},
		{
			"ID": "20210708002458-z46xe34",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-z46xe34"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如前所述，Shiro SecurityManager实现默认使用 ModularRealmAuthenticator 实例。ModularRealmAuthenticator 同样支持具有单个 Realm 的应用程序和具有多个 Realm 的应用程序。"
				}
			]
		},
		{
			"ID": "20210708002458-wb9p4n4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-wb9p4n4"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在单一 Realm 应用程序中，ModularRealmAuthenticator 将直接调用单一领域。如果配置了两个或多个域，它将使用AuthenticationStrategy实例来协调如何进行尝试。我们将在下面讨论身份验证策略。"
				}
			]
		},
		{
			"ID": "20210708002458-dke2ztk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-dke2ztk"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可以自定义认证器，虽然 ModularRealmAuthenticator 可以适应大部分需求。略"
				}
			]
		},
		{
			"ID": "20210708002458-m5xuleq",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-m5xuleq"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "AuthenticationStrategy"
				}
			]
		},
		{
			"ID": "20210708002458-on6l6zk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-on6l6zk"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "多个 Realm 才会使用，见文档，略"
				}
			]
		},
		{
			"ID": "20210708002458-yjx5p1u",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708002458-yjx5p1u"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "QuickStart"
				}
			]
		},
		{
			"ID": "20210708002458-78ek33d",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-78ek33d"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "::: tip"
				}
			]
		},
		{
			"ID": "20210708002458-41e4mfv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-41e4mfv"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "详细代码查看仓库"
				}
			]
		},
		{
			"ID": "20210708002458-dbx9gf6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-dbx9gf6"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": ":::"
				}
			]
		},
		{
			"ID": "20210708002458-byqy09z",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-byqy09z"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "引入依赖"
				}
			]
		},
		{
			"ID": "20210708002458-pslk45y",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "eG1s",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708002458-pslk45y"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eG1s"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\u003cdependency\u003e\n  \u003cgroupId\u003eorg.apache.shiro\u003c/groupId\u003e\n  \u003cartifactId\u003eshiro-spring-boot-starter\u003c/artifactId\u003e\n  \u003cversion\u003e1.5.1\u003c/version\u003e\u003c!--哔了狗，官网文档给的1.5.2-SNAPSHOT但是并没有存入Maven库里--\u003e\n\u003c/dependency\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708002458-6tn9tfp",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-6tn9tfp"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "配置"
				}
			]
		},
		{
			"ID": "20210708002458-4c6uqd0",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "aW5p",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708002458-4c6uqd0"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "aW5p"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "# -----------------------------------------------------------------------------\n# Users and their assigned roles\n#\n# Each line conforms to the format defined in the\n# org.apache.shiro.realm.text.TextConfigurationRealm#setUserDefinitions JavaDoc\n# -----------------------------------------------------------------------------\n[users]\n# user 'root' with password 'secret' and the 'admin' role\nroot = secret, admin\n# user 'guest' with the password 'guest' and the 'guest' role\nguest = guest, guest\n# user 'presidentskroob' with password '12345' (\"That's the same combination on\n# my luggage!!!\" ;)), and role 'president'\npresidentskroob = 12345, president\n# user 'darkhelmet' with password 'ludicrousspeed' and roles 'darklord' and 'schwartz'\ndarkhelmet = ludicrousspeed, darklord, schwartz\n# user 'lonestarr' with password 'vespa' and roles 'goodguy' and 'schwartz'\nlonestarr = vespa, goodguy, schwartz\n\n# -----------------------------------------------------------------------------\n# Roles with assigned permissions\n# \n# Each line conforms to the format defined in the\n# org.apache.shiro.realm.text.TextConfigurationRealm#setRoleDefinitions JavaDoc\n# -----------------------------------------------------------------------------\n[roles]\n# 'admin' role has all permissions, indicated by the wildcard '*'\nadmin = *\n# The 'schwartz' role can do anything (*) with any lightsaber:\nschwartz = lightsaber:*\n# The 'goodguy' role is allowed to 'drive' (action) the winnebago (type) with\n# license plate 'eagle5' (instance specific id)\ngoodguy = winnebago:drive:eagle5\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708002458-eomuglj",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-eomuglj"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "示例"
				}
			]
		},
		{
			"ID": "20210708002458-24tnkj0",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708002458-24tnkj0"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public static void main(String[] args) {\n  /*\n   创建配置了Shiro SecurityManager的最简单方法, realms, users, roles 和 permissions 使用了简单的 INI 配置\n   官方给的示例中使用 IniSecurityManagerFactory 构造来获取 SecurityManager 的方式已经过时，推荐使用 Shiro 的 Environment 替代\n  */\n  BasicIniEnvironment basicIniEnvironment = new BasicIniEnvironment(\"classpath:shiro.ini\");\n  SecurityManager securityManager = basicIniEnvironment.getSecurityManager();\n\n  /*\n   对于这个简单的快速入门示例，使用SecurityManager可作为JVM单例访问。大多数应用程序不会这样做而是依赖于它们的容器配置或 webapps 的web.xml。\n   */\n  SecurityUtils.setSecurityManager(securityManager);\n\n\n  /*\n   获取当前执行的用户（安全领域公认的命名 Subject）\n   独立应用程序中的 getSubject() 调用可能基于特定于应用程序位置的用户数据返回 Subject，而在服务器环境(例如web应用程序)中，它基于与当前线程或传入请求相关的用户数据获取 Subject。\n   */\n  Subject currentUser = SecurityUtils.getSubject();\n\n  /*\n   使用 Session 做一些事情(不需要web或EJB容器!!)\n   该 Session 是一个特定于 Shiro 的实例，它提供了常规 HttpSession 所提供的大部分内容，但也提供了一些额外的好处，还有一个很大的区别: 它不需要HTTP环境!\n   如果在 web 应用程序中部署，默认情况下会话将基于 HttpSession。但是，在非 web 环境中，比如这个简单的快速入门，Shiro默认情况下会自动使用它的企业会话管理。\n   这意味着您可以在任何层的应用程序中使用相同的API，而不管部署环境如何。这打开了一个全新的应用程序世界，因为任何需要会话的应用程序都不需要强制使用HttpSession或EJB有状态会话bean。\n   而且，任何客户机技术现在都可以共享会话数据。\n   */\n  Session session = currentUser.getSession();\n  session.setAttribute(\"hello\", \"conanan\");\n  String value = (String) session.getAttribute(\"hello\");\n  if (value.equals(\"conanan\")) {\n    log.info(\"获取到正确的值! [\" + value + \"]\");\n  }\n\n  /*\n   登录当前用户，可以检查角色和权限\n   我们只能对已知用户进行这些检查。上面的 Subject 实例表示当前用户，但是谁是当前用户呢?嗯，他们是匿名的——也就是说，直到他们至少登录一次。让我们这样做:\n   */\n  if (!currentUser.isAuthenticated()) {\n    UsernamePasswordToken token = new UsernamePasswordToken(\"lonestarr\", \"vespa\",true);\n    // token.setRememberMe(true); //也可以在构造中第三个参数添加\n    try {\n      // 登录失败需捕获异常\n      currentUser.login(token);\n    } catch (UnknownAccountException uae) {\n      log.info(\"该用户不存在：\" + token.getPrincipal());\n    } catch (IncorrectCredentialsException ice) {\n      log.info(token.getPrincipal() + \"账号的密码错误!\");\n    } catch (LockedAccountException lae) {\n      log.info(\"账号\" + token.getPrincipal() + \" 已被锁.  \" +\n               \"请联系管理员解锁.\");\n    }\n    // 在这里捕获更多的异常(可能是特定于您的应用程序的自定义异常?)\n    // 可参考https://shiro.apache.org/static/1.5.1/apidocs/org/apache/shiro/authc/AuthenticationException.html\n    catch (AuthenticationException ae) {\n      //unexpected condition?  error?\n    }\n  }\n\n  /*\n   用户登陆后可以做如下事情：告诉我们当前用户是谁，输出他的 identifying principal（主要身份，在这个示例中是 username）\n   */\n  log.info(\"用户 [\" + currentUser.getPrincipal() + \"] 登陆成功.\");\n\n  /*\n   测试是否有这个角色\n   */\n  if (currentUser.hasRole(\"schwartz\")) {\n    log.info(\"May the Schwartz be with you!\");\n  } else {\n    log.info(\"Hello, mere mortal.\");\n  }\n\n  /*\n   我们还可以看到他们是否有权限对某种类型的实体采取行动:\n   */\n  if (currentUser.isPermitted(\"lightsaber:wield\")) {\n    log.info(\"You may use a lightsaber ring.  Use it wisely.\");\n  } else {\n    log.info(\"Sorry, lightsaber rings are for schwartz masters only.\");\n  }\n\n  /*\n   此外，我们可以执行一个非常强大的实例级权限检查——查看用户是否有能力访问某个类型的特定实例:\n   */\n  if (currentUser.isPermitted(\"winnebago:drive:eagle5\")) {\n    log.info(\"You are permitted to 'drive' the winnebago with license plate (id) 'eagle5'.  \" + \"Here are the keys - have fun!\");\n  } else {\n    log.info(\"Sorry, you aren't allowed to drive the 'eagle5' winnebago!\");\n  }\n\n  /*\n   退出。删除所有标识信息并使其会话无效。\n   因为 remember 标示通常使用cookie表示，定向到登陆页面，设置同名cookie且maxAge为0\n   */\n  currentUser.logout();\n\n  System.exit(0);\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708002458-ppb79k1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-ppb79k1"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "执行后的日志"
				}
			]
		},
		{
			"ID": "20210708002458-xsvkk33",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708002458-xsvkk33"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "a.s.s.m.AbstractValidatingSessionManager : Enabling session validation scheduler...\nt.c.s.ShiroQuickstartApplication         : 获取到正确的值! [conanan]\nt.c.s.ShiroQuickstartApplication         : 用户 [lonestarr] 登陆成功.\nt.c.s.ShiroQuickstartApplication         : May the Schwartz be with you!\nt.c.s.ShiroQuickstartApplication         : You may use a lightsaber ring.  Use it wisely.\nt.c.s.ShiroQuickstartApplication         : You are permitted to 'drive' the winnebago with license plate (id) 'eagle5'.  Here are the keys - have fun!\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708002458-amr5zc9",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708002458-amr5zc9"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "Web 应用程序"
				}
			]
		},
		{
			"ID": "20210708002458-o35ox3u",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-o35ox3u"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "::: tip 文档\u0026博客"
				}
			]
		},
		{
			"ID": "20210708002458-yvv93qc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-yvv93qc"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "集成 Shiro 到 SpringBoot 的"
				},
				{
					"Type": "NodeLink",
					"Children": [
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "官方文档"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://shiro.apache.org/spring-boot.html"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。还是用谷歌搜出来的，官方文档没找到入口，👴佛了。"
				},
				{
					"Type": "NodeLink",
					"Children": [
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "GitHub"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://github.com/apache/shiro"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 的 samples 也有详细代码。这篇"
				},
				{
					"Type": "NodeLink",
					"Children": [
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "博客"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://developer.okta.com/blog/2017/07/13/apache-shiro-spring-boot"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "也不错。"
				}
			]
		},
		{
			"ID": "20210708002458-gx2pw8f",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-gx2pw8f"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": ":::"
				}
			]
		},
		{
			"ID": "20210708002458-ojkenlw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-ojkenlw"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Shiro 对 Spring web应用程序提供了一流的支持。在 web 应用程序中，所有可访问 Shiro 的 web 请求都必须经过一个"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "主 Shiro 过滤器"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。这个过滤器本身非常强大，允许基于任何 URL 路径表达式执行"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "自定义过滤器链"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20210708002458-2tl501h",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-2tl501h"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "引入依赖"
				}
			]
		},
		{
			"ID": "20210708002458-9zxu4w2",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "eG1s",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708002458-9zxu4w2"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eG1s"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\u003cdependency\u003e\n  \u003cgroupId\u003eorg.apache.shiro\u003c/groupId\u003e\n  \u003cartifactId\u003eshiro-spring-boot-web-starter\u003c/artifactId\u003e\n  \u003cversion\u003e1.5.1\u003c/version\u003e\u003c!--哔了狗，官网文档给的1.5.2-SNAPSHOT但是并没有存入Maven库里--\u003e\n\u003c/dependency\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708002458-rbruhuy",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210708002458-rbruhuy"
			},
			"Children": [
				{
					"ID": "20210708002458-ikvopol",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708002458-ikvopol"
					},
					"Children": [
						{
							"ID": "20210708002458-fqtsgm9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708002458-fqtsgm9"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Maven: org.apache.shiro:shiro-cache:1.5.1"
								}
							]
						}
					]
				},
				{
					"ID": "20210708002458-j139zuh",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708002458-j139zuh"
					},
					"Children": [
						{
							"ID": "20210708002458-8at8nzo",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708002458-8at8nzo"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Maven: org.apache.shiro:shiro-config-core:1.5.1"
								}
							]
						}
					]
				},
				{
					"ID": "20210708002458-4jhlv0s",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708002458-4jhlv0s"
					},
					"Children": [
						{
							"ID": "20210708002458-42x99xf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708002458-42x99xf"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Maven: org.apache.shiro:shiro-config-ogdl:1.5.1"
								}
							]
						}
					]
				},
				{
					"ID": "20210708002458-fc0hh4a",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708002458-fc0hh4a"
					},
					"Children": [
						{
							"ID": "20210708002458-63k41fs",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708002458-63k41fs"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Maven: org.apache.shiro:shiro-core:1.5.1"
								}
							]
						}
					]
				},
				{
					"ID": "20210708002458-zffbb4i",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708002458-zffbb4i"
					},
					"Children": [
						{
							"ID": "20210708002458-0he6e4s",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708002458-0he6e4s"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Maven: org.apache.shiro:shiro-crypto-cipher:1.5.1"
								}
							]
						}
					]
				},
				{
					"ID": "20210708002458-c4h630i",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708002458-c4h630i"
					},
					"Children": [
						{
							"ID": "20210708002458-ltggg60",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708002458-ltggg60"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Maven: org.apache.shiro:shiro-crypto-core:1.5.1"
								}
							]
						}
					]
				},
				{
					"ID": "20210708002458-7pwl68u",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708002458-7pwl68u"
					},
					"Children": [
						{
							"ID": "20210708002458-qi4yutu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708002458-qi4yutu"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Maven: org.apache.shiro:shiro-crypto-hash:1.5.1"
								}
							]
						}
					]
				},
				{
					"ID": "20210708002458-8gthnkj",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708002458-8gthnkj"
					},
					"Children": [
						{
							"ID": "20210708002458-mk2qau7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708002458-mk2qau7"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Maven: org.apache.shiro:shiro-event:1.5.1"
								}
							]
						}
					]
				},
				{
					"ID": "20210708002458-gr03z8d",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708002458-gr03z8d"
					},
					"Children": [
						{
							"ID": "20210708002458-41e00us",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708002458-41e00us"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Maven: org.apache.shiro:shiro-lang:1.5.1"
								}
							]
						}
					]
				},
				{
					"ID": "20210708002458-v7a1qbv",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708002458-v7a1qbv"
					},
					"Children": [
						{
							"ID": "20210708002458-yytevpg",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708002458-yytevpg"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Maven: org.apache.shiro:shiro-spring:1.5.1"
								}
							]
						}
					]
				},
				{
					"ID": "20210708002458-f1okvtv",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708002458-f1okvtv"
					},
					"Children": [
						{
							"ID": "20210708002458-iidj3qd",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708002458-iidj3qd"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Maven: org.apache.shiro:shiro-web:1.5.1"
								}
							]
						}
					]
				},
				{
					"ID": "20210708002458-pd1q9bw",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708002458-pd1q9bw"
					},
					"Children": [
						{
							"ID": "20210708002458-ogjtuxg",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708002458-ogjtuxg"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Maven: org.apache.shiro:shiro-spring-boot-starter:1.5.1"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708002458-gzs3jib",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-gzs3jib"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "提供 Realm 实现"
				}
			]
		},
		{
			"ID": "20210708002458-ibt37lv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-ibt37lv"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "具体Realm实现需要重写一个类，且需将其Bean放入配置类中"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20210708002458-ozrnmsq",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708002458-ozrnmsq"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "/**\n * AuthorizingRealm 继承了顶级抽象类 AuthenticatingRealm（仅用于登陆认证）\n */\npublic class UserRealm extends AuthorizingRealm {\n\n    /**\n     * 认证\n     *\n     */\n    @Override\n    protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken authenticationToken) throws AuthenticationException {\n        System.out.println(\"认证，详细见认证步骤\");\n\n        return null;\n    }\n\n    /**\n     * 授权\n     */\n    @Override\n    protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principalCollection) {\n        System.out.println(\"授权\");\n        return null;\n    }\n\n\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708002458-aopbqdc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-aopbqdc"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果未定义"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Realm"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " bean，则默认情况下，"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "ShiroAutoConfiguration"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "将提供"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "IniRealm"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "实现，该实现期望在"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "src/main/resources"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "或"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "src/main/resources/META-INF"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "中找到"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "shiro.ini"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "文件。"
				}
			]
		},
		{
			"ID": "20210708002458-law5y8h",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-law5y8h"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "ShiroFilterChainDefinition"
				}
			]
		},
		{
			"ID": "20210708002458-2y1z8k5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-2y1z8k5"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "可写在一个配置类中"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20210708002458-zn24fgv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-zn24fgv"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "它将把任何应用程序特定的路径"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "映射到给定的过滤器"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，以允许"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "不同的路径不同级别的访问"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20210708002458-j9qjru2",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708002458-j9qjru2"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@Bean\npublic ShiroFilterChainDefinition shiroFilterChainDefinition() {\n    DefaultShiroFilterChainDefinition chainDefinition = new DefaultShiroFilterChainDefinition();\n  \n    // logged in users with the 'admin' role\n    chainDefinition.addPathDefinition(\"/admin/**\", \"authc, roles[admin]\");\n  \n    // logged in users with the 'document:read' permission\n    chainDefinition.addPathDefinition(\"/docs/**\", \"authc, perms[document:read]\");\n  \n    // all other paths require a logged in user\n    chainDefinition.addPathDefinition(\"/**\", \"authc\");\n    return chainDefinition;\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708002458-cq6lyu6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-cq6lyu6"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果我们不定义一个ShiroFilterChainDefinition bean，那么框架将保护所有路径并将登录URL设置为login.jsp。我们可以通过向application.yml 中添加以下条目来更改这个默认的登录URL和其他默认值"
				}
			]
		},
		{
			"ID": "20210708002458-3ce30oh",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "eWFtbA==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708002458-3ce30oh"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eWFtbA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "shiro:\n  loginUrl: /login.html\n  successUrl: /index.html\n  unauthorizedUrl: /login.html\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708002458-9z0hypf",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-9z0hypf"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "Shiro 注解"
				}
			]
		},
		{
			"ID": "20210708002458-4zm1vtp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-4zm1vtp"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在独立应用程序和 web 应用程序中，可以 Shiro 的注释用于安全检查，替代"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "ShiroFilterChainDefinition"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，例如，"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "@RequiresRoles"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "@requirespermission"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "等，这些注释在上述两个启动程序中都是自动启用的。只需注释您的方法以便使用它们。"
				}
			]
		},
		{
			"ID": "20210708002458-0xdh504",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708002458-0xdh504"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@RequiresPermissions(\"document:read\")\npublic void readDocument() {\n    // ...\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708002458-73dleac",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-73dleac"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Shiro 注解完全支持在"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "@Controller"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "类中使用"
				}
			]
		},
		{
			"ID": "20210708002458-05y5zce",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708002458-05y5zce"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@Controller\npublic class AccountInfoController {\n\n    @RequiresRoles(\"admin\")\n    @RequestMapping(\"/admin/config\")\n    public String adminConfig(Model model) {\n        return \"view\";\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708002458-ty2gfpv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-ty2gfpv"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "ShiroFilterChainDefinition"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " bean仍然需要至少一个定义才能工作，二选一：要么配置所有路径为可通过"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "anon"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "过滤器访问，要么配置一个过滤器为允许模式，例如"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "authcBasic[per]"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20210708002458-amwz5c2",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708002458-amwz5c2"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@Bean\npublic ShiroFilterChainDefinition shiroFilterChainDefinition() {\n    DefaultShiroFilterChainDefinition chainDefinition = new DefaultShiroFilterChainDefinition();\n    // logged in users with the 'admin' role\n    chainDefinition.addPathDefinition(\"/admin/**\", \"authc, roles[admin]\");\n  \n    // logged in users with the 'document:read' permission\n    chainDefinition.addPathDefinition(\"/docs/**\", \"authc, perms[document:read]\");\n  \n    // all other paths require a logged in user\n    chainDefinition.addPathDefinition(\"/**\", \"authc\");\n    return chainDefinition;\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708002458-4tvmk7r",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708002458-4tvmk7r"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "独立应用程序—☠️"
				}
			]
		},
		{
			"ID": "20210708002458-0p2cn48",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-0p2cn48"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "引入依赖"
				}
			]
		},
		{
			"ID": "20210708002458-fwwvsyi",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "eG1s",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708002458-fwwvsyi"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eG1s"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\u003cdependency\u003e\n  \u003cgroupId\u003eorg.apache.shiro\u003c/groupId\u003e\n  \u003cartifactId\u003eshiro-spring-boot-starter\u003c/artifactId\u003e\n  \u003cversion\u003e1.5.1\u003c/version\u003e\u003c!--哔了狗，官网文档给的1.5.2-SNAPSHOT但是并没有存入Maven库里--\u003e\n\u003c/dependency\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708002458-o9ctejh",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-o9ctejh"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "自定义 Realm 类"
				}
			]
		},
		{
			"ID": "20210708002458-q6o0ilp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-q6o0ilp"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "shiro-spring-boot-starter"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "剩下的惟一工作就是配置一个Realm"
				}
			]
		},
		{
			"ID": "20210708002458-pwmco4d",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708002458-pwmco4d"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@Bean\npublic Realm realm() {\n  // ...\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708002458-9l6k4x8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-9l6k4x8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "设置Shiro的最简单的方法，这样所有的"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "SecurityUtils.*"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "方法在所有情况下都能工作，就是使"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "SecurityManager"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " bean成为一个静态单例。不要在web应用程序中这样做——请参阅上面的web应用程序部分。"
				}
			]
		},
		{
			"ID": "20210708002458-crueg7s",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708002458-crueg7s"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@Autowired\nprivate SecurityManager securityManager;\n  \n @PostConstruct\n private void initStaticSecurityManager() {\n     SecurityUtils.setSecurityManager(securityManager);\n }\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708002458-qxb3mz8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-qxb3mz8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其他自己看文档"
				}
			]
		},
		{
			"ID": "20210708002458-t4rhunu",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708002458-t4rhunu"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "过滤器"
				}
			]
		},
		{
			"ID": "20210708002458-9o8e1qy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-9o8e1qy"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "查看"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "org.apache.shiro.web.filter.mgt.DefaultFilter"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "该枚举"
				}
			]
		},
		{
			"ID": "20210708002458-il5sw8q",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708002458-il5sw8q"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public enum DefaultFilter {\n\n  anon(AnonymousFilter.class),\n  authc(FormAuthenticationFilter.class),\n  authcBasic(BasicHttpAuthenticationFilter.class),\n  authcBearer(BearerHttpAuthenticationFilter.class),\n  logout(LogoutFilter.class),\n  noSessionCreation(NoSessionCreationFilter.class),\n  perms(PermissionsAuthorizationFilter.class),\n  port(PortFilter.class),\n  rest(HttpMethodPermissionFilter.class),\n  roles(RolesAuthorizationFilter.class),\n  ssl(SslFilter.class),\n  user(UserFilter.class);\n  // ...\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708002458-10dng81",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-10dng81"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "anon 🔥"
				}
			]
		},
		{
			"ID": "20210708002458-rfq3qyg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-rfq3qyg"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "无需执行任何类型的安全性检查即可直接访问路径的筛选器。"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20210708002458-vjevwj6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-vjevwj6"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "此过滤器主要在"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "排除策略"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "中有用，在该策略中，您已定义了url模式以要求一定的安全级别，但也许该模式中仅URL的子集应允许任何访问。例如，如果您有网站的仅用户部分，则可能需要要求该部分中的任何URL访问都必须来自经过身份验证的用户。"
				}
			]
		},
		{
			"ID": "20210708002458-9tgqycc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-9tgqycc"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这是IniShiroFilter配置"
				}
			]
		},
		{
			"ID": "20210708002458-pv0l8ub",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708002458-pv0l8ub"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "[urls] \n/user/** = authc\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708002458-gzoha31",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-gzoha31"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "但是，如果您希望"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "/user/signup/**"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "对任何人都可用，则必须排除该路径，因为它是上述IniShiroFilter配置的路径的子集。"
				}
			]
		},
		{
			"ID": "20210708002458-b94dl2o",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708002458-b94dl2o"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "/user/signup/** = anon\n/user/** = authc\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708002458-npn6a7f",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-npn6a7f"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "authc 🔥"
				}
			]
		},
		{
			"ID": "20210708002458-u0g858m",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-u0g858m"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "要求"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "对请求用户进行身份验证"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "以使请求继续，如果未通过，则通过将用户重定向到您配置的"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "loginUrl"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "来强制用户登录。"
				}
			]
		},
		{
			"ID": "20210708002458-i35lhmu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-i35lhmu"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "此过滤器构造一个UsernamePasswordToken，其中包含在username，password和RememberMe请求参数中找到的值。"
				},
				{
					"Type": "NodeSoftBreak",
					"Data": "\n"
				},
				{
					"Type": "NodeText",
					"Data": "然后，它调用Subject.login（usernamePasswordToken），有效地自动执行登录尝试。"
				},
				{
					"Type": "NodeSoftBreak",
					"Data": "\n"
				},
				{
					"Type": "NodeText",
					"Data": "请注意，仅当isLoginSubmission（request，response）为true时，才会尝试登录，默认情况下，当请求是针对loginUrl且为POST请求时，才会尝试登录。"
				}
			]
		},
		{
			"ID": "20210708002458-5zm04ew",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-5zm04ew"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果登录失败，则将在AuthenticationKey属性项下将得到的AuthenticationException完全限定的类名设置为请求属性。"
				},
				{
					"Type": "NodeSoftBreak",
					"Data": "\n"
				},
				{
					"Type": "NodeText",
					"Data": "该FQCN可用作i18n键或查找机制，以向用户解释其登录尝试失败的原因（例如，无帐户，密码错误等）。"
				}
			]
		},
		{
			"ID": "20210708002458-8xzqo4d",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-8xzqo4d"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果您希望处理身份验证验证并使用自己的代码登录，请考虑改用PassThruAuthenticationFilter，它允许对loginUrl的请求直接传递到应用程序的代码。"
				}
			]
		},
		{
			"ID": "20210708002458-yckhbq2",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-yckhbq2"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "perms 🔥"
				}
			]
		},
		{
			"ID": "20210708002458-tre7x9u",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-tre7x9u"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果当前用户具有映射值指定的权限，则允许访问的过滤器；如果用户没有指定所有权限，则拒绝访问的过滤器。推荐！"
				}
			]
		},
		{
			"ID": "20210708002458-ehw2jkg",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-ehw2jkg"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "roles"
				}
			]
		},
		{
			"ID": "20210708002458-oi4l6z7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-oi4l6z7"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果当前用户具有映射值指定的角色，则允许访问的过滤器；如果用户没有指定所有角色，则拒绝访问的过滤器。但不推荐！"
				}
			]
		},
		{
			"ID": "20210708002458-oto1k3i",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-oto1k3i"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "logout 🔥"
				}
			]
		},
		{
			"ID": "20210708002458-143vexp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-143vexp"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "简单过滤器，接收到请求后，将立即注销当前正在执行的 "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Subject"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，然后将其重定向到已配置的 "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "redirectUrl"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20210708002458-vbxjv7n",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-vbxjv7n"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "rest 🔥"
				}
			]
		},
		{
			"ID": "20210708002458-xw1x9y4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-xw1x9y4"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一个过滤器，它将HTTP请求的方法（例如GET，POST等）转换为相应的动作（动词），并使用该动词来构造将被检查以确定访问权限的权限。提供此过滤器主要是为了支持REST环境，在该环境中，请求的类型（方法）转换为对一个或多个资源执行的操作。此范例与Shiro的使用权限进行访问控制的概念很好地配合使用，可以轻松地执行权限检查。"
				}
			]
		},
		{
			"ID": "20210708002458-cbuqef9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-cbuqef9"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "该过滤器的功能如下："
				}
			]
		},
		{
			"ID": "20210708002458-136apwr",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 3,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20210708002458-136apwr"
			},
			"Children": [
				{
					"ID": "20210708002458-aiy3uaz",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20210708002458-aiy3uaz"
					},
					"Children": [
						{
							"ID": "20210708002458-0t8a0ku",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708002458-0t8a0ku"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "发现传入的HTTP请求的方法（GET，POST，PUT，DELETE等）。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708002458-gr7xsfy",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20210708002458-gr7xsfy"
					},
					"Children": [
						{
							"ID": "20210708002458-bv2konn",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708002458-bv2konn"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "该方法被翻译成更“易于应用”的动词，例如“创建”，“编辑”，“删除”等。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708002458-b8wbiti",
					"Type": "NodeListItem",
					"Data": "3",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 3,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "Mw==",
						"Num": 3
					},
					"Properties": {
						"id": "20210708002458-b8wbiti"
					},
					"Children": [
						{
							"ID": "20210708002458-o5pqwrr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708002458-o5pqwrr"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "该动词将附加到当前匹配路径的任何已配置权限。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708002458-0rimoy8",
					"Type": "NodeListItem",
					"Data": "4",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 4,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "NA==",
						"Num": 4
					},
					"Properties": {
						"id": "20210708002458-0rimoy8"
					},
					"Children": [
						{
							"ID": "20210708002458-69e65d4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708002458-69e65d4"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果当前的Subject被允许执行已解决的操作，则允许请求继续。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708002458-yhsrpq1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-yhsrpq1"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "例如，如果定义了以下过滤器链，“rest”是赋予该类的过滤器实例的名称："
				}
			]
		},
		{
			"ID": "20210708002458-ojofo1y",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708002458-ojofo1y"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "/user/** = rest[user]\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708002458-40vxp7p",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-40vxp7p"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "然后，对"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "/user/1234"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的 HTTP GET请求将转换为构造的权限"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "user:read"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "（GET 映射到 read 操作）并执行权限检查"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Subject.isPermitted(\"user:read\")"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "以便允许请求继续。"
				}
			]
		},
		{
			"ID": "20210708002458-2wjg4f7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-2wjg4f7"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "同样，到"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "/user"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的HTTP POST会转换为构造的权限"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "user:create"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "（POST 映射到 create 操作）并执行权限检查"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Subject.isPermitted(\"user:create\")"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "以便允许请求继续。"
				}
			]
		},
		{
			"ID": "20210708002458-lyi9kfg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-lyi9kfg"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "以下为映射方法："
				}
			]
		},
		{
			"ID": "20210708002458-iwjcnxp",
			"Type": "NodeTable",
			"Data": "| HTTP Method | Mapped Action | Example Permission | Runtime Check |\n| ----------- | ------------- | ------------------ | ------------- |\n| head        | read          | perm1              | perm1:read    |\n| get         | read          | perm2              | perm2:read    |\n| put         | update        | perm3              | perm3:update  |\n| post        | create        | perm4              | perm4:create  |\n| delete      | delete        | perm5              | perm5:delete  |\n| mkcol       | create        | perm6              | perm6:create  |\n| options     | read          | perm7              | perm7:read    |\n| trace       | read          | perm8              | perm8:read    |",
			"TableAligns": [
				0,
				0,
				0,
				0
			],
			"Properties": {
				"id": "20210708002458-iwjcnxp"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "HTTP Method"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "Mapped Action"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "Example Permission"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "Runtime Check"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "head"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "read"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "perm1"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "perm1:read"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "get"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "read"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "perm2"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "perm2:read"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "put"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "update"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "perm3"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "perm3:update"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "post"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "create"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "perm4"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "perm4:create"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "delete"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "delete"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "perm5"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "perm5:delete"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "mkcol"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "create"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "perm6"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "perm6:create"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "options"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "read"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "perm7"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "perm7:read"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "trace"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "read"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "perm8"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "perm8:read"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708002458-2w5y3yw",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-2w5y3yw"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "user"
				}
			]
		},
		{
			"ID": "20210708002458-l63ov23",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-l63ov23"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果访问者是已知用户（定义为具有已知 principal），则允许访问资源的过滤器。这意味着将允许通过“"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "记住我"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "”功能通过身份验证或记住的任何用户访问此过滤器。如果访问者不是已知用户，那么他们将被重定向到 "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "loginUrl"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				}
			]
		},
		{
			"ID": "20210708002458-oc055f3",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-oc055f3"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "authcBasic 🔥"
				}
			]
		},
		{
			"ID": "20210708002458-aaldcfo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-aaldcfo"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "要求对请求用户进行身份验证以使请求继续，否则，要求用户通过特定于HTTP Basic协议的质询登录。成功登录后，允许他们继续访问请求的资源/ URL。"
				}
			]
		},
		{
			"ID": "20210708002458-a1r7las",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-a1r7las"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "此实现是RFC 2617中基本HTTP身份验证规范的“clean room” Java实现。"
				}
			]
		},
		{
			"ID": "20210708002458-bzi8u7a",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-bzi8u7a"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "基本身份验证功能如下："
				}
			]
		},
		{
			"ID": "20210708002458-zhbuw3k",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 3,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20210708002458-zhbuw3k"
			},
			"Children": [
				{
					"ID": "20210708002458-8d87k9a",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20210708002458-8d87k9a"
					},
					"Children": [
						{
							"ID": "20210708002458-degw1wn",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708002458-degw1wn"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "要求提供需要身份验证的资源。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708002458-ne77typ",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20210708002458-ne77typ"
					},
					"Children": [
						{
							"ID": "20210708002458-cu0k943",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708002458-cu0k943"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "服务器以401响应状态答复，设置WWW-Authenticate标头，并通知用户输入资源需要认证的页面内容。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708002458-o7dhp5k",
					"Type": "NodeListItem",
					"Data": "3",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 3,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "Mw==",
						"Num": 3
					},
					"Properties": {
						"id": "20210708002458-o7dhp5k"
					},
					"Children": [
						{
							"ID": "20210708002458-nfgt1yw",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708002458-nfgt1yw"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "从服务器收到此WWW-Authenticate质询后，客户端将采用用户名和密码，并将其设置为以下格式："
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "username:password"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210708002458-itbmmhk",
					"Type": "NodeListItem",
					"Data": "4",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 4,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "NA==",
						"Num": 4
					},
					"Properties": {
						"id": "20210708002458-itbmmhk"
					},
					"Children": [
						{
							"ID": "20210708002458-jda105v",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708002458-jda105v"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "然后，此令牌以base 64编码。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708002458-05p6fc2",
					"Type": "NodeListItem",
					"Data": "5",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 5,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "NQ==",
						"Num": 5
					},
					"Properties": {
						"id": "20210708002458-05p6fc2"
					},
					"Children": [
						{
							"ID": "20210708002458-0r7tfug",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708002458-0r7tfug"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "然后，客户端使用以下 header 发送对同一资源的另一个请求："
								}
							]
						},
						{
							"ID": "20210708002458-4kz4ik2",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210708002458-4kz4ik2"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker"
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "Authorization: Basic\nBase64_encoded_username_and_password\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708002458-ttrxq85",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-ttrxq85"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "仅当发出请求的主题未通过身份验证时，才会调用onAccessDenied（ServletRequest，ServletResponse）方法"
				}
			]
		},
		{
			"ID": "20210708002458-nnuj95v",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-nnuj95v"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "authcBearer"
				}
			]
		},
		{
			"ID": "20210708002458-dzuej2u",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-dzuej2u"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "要求对请求用户进行身份验证以使请求继续，否则，要求用户通过特定于HTTP Bearer协议的质询登录。"
				},
				{
					"Type": "NodeSoftBreak",
					"Data": "\n"
				},
				{
					"Type": "NodeText",
					"Data": "成功登录后，允许他们继续访问请求的资源/ URL。"
				}
			]
		},
		{
			"ID": "20210708002458-52593y3",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-52593y3"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "noSessionCreation"
				}
			]
		},
		{
			"ID": "20210708002458-gtem2kj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-gtem2kj"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一个PathMatchingFilter，它将在请求期间禁止创建新的会话。这是一个有用的过滤器，可以放置在任何过滤器链的前面，这些过滤器链可能会导致REST，SOAP或其他不打算参与会话的服务调用。"
				}
			]
		},
		{
			"ID": "20210708002458-d94lnwd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-d94lnwd"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "此筛选器启用以下行为："
				}
			]
		},
		{
			"ID": "20210708002458-ly6di7r",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 3,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20210708002458-ly6di7r"
			},
			"Children": [
				{
					"ID": "20210708002458-xpn0fki",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20210708002458-xpn0fki"
					},
					"Children": [
						{
							"ID": "20210708002458-3fyqh1k",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708002458-3fyqh1k"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果在调用此过滤器时某个Subject还没有Session，则此过滤器将有效地禁用对subject.getSession（）和subject.getSession（true）的所有调用。如果在请求期间调用了任何一个，则将引发异常。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708002458-4vzkgbc",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20210708002458-4vzkgbc"
					},
					"Children": [
						{
							"ID": "20210708002458-7xx2he7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708002458-7xx2he7"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "但是，如果 Subject 在调用此过滤器之前已经具有关联的会话，要么是因为它是在应用程序的另一部分中创建的，要么是在创建的链中更高的过滤器，则此过滤器无效。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708002458-9obl4oc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-9obl4oc"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "最后，对subject.getSession（false）的调用将不受影响，并且在所有情况下都可以在不受到影响的情况下进行调用。"
				}
			]
		},
		{
			"ID": "20210708002458-7dqhqb7",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-7dqhqb7"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "port"
				}
			]
		},
		{
			"ID": "20210708002458-4udrhrb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-4udrhrb"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "要求请求位于特定端口上的过滤器，如果没有，则重定向到该端口上的相同URL。"
				}
			]
		},
		{
			"ID": "20210708002458-5uym2tc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-5uym2tc"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "示例配置"
				}
			]
		},
		{
			"ID": "20210708002458-w5b5q65",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708002458-w5b5q65"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "[filters]\nport.port = 80\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708002458-v571gaf",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708002458-v571gaf"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "[urls]\n/some/path/** = port\n# override for just this path:\n/another/path/** = port[8080]\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708002458-yxj9mwl",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708002458-yxj9mwl"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "ssl"
				}
			]
		},
		{
			"ID": "20210708002458-faot2bu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-faot2bu"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "要求通过SSL进行请求的过滤器。如果在已配置的服务器端口和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "request.isSecure()"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "上收到请求，则允许访问。"
				},
				{
					"Type": "NodeSoftBreak",
					"Data": "\n"
				},
				{
					"Type": "NodeText",
					"Data": "如果任一条件为假，则过滤器链将不会继续。端口属性默认为443，并且还保证请求方案始终为“ https”（端口80除外，端口80保留了“ http”方案）。"
				}
			]
		},
		{
			"ID": "20210708002458-d6rjwvb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-d6rjwvb"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "示例配置"
				}
			]
		},
		{
			"ID": "20210708002458-fv3grhl",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708002458-fv3grhl"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "[urls]\n/secure/path/** = ssl\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708002458-e3ksr34",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708002458-e3ksr34"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "Tag"
				}
			]
		},
		{
			"ID": "20210708002458-frpri8y",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-frpri8y"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "参考"
				},
				{
					"Type": "NodeLink",
					"Children": [
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "文档"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://shiro.apache.org/web.html#Web-JSP%2FGSPTagLibrary"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，介绍的很详细"
				}
			]
		},
		{
			"ID": "20210708002458-kvd00bh",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708002458-kvd00bh"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "Caching"
				}
			]
		},
		{
			"ID": "20210708002458-p91sx6v",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708002458-p91sx6v"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "启用缓存只需提供 "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "CacheManager"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " bean"
				}
			]
		},
		{
			"ID": "20210708002458-94nw9pc",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708002458-94nw9pc"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@Bean\nprotected CacheManager cacheManager() {\n    return new MemoryConstrainedCacheManager();\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708002458-d53sz6k",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708002458-d53sz6k"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "Configuration Properties"
				}
			]
		},
		{
			"ID": "20210708002458-m4e2iaz",
			"Type": "NodeTable",
			"Data": "| Key                                               | Default Value | Description                                                                                       |\n| :------------------------------------------------ | :------------ | :------------------------------------------------------------------------------------------------ |\n| shiro.enabled                                     | `true`        | Enables Shiro’s Spring module                                                                    |\n| shiro.web.enabled                                 | `true`        | Enables Shiro’s Spring web module                                                                |\n| shiro.annotations.enabled                         | `true`        | Enables Spring support for Shiro’s annotations                                                   |\n| shiro.sessionManager.deleteInvalidSessions        | `true`        | Remove invalid session from session storage                                                       |\n| shiro.sessionManager.sessionIdCookieEnabled       | `true`        | Enable session ID to cookie, for session tracking                                                 |\n| shiro.sessionManager.sessionIdUrlRewritingEnabled | `true`        | Enable session URL rewriting support                                                              |\n| shiro.userNativeSessionManager                    | `false`       | If enabled Shiro will manage the HTTP sessions instead of the container                           |\n| shiro.sessionManager.cookie.name                  | `JSESSIONID`  | Session cookie name                                                                               |\n| **shiro.sessionManager.cookie.maxAge**            | `-1`          | Session cookie max age                                                                            |\n| **shiro.sessionManager.cookie.domain**            | null          | Session cookie domain                                                                             |\n| **shiro.sessionManager.cookie.path**              | null          | Session cookie path                                                                               |\n| shiro.sessionManager.cookie.secure                | `false`       | Session cookie secure flag                                                                        |\n| **shiro.rememberMeManager.cookie.name**           | `rememberMe`  | RememberMe cookie name                                                                            |\n| **shiro.rememberMeManager.cookie.maxAge**         | one year      | RememberMe cookie max age                                                                         |\n| **shiro.rememberMeManager.cookie.domain**         | null          | RememberMe cookie domain                                                                          |\n| **shiro.rememberMeManager.cookie.path**           | null          | RememberMe cookie path                                                                            |\n| **shiro.rememberMeManager.cookie.secure**         | `false`       | RememberMe cookie secure flag                                                                     |\n| **shiro.loginUrl**                                | `/login.jsp`  | Login URL used when unauthenticated users are redirected to login page                            |\n| **shiro.successUrl**                              | `/`           | Default landing page after a user logs in (if alternative cannot be found in the current session) |\n| **shiro.unauthorizedUrl**                         | null          | Page to redirect user to if they are unauthorized (403 page)                                      |",
			"TableAligns": [
				1,
				1,
				1
			],
			"Properties": {
				"id": "20210708002458-m4e2iaz"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Children": [
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 1,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "Key"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 1,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "Default Value"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 1,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "Description"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						1,
						1,
						1
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "shiro.enabled"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "true"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Enables Shiro’s Spring module"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						1,
						1,
						1
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "shiro.web.enabled"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "true"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Enables Shiro’s Spring web module"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						1,
						1,
						1
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "shiro.annotations.enabled"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "true"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Enables Spring support for Shiro’s annotations"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						1,
						1,
						1
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "shiro.sessionManager.deleteInvalidSessions"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "true"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Remove invalid session from session storage"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						1,
						1,
						1
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "shiro.sessionManager.sessionIdCookieEnabled"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "true"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Enable session ID to cookie, for session tracking"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						1,
						1,
						1
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "shiro.sessionManager.sessionIdUrlRewritingEnabled"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "true"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Enable session URL rewriting support"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						1,
						1,
						1
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "shiro.userNativeSessionManager"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "false"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "If enabled Shiro will manage the HTTP sessions instead of the container"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						1,
						1,
						1
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "shiro.sessionManager.cookie.name"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "JSESSIONID"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Session cookie name"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						1,
						1,
						1
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "shiro.sessionManager.cookie.maxAge"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "-1"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Session cookie max age"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						1,
						1,
						1
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "shiro.sessionManager.cookie.domain"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "null"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Session cookie domain"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						1,
						1,
						1
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "shiro.sessionManager.cookie.path"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "null"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Session cookie path"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						1,
						1,
						1
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "shiro.sessionManager.cookie.secure"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "false"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Session cookie secure flag"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						1,
						1,
						1
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "shiro.rememberMeManager.cookie.name"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "rememberMe"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "RememberMe cookie name"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						1,
						1,
						1
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "shiro.rememberMeManager.cookie.maxAge"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "one year"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "RememberMe cookie max age"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						1,
						1,
						1
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "shiro.rememberMeManager.cookie.domain"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "null"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "RememberMe cookie domain"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						1,
						1,
						1
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "shiro.rememberMeManager.cookie.path"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "null"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "RememberMe cookie path"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						1,
						1,
						1
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "shiro.rememberMeManager.cookie.secure"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "false"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "RememberMe cookie secure flag"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						1,
						1,
						1
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "shiro.loginUrl"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "/login.jsp"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Login URL used when unauthenticated users are redirected to login page"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						1,
						1,
						1
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "shiro.successUrl"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "/"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Default landing page after a user logs in (if alternative cannot be found in the current session)"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						1,
						1,
						1
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "shiro.unauthorizedUrl"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "null"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Page to redirect user to if they are unauthorized (403 page)"
								}
							]
						}
					]
				}
			]
		}
	]
}