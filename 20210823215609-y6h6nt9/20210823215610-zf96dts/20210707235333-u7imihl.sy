{
	"ID": "20210707235333-u7imihl",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20210707235333-u7imihl",
		"title": "699.JPA示例（旧）",
		"type": "doc",
		"updated": "1631719627184"
	},
	"Children": [
		{
			"ID": "20210707235333-qaq5mph",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707235333-qaq5mph"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "常用注解 🔥"
				}
			]
		},
		{
			"ID": "20210707235333-d9xkd4t",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707235333-d9xkd4t"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "@Entity"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 🔥"
				}
			]
		},
		{
			"ID": "20210707235333-1802tnt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707235333-1802tnt"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "作用：指定当前类是"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "实体类"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20210707235333-vnncer3",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707235333-vnncer3"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "@Table"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 🔥"
				}
			]
		},
		{
			"ID": "20210707235333-ibqy9dg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707235333-ibqy9dg"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "作用：指定"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "实体类和表之间的对应关系"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20210707235333-mtiqn59",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707235333-mtiqn59"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "属性："
				}
			]
		},
		{
			"ID": "20210707235333-ozr1dil",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707235333-ozr1dil"
			},
			"Children": [
				{
					"ID": "20210707235333-lge0gmh",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-lge0gmh"
					},
					"Children": [
						{
							"ID": "20210707235333-1wps14a",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-1wps14a"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "name"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：指定数据库"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "表的名称"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，不指定则为类名首字母小写，若是"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "多个单词则默认变为下划线连接"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707235333-zpj6rsl",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707235333-zpj6rsl"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "@Id"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 🔥"
				}
			]
		},
		{
			"ID": "20210707235333-j13v1b8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707235333-j13v1b8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "作用：指定当前字段是"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "主键"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20210707235333-oomajgy",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707235333-oomajgy"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "@GeneratedValue"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 🔥"
				}
			]
		},
		{
			"ID": "20210707235333-t4rz81m",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707235333-t4rz81m"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "作用：指定"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "主键的生成策略"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20210707235333-5w51im9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707235333-5w51im9"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "属性："
				}
			]
		},
		{
			"ID": "20210707235333-huwmt8u",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707235333-huwmt8u"
			},
			"Children": [
				{
					"ID": "20210707235333-pes9xyi",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-pes9xyi"
					},
					"Children": [
						{
							"ID": "20210707235333-x6hl1se",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-x6hl1se"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "strategy"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " ：指定主键生成策略。JPA 提供的四种标准用法为"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "TABLE"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": ","
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "SEQUENCE"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": ","
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "IDENTITY"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": ","
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "AUTO"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						},
						{
							"ID": "20210707235333-lh5wz5o",
							"Type": "NodeList",
							"ListData": {
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707235333-lh5wz5o"
							},
							"Children": [
								{
									"ID": "20210707235333-ww4qp0d",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707235333-ww4qp0d"
									},
									"Children": [
										{
											"ID": "20210707235333-2sdfe3v",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707235333-2sdfe3v"
											},
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "IDENTITY"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "：主键由数据库"
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "自动生成"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "（主要是自动增长型，必须数据库底层支持，如 MySQL）"
												}
											]
										},
										{
											"ID": "20210707235333-xjtp0c0",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"CodeBlockFenceChar": 96,
											"CodeBlockFenceLen": 3,
											"CodeBlockOpenFence": "YGBg",
											"CodeBlockInfo": "amF2YQ==",
											"CodeBlockCloseFence": "YGBg",
											"Properties": {
												"id": "20210707235333-xjtp0c0"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```",
													"CodeBlockFenceLen": 3
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "amF2YQ=="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "@Id\n@GeneratedValue(strategy = GenerationType.IDENTITY)\nprivate Long custId;\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```",
													"CodeBlockFenceLen": 3
												}
											]
										}
									]
								},
								{
									"ID": "20210707235333-cfnbn6v",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707235333-cfnbn6v"
									},
									"Children": [
										{
											"ID": "20210707235333-ku571dp",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707235333-ku571dp"
											},
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "SEQUENCE"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "：根据底层数据库的"
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "序列"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "来生成主键，条件是数据库支持序列，如 Oracle。"
												}
											]
										},
										{
											"ID": "20210707235333-28inyoh",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"CodeBlockFenceChar": 96,
											"CodeBlockFenceLen": 3,
											"CodeBlockOpenFence": "YGBg",
											"CodeBlockInfo": "amF2YQ==",
											"CodeBlockCloseFence": "YGBg",
											"Properties": {
												"id": "20210707235333-28inyoh"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```",
													"CodeBlockFenceLen": 3
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "amF2YQ=="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "@Id\n@GeneratedValue(strategy = GenerationType.SEQUENCE,generator=\"payablemoney_seq\")\n@SequenceGenerator(name=\"payablemoney_seq\", sequenceName=\"seq_payment\")\nprivate Long custId;\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```",
													"CodeBlockFenceLen": 3
												}
											]
										},
										{
											"ID": "20210707235333-kfdmmy9",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"CodeBlockFenceChar": 96,
											"CodeBlockFenceLen": 3,
											"CodeBlockOpenFence": "YGBg",
											"CodeBlockInfo": "amF2YQ==",
											"CodeBlockCloseFence": "YGBg",
											"Properties": {
												"id": "20210707235333-kfdmmy9"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```",
													"CodeBlockFenceLen": 3
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "amF2YQ=="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "//@SequenceGenerator源码中的定义\n@Target({TYPE, METHOD, FIELD})\n@Retention(RUNTIME)\npublic @interface SequenceGenerator {\n    //表示该表主键生成策略的名称，它被引用在@GeneratedValue中设置的“generator”值中\n    String name();\n    //属性表示生成策略用到的数据库序列名称。\n    String sequenceName() default \"\";\n    //表示主键初识值，默认为0\n    int initialValue() default 0;\n    //表示每次主键值增加的大小，例如设置1，则表示每次插入新记录后自动加1，默认为50\n    int allocationSize() default 50;\n}\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```",
													"CodeBlockFenceLen": 3
												}
											]
										}
									]
								},
								{
									"ID": "20210707235333-j6usok4",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707235333-j6usok4"
									},
									"Children": [
										{
											"ID": "20210707235333-qw4ahnm",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707235333-qw4ahnm"
											},
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "AUTO"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "：主键由程序控制（测试了下使用的是 TABLE）"
												}
											]
										},
										{
											"ID": "20210707235333-3nv5u8l",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"CodeBlockFenceChar": 96,
											"CodeBlockFenceLen": 3,
											"CodeBlockOpenFence": "YGBg",
											"CodeBlockInfo": "amF2YQ==",
											"CodeBlockCloseFence": "YGBg",
											"Properties": {
												"id": "20210707235333-3nv5u8l"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```",
													"CodeBlockFenceLen": 3
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "amF2YQ=="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "@Id\n@GeneratedValue(strategy = GenerationType.AUTO)\nprivate Long custId;\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```",
													"CodeBlockFenceLen": 3
												}
											]
										}
									]
								},
								{
									"ID": "20210707235333-fen5jd1",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707235333-fen5jd1"
									},
									"Children": [
										{
											"ID": "20210707235333-2wsk9qd",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707235333-2wsk9qd"
											},
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "TABLE"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "：使用一个特定的数据库表格来保存主键"
												}
											]
										},
										{
											"ID": "20210707235333-chiarpe",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"CodeBlockFenceChar": 96,
											"CodeBlockFenceLen": 3,
											"CodeBlockOpenFence": "YGBg",
											"CodeBlockInfo": "amF2YQ==",
											"CodeBlockCloseFence": "YGBg",
											"Properties": {
												"id": "20210707235333-chiarpe"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```",
													"CodeBlockFenceLen": 3
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "amF2YQ=="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "@Id\n@GeneratedValue(strategy = GenerationType.TABLE, generator=\"payablemoney_gen\")\n@TableGenerator(name = \"pk_gen\",\n                table=\"tb_generator\",\n                pkColumnName=\"gen_name\",\n                valueColumnName=\"gen_value\",\n                pkColumnValue=\"PAYABLEMOENY_PK\",\n                allocationSize=1\n               )\nprivate Long custId;\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```",
													"CodeBlockFenceLen": 3
												}
											]
										},
										{
											"ID": "20210707235333-tng89cl",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"CodeBlockFenceChar": 96,
											"CodeBlockFenceLen": 3,
											"CodeBlockOpenFence": "YGBg",
											"CodeBlockInfo": "amF2YQ==",
											"CodeBlockCloseFence": "YGBg",
											"Properties": {
												"id": "20210707235333-tng89cl"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```",
													"CodeBlockFenceLen": 3
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "amF2YQ=="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "//@TableGenerator的定义：\n@Target({TYPE, METHOD, FIELD})\n@Retention(RUNTIME)\npublic @interface TableGenerator {\n    //表示该表主键生成策略的名称，它被引用在@GeneratedValue中设置的“generator”值中\n    String name();\n    //表示表生成策略所持久化的表名，例如，这里表使用的是数据库中的“tb_generator”。\n    String table() default \"\";\n    //catalog和schema具体指定表所在的目录名或是数据库名\n    String catalog() default \"\";\n    String schema() default \"\";\n    //属性的值表示在持久化表中，该主键生成策略所对应键值的名称。例如在“tb_generator”中将“gen_name”作为主键的键值\n    String pkColumnName() default \"\";\n    //属性的值表示在持久化表中，该主键当前所生成的值，它的值将会随着每次创建累加。例如，在“tb_generator”中将“gen_value”作为主键的值\n    String valueColumnName() default \"\";\n    //属性的值表示在持久化表中，该生成策略所对应的主键。例如在“tb_generator”表中，将“gen_name”的值为“CUSTOMER_PK”。\n    String pkColumnValue() default \"\";\n    //表示主键初识值，默认为0。\n    int initialValue() default 0;\n    //表示每次主键值增加的大小，例如设置成1，则表示每次创建新记录后自动加1，默认为50。\n    int allocationSize() default 50;\n    UniqueConstraint[] uniqueConstraints() default {};\n}\n/*==================================================================*/\n//这里应用表tb_generator，定义为 ：\nCREATE TABLE  tb_generator (\n    id NUMBER NOT NULL,\n    gen_name VARCHAR2(255) NOT NULL,\n    gen_value NUMBER NOT NULL,\n    PRIMARY KEY(id)\n)\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```",
													"CodeBlockFenceLen": 3
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707235333-ruj48l2",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707235333-ruj48l2"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "@Column"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 🔥"
				}
			]
		},
		{
			"ID": "20210707235333-2f2caz3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707235333-2f2caz3"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "作用：指定实体类属性和数据库表之间的对应关系"
				}
			]
		},
		{
			"ID": "20210707235333-pzg5yxy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707235333-pzg5yxy"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "属性："
				}
			]
		},
		{
			"ID": "20210707235333-yhpmasq",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707235333-yhpmasq"
			},
			"Children": [
				{
					"ID": "20210707235333-xf9k462",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-xf9k462"
					},
					"Children": [
						{
							"ID": "20210707235333-pv8jca7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-pv8jca7"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "name"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：指定数据库表的列名称。不指定则为属性名，若是"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "多个单词则默认变为下划线连接"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-rjcr0v2",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-rjcr0v2"
					},
					"Children": [
						{
							"ID": "20210707235333-7b07542",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-7b07542"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "length"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：长度"
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-am9ps6x",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-am9ps6x"
					},
					"Children": [
						{
							"ID": "20210707235333-fo4mq9y",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-fo4mq9y"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "unique"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：是否唯一"
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-dugxv4i",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-dugxv4i"
					},
					"Children": [
						{
							"ID": "20210707235333-9so3l60",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-9so3l60"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "nullable"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：是否可以为空"
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-lmlr7f4",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-lmlr7f4"
					},
					"Children": [
						{
							"ID": "20210707235333-7oquh3s",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-7oquh3s"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "inserttable"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：是否可以插入"
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-32cz9q4",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-32cz9q4"
					},
					"Children": [
						{
							"ID": "20210707235333-v2ae4el",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-v2ae4el"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "updateable"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：是否可以更新"
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-8dszesx",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-8dszesx"
					},
					"Children": [
						{
							"ID": "20210707235333-62f9rbt",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-62f9rbt"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "columnDefinition"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": ": 定义建表时创建此列的 DDL"
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-twj2w4j",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-twj2w4j"
					},
					"Children": [
						{
							"ID": "20210707235333-yvigp5n",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-yvigp5n"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "secondaryTable"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": ": 从表名。如果此列不建在主表上（默认建在主表），该属性定义该列所在从表的名字搭建开发环境[重点]"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707235333-wbpq7hb",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707235333-wbpq7hb"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "@Transient"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 🔥"
				}
			]
		},
		{
			"ID": "20210707235333-kfbg5t8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707235333-kfbg5t8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "瞬态，即不会被映射到数据库表字段"
				}
			]
		},
		{
			"ID": "20210707235333-7wacnt8",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707235333-7wacnt8"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "@OneToMany"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				}
			]
		},
		{
			"ID": "20210707235333-butk468",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707235333-butk468"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "建立一对多的关系映射"
				}
			]
		},
		{
			"ID": "20210707235333-9m4ybil",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707235333-9m4ybil"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "属性："
				}
			]
		},
		{
			"ID": "20210707235333-uj3yswf",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707235333-uj3yswf"
			},
			"Children": [
				{
					"ID": "20210707235333-n4yq8kd",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-n4yq8kd"
					},
					"Children": [
						{
							"ID": "20210707235333-rggnn6m",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-rggnn6m"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "mappedBy"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：🔥 指定"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "在从表实体类中引用主表对象的名称"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，一般用于"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "主表放弃外键维护"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "或"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "被维护表放弃维护中间表"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-cglf3v8",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-cglf3v8"
					},
					"Children": [
						{
							"ID": "20210707235333-2qnzxpl",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-2qnzxpl"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeCodeSpan",
											"CodeMarkerLen": 1,
											"Children": [
												{
													"Type": "NodeCodeSpanOpenMarker",
													"Data": "`"
												},
												{
													"Type": "NodeCodeSpanContent",
													"Data": "fetch"
												},
												{
													"Type": "NodeCodeSpanCloseMarker",
													"Data": "`"
												}
											]
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：指定是否采用"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "延迟加载"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，枚举类"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "FetchType"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"ID": "20210707235333-t5q5t3o",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707235333-t5q5t3o"
							},
							"Children": [
								{
									"ID": "20210707235333-2z2qeux",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707235333-2z2qeux"
									},
									"Children": [
										{
											"ID": "20210707235333-8ybef63",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707235333-8ybef63"
											},
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "LAZY"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "（"
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "默认"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "），"
												},
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "EAGER"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-gejvd0g",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-gejvd0g"
					},
					"Children": [
						{
							"ID": "20210707235333-tvmucf8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-tvmucf8"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeCodeSpan",
											"CodeMarkerLen": 1,
											"Children": [
												{
													"Type": "NodeCodeSpanOpenMarker",
													"Data": "`"
												},
												{
													"Type": "NodeCodeSpanContent",
													"Data": "cascade"
												},
												{
													"Type": "NodeCodeSpanCloseMarker",
													"Data": "`"
												}
											]
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：指定要使用的"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "级联"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "操作，枚举类"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "CascadeType"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"ID": "20210707235333-923120u",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707235333-923120u"
							},
							"Children": [
								{
									"ID": "20210707235333-08qqx2p",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707235333-08qqx2p"
									},
									"Children": [
										{
											"ID": "20210707235333-yih1gv1",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707235333-yih1gv1"
											},
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "ALL"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "，"
												},
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "PERSIST"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "，"
												},
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "MERGE"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "，"
												},
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "REMOVE"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "，"
												},
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "REFRESH"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "，"
												},
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "DETACH"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "；"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-un3dasd",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-un3dasd"
					},
					"Children": [
						{
							"ID": "20210707235333-ltz9k8l",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-ltz9k8l"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "orphanRemoval"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：是否使用孤儿删除，true；false（默认）"
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-wf18mpa",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-wf18mpa"
					},
					"Children": [
						{
							"ID": "20210707235333-ym0rw24",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-ym0rw24"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "targetEntity"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：指定多的多方的类的字节码，可省略会自动推倒"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707235333-137xexb",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707235333-137xexb"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "@ManyToOne"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				}
			]
		},
		{
			"ID": "20210707235333-gefdk5t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707235333-gefdk5t"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "建立多对一的关系"
				}
			]
		},
		{
			"ID": "20210707235333-c6gjgct",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707235333-c6gjgct"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "属性："
				}
			]
		},
		{
			"ID": "20210707235333-j8wugxc",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707235333-j8wugxc"
			},
			"Children": [
				{
					"ID": "20210707235333-m7via1v",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-m7via1v"
					},
					"Children": [
						{
							"ID": "20210707235333-f586tfh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-f586tfh"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "fetch"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：指定是否采用"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "延迟"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "加载（同上）"
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-gfr6kzz",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-gfr6kzz"
					},
					"Children": [
						{
							"ID": "20210707235333-mod6jjq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-mod6jjq"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "cascade"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：指定要使用的"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "级联"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "操作（同上）"
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-7jkpngx",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-7jkpngx"
					},
					"Children": [
						{
							"ID": "20210707235333-ee6sl0t",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-ee6sl0t"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "optional"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：关联是否可选。如果设置为 false，则必须始终存在非空关系。默认为 true"
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-mxofcku",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-mxofcku"
					},
					"Children": [
						{
							"ID": "20210707235333-lp81bj8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-lp81bj8"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "targetEntity"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：指定一的一方实体类字节码，可省略会自动推导"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707235333-t5drhuo",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707235333-t5drhuo"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "@ManyToMany"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				}
			]
		},
		{
			"ID": "20210707235333-9fyc8lp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707235333-9fyc8lp"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "用于映射多对多关系"
				}
			]
		},
		{
			"ID": "20210707235333-xyh9gqh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707235333-xyh9gqh"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "属性："
				}
			]
		},
		{
			"ID": "20210707235333-0lxp6lp",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707235333-0lxp6lp"
			},
			"Children": [
				{
					"ID": "20210707235333-mp2y1si",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-mp2y1si"
					},
					"Children": [
						{
							"ID": "20210707235333-8z5ukny",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-8z5ukny"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "fetch"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：指定是否采用"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "延迟"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "加载（同上）"
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-hclx8is",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-hclx8is"
					},
					"Children": [
						{
							"ID": "20210707235333-muk83gy",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-muk83gy"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "cascade"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：指定要使用的"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "级联"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "操作（同上）"
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-q7tcsy0",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-q7tcsy0"
					},
					"Children": [
						{
							"ID": "20210707235333-z4mnoom",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-z4mnoom"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "targetEntity"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：配置目标的实体类。映射多对多的时候不用写。可省略会自动推导"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707235333-k5rt9vg",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707235333-k5rt9vg"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "@OneToOne"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				}
			]
		},
		{
			"ID": "20210707235333-uohjalw",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707235333-uohjalw"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "@JoinColumn"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 🔥"
				}
			]
		},
		{
			"ID": "20210707235333-aabjjii",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707235333-aabjjii"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "用于定义"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "主键字段和外键字段的对应关系"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，主要用于"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "从表中定义外键的引用"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20210707235333-jeoc5av",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707235333-jeoc5av"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "属性："
				}
			]
		},
		{
			"ID": "20210707235333-yygyvkf",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707235333-yygyvkf"
			},
			"Children": [
				{
					"ID": "20210707235333-aqmqy18",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-aqmqy18"
					},
					"Children": [
						{
							"ID": "20210707235333-llfp0vg",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-llfp0vg"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "name"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：指定"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "外键字段的名称"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，不配置则根据被维护表中属性名和"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "referencedColumnName"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "组合"
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-n7rzblj",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-n7rzblj"
					},
					"Children": [
						{
							"ID": "20210707235333-tdrfmnx",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-tdrfmnx"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "referencedColumnName"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：指定"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "引用主表的主键字段名称"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-x74h3up",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-x74h3up"
					},
					"Children": [
						{
							"ID": "20210707235333-9w5or6z",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-9w5or6z"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "unique"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：是否唯一。默认 false"
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-1yc4ukg",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-1yc4ukg"
					},
					"Children": [
						{
							"ID": "20210707235333-qt73avm",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-qt73avm"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "nullable"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：是否允许为空。默认 true。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-tof91bk",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-tof91bk"
					},
					"Children": [
						{
							"ID": "20210707235333-wmo5v2p",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-wmo5v2p"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "insertable"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：是否允许插入。默认 true。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-i206ltr",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-i206ltr"
					},
					"Children": [
						{
							"ID": "20210707235333-ssj4hzi",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-ssj4hzi"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "updatable"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：是否允许更新。默认 true。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-kkt3yy0",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-kkt3yy0"
					},
					"Children": [
						{
							"ID": "20210707235333-fmbfoj9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-fmbfoj9"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "columnDefinition"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：列的定义信息。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707235333-87upikk",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707235333-87upikk"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "@JoinTable"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				}
			]
		},
		{
			"ID": "20210707235333-485mt2k",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707235333-485mt2k"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "针对"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "中间表的配置"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，主要"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "用于维护表来设置"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20210707235333-zo1n71w",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707235333-zo1n71w"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "属性："
				}
			]
		},
		{
			"ID": "20210707235333-6xo5rku",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707235333-6xo5rku"
			},
			"Children": [
				{
					"ID": "20210707235333-k3atn7a",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-k3atn7a"
					},
					"Children": [
						{
							"ID": "20210707235333-61acluk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-61acluk"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "name"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：配置"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "中间表的名称"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，不配置则自动根据维护表和被维护表的类名组合来生成"
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-bx9hoab",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-bx9hoab"
					},
					"Children": [
						{
							"ID": "20210707235333-qkhlr1s",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-qkhlr1s"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "@joinColumns"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：需要中间表的外键字段"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "关联当前实体类所对应表的主键字段"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-d2oi0q3",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-d2oi0q3"
					},
					"Children": [
						{
							"ID": "20210707235333-t4wjc3k",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-t4wjc3k"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "@inverseJoinColumn"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：需要中间表的外键字段"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "关联对方表的主键字段"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707235333-qryazin",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707235333-qryazin"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "配置"
				}
			]
		},
		{
			"ID": "20210707235333-wtmv179",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707235333-wtmv179"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "Maven 坐标导入"
				}
			]
		},
		{
			"ID": "20210707235333-ob0fgwe",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "eG1s",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707235333-ob0fgwe"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eG1s"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\u003cdependency\u003e\n    \u003cgroupId\u003emysql\u003c/groupId\u003e\n    \u003cartifactId\u003emysql-connector-java\u003c/artifactId\u003e\n    \u003cscope\u003eruntime\u003c/scope\u003e\n\u003c/dependency\u003e\n\u003cdependency\u003e\n    \u003cgroupId\u003eorg.springframework.boot\u003c/groupId\u003e\n    \u003cartifactId\u003espring-boot-starter-data-jpa\u003c/artifactId\u003e\n\u003c/dependency\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707235333-zck6tgn",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707235333-zck6tgn"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "配置文件"
				}
			]
		},
		{
			"ID": "20210707235333-vb0ajf3",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "eW1s",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707235333-vb0ajf3"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eW1s"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "spring:\n  datasource:\n    url: jdbc:mysql:///sleeve?characterEncoding=utf-8\u0026serverTimezone=GMT%2B8\n    username: root\n    password: w111111\n  jpa:\n    hibernate:\n      # 一般只推荐 update（但是修改字段也不会重新生成表）; create 会清空之前的表; create-drop 一般用在测试, 会话完成后清空表。\n      # 其实也不推荐使用, 后续会置为 none\n      ddl-auto: create-drop\n    show-sql: true # 显示\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707235333-qk1strh",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707235333-qk1strh"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "建立 ORM 🔥"
				}
			]
		},
		{
			"ID": "20210707235333-ely1cwv",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 3,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20210707235333-ely1cwv"
			},
			"Children": [
				{
					"ID": "20210707235333-mv11th4",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20210707235333-mv11th4"
					},
					"Children": [
						{
							"ID": "20210707235333-74nth1p",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-74nth1p"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "创建客户的数据库表（不创建也行）"
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-125n88p",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20210707235333-125n88p"
					},
					"Children": [
						{
							"ID": "20210707235333-tktc763",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-tktc763"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "在实体类上使用 JPA 注解的形式配置映射关系"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						},
						{
							"ID": "20210707235333-9qf77aw",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-9qf77aw"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "所有的注解都是使用 JPA 的规范提供的注解，导入"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "javax.persistence"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "下注解包"
								}
							]
						},
						{
							"ID": "20210707235333-y43t7j0",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "amF2YQ==",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210707235333-y43t7j0"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "@Entity\n@Table(name = \"cst_customer\")\npublic class Customer {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    @Column(name = \"cust_id\")\n    private Long custId; //客户的主键\n\n    @Column(name = \"cust_name\")\n    private String custName;//客户名称\n\n    @Column(name = \"cust_source\")\n    private String custSource;//客户来源\n\n    @Column(name = \"cust_level\")\n    private String custLevel;//客户级别\n\n    @Column(name = \"cust_industry\")\n    private String custIndustry;//客户所属行业\n\n    @Column(name = \"cust_phone\")\n    private String custPhone;//客户的联系方式\n\n    @Column(name = \"cust_address\")\n    private String custAddress;//客户地址\n\n    //getter setter\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707235333-vj5kxcg",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707235333-vj5kxcg"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "Repository 接口"
				}
			]
		},
		{
			"ID": "20210707235333-hghur6s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707235333-hghur6s"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "别忘了接口之间是可以多继承的！！！"
				}
			]
		},
		{
			"ID": "20210707235333-fyc6hx0",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707235333-fyc6hx0"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "/**\n * JpaRepository\u003c实体类类型，主键类型\u003e：用来完成基本CRUD操作\n * JpaSpecificationExecutor\u003c实体类类型\u003e：用于复杂查询（分页等查询操作）\n */\npublic interface CustomerDao extends JpaRepository\u003cCustomer,Long\u003e, JpaSpecificationExecutor\u003cCustomer\u003e {\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707235333-wrpbcww",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707235333-wrpbcww"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Children": [
						{
							"Type": "NodeBang",
							"Data": "!"
						},
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "image-20201124233941717"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "./assets/image-20201124233941717.png"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20210707235333-sl6layg",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707235333-sl6layg"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "基本 CRUD 和复杂查询"
				}
			]
		},
		{
			"ID": "20210707235333-3qhj8of",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707235333-3qhj8of"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "接口中的定义好的方法"
				}
			]
		},
		{
			"ID": "20210707235333-7fvwrdi",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20210707235333-7fvwrdi"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e "
				},
				{
					"ID": "20210707235333-xrrsi9d",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20210707235333-xrrsi9d"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "以下是继承了 JpaRepository 接口后获得的"
						}
					]
				}
			]
		},
		{
			"ID": "20210707235333-8iricz7",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707235333-8iricz7"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@RunWith(SpringJUnit4ClassRunner.class)\n@ContextConfiguration(locations = \"classpath:applicationContext.xml\")//locations可省略\npublic class CustomerDaoTest {\n\n    @Autowired\n    private CustomerDao customerDao;\n\n    @Test\n    public void testFindById() {\n        Optional\u003cCustomer\u003e optional = customerDao.findById(3L);\n        System.out.println(optional.orElse(null));\n    }\n\n\n    /**\n     * 根据ID查询（立即加载，底层调用find()方法）\n     */\n    @Test\n    public void testFindOne() {\n        Customer customer = customerDao.findOne(3L);\n        System.out.println(customer);\n    }\n\n    /**\n     * 根据ID查询（延迟加载，底层调用getReference()方法）\n     * 返回的是动态代理对象；什么时候用，什么时候查询（IDEA需要去掉Debug中几个选项才可以看到）\n     */\n    @Test\n    @Transactional\n    public void testGetOne() {\n        Customer customer = customerDao.getOne(3L);\n        System.out.println(customer);\n    }\n\n    /**\n     * 查询所有\n     */\n    @Test\n    public void testFindAll() {\n        List\u003cCustomer\u003e customerList = customerDao.findAll();\n        System.out.println(customerList);\n    }\n\n    /**\n     * 保存或更新（！！！不要直接使用这个来更新，否则会将其他没有值的数据置null。）\n     * 根据传递的对象是否包含主键ID，不包含则是保存；包含则是先根据ID查询数据，并更新\n     *\n     * 更新需要根据ID手动查找，然后修改再保存！！！\n     */\n    @Test\n    public void testSave() {\n        Customer customer = new Customer();\n        customer.setCustName(\"黑马程序员\");\n        customer.setCustAddress(\"西安\");\n        customerDao.save(customer);\n    }\n    @Test\n    public void testUpdate() {\n        Customer customer = new Customer();\n        customer.setCustId(8L);\n        customer.setCustName(\"黑马程序员牛逼\");\n        customer.setCustAddress(\"西安\");\n        customer.setCustLevel(\"VIP\");\n        customerDao.save(customer);\n    }\n\n    /**\n     * 根据ID删除（底层是先查询，若有再删除）\n     */\n    @Test\n    public void testDelete() {\n        customerDao.delete(8L);\n    }\n\n    /**\n     * 统计查询\n     */\n    @Test\n    public void testCount() {\n        long count = customerDao.count();\n        System.out.println(count);\n    }\n\n    /**\n     * 根据ID判断是否存在该数据（可以根据查询的对象是否为null；或统计出的数量是否大于0（这里底层用的是这个））\n     */\n    @Test\n    public void testExists() {\n        boolean exists = customerDao.exists(7L);\n        System.out.println(exists);\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707235333-nxkhps2",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707235333-nxkhps2"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "方法名称规则查询"
				}
			]
		},
		{
			"ID": "20210707235333-o5oc3va",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707235333-o5oc3va"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "方法命名规则查询就是根据方法的名字，就能创建查询，是对 JPQL 更深层次封装。只需要按照 Spring Data JPA 提供的方法命名规则定义方法的名称，不需要配置 JPQL 语句就可以完成查询工作。Spring Data JPA 在程序执行的时候会根据方法名称进行解析，并自动生成查询语句进行查询。"
				}
			]
		},
		{
			"ID": "20210707235333-bmviaa5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707235333-bmviaa5"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "按照 Spring Data JPA 定义的规则，查询方法以"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeCodeSpan",
							"CodeMarkerLen": 1,
							"Children": [
								{
									"Type": "NodeCodeSpanOpenMarker",
									"Data": "`"
								},
								{
									"Type": "NodeCodeSpanContent",
									"Data": "findBy"
								},
								{
									"Type": "NodeCodeSpanCloseMarker",
									"Data": "`"
								}
							]
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "开头，涉及条件查询时，"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "条件的属性用条件关键字连接"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，要注意的是：条件"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "属性首字母需大写"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。框架在进行方法名解析时，会先把方法名多余的前缀截取掉，然后对剩下部分进行解析。也可以"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "删除"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20210707235333-h54spc2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707235333-h54spc2"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "会根据"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "先后顺序"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "传参！！名称无所谓"
				}
			]
		},
		{
			"ID": "20210707235333-mfdu0k8",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707235333-mfdu0k8"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public interface CustomerDao extends JpaRepository\u003cCustomer,Long\u003e, JpaSpecificationExecutor\u003cCustomer\u003e {\n    /**\n     * 方法名称查询（精准匹配）\n     */\n    Customer findByCustName(String custName);\n\n    /**\n     * 方法名称查询（like模糊匹配）\n     */\n    List\u003cCustomer\u003e findByCustNameLike(String custName);\n\n    /**\n     * 方法名称查询（使用客户名称模糊匹配和客户行业精准匹配）\n     */\n    List\u003cCustomer\u003e findByCustNameLikeAndCustIndustry(String custName,String custIndustry);\n}\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707235333-szurrtg",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707235333-szurrtg"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@RunWith(SpringJUnit4ClassRunner.class)\n@ContextConfiguration(locations = \"classpath:applicationContext.xml\")//locations可省略\npublic class JPQLTest {\n\n    @Autowired\n    private CustomerDao customerDao;\n\n    /**\n     * 测试方法命名查询\n     */\n    @Test\n    public void testFindByCustName(){\n        Customer customer = customerDao.findByCustName(\"传智播客6\");\n        System.out.println(customer);\n    }\n\n    /**\n     * 测试方法命名查询（模糊匹配）\n     */\n    @Test\n    public void testFindByCustNameLike(){\n        List\u003cCustomer\u003e customerList = customerDao.findByCustNameLike(\"传智%\");\n        System.out.println(customerList);\n    }\n\n    /**\n     * 测试方法命名查询（使用客户名称模糊匹配和客户行业精准匹配）\n     */\n    @Test\n    public void testFindByCustNameLikeAndCustIndustry(){\n        List\u003cCustomer\u003e customerList = customerDao.findByCustNameLikeAndCustIndustry(\"传智%\",\"IT\");\n        System.out.println(customerList);\n    }\n}\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707235333-j76qew3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707235333-j76qew3"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "具体的关键字，使用方法和生产成 SQL 如下表所示"
				}
			]
		},
		{
			"ID": "20210707235333-hzldl14",
			"Type": "NodeTable",
			"Data": "|    **Keyword**    |                **Sample**                |                            **JPQL**                            |\n| :---------------: | :--------------------------------------: | :------------------------------------------------------------: |\n|        And        |        findByLastnameAndFirstname        |          … where x.lastname = ?1 and x.firstname = ?2          |\n|        Or         |        findByLastnameOrFirstname         |          … where x.lastname = ?1 or x.firstname = ?2           |\n|     Is,Equals     | findByFirstnameIs, findByFirstnameEquals |                    … where x.firstname = ?1                    |\n|      Between      |          findByStartDateBetween          |             … where x.startDate between ?1 and ?2              |\n|     LessThan      |            findByAgeLessThan             |                       … where x.age \u003c ?1                       |\n|   LessThanEqual   |          findByAgeLessThanEqual          |                       … where x.age ⇐ ?1                       |\n|    GreaterThan    |           findByAgeGreaterThan           |                       … where x.age \u003e ?1                       |\n| GreaterThanEqual  |        findByAgeGreaterThanEqual         |                      … where x.age \u003e= ?1                       |\n|       After       |           findByStartDateAfter           |                    … where x.startDate \u003e ?1                    |\n|      Before       |          findByStartDateBefore           |                    … where x.startDate \u003c ?1                    |\n|      IsNull       |             findByAgeIsNull              |                     … where x.age is null                      |\n| IsNotNull,NotNull |           findByAge(Is)NotNull           |                     … where x.age not null                     |\n|       Like        |           findByFirstnameLike            |                  … where x.firstname like ?1                   |\n|      NotLike      |          findByFirstnameNotLike          |                … where x.firstname not like ?1                 |\n|   StartingWith    |       findByFirstnameStartingWith        | … where x.firstname like ?1 (parameter bound with appended %)  |\n|    EndingWith     |        findByFirstnameEndingWith         | … where x.firstname like ?1 (parameter bound with prepended %) |\n|    Containing     |        findByFirstnameContaining         |   … where x.firstname like ?1 (parameter bound wrapped in %)   |\n|      OrderBy      |       findByAgeOrderByLastnameDesc       |          … where x.age = ?1 order by x.lastname desc           |\n|        Not        |            findByLastnameNot             |                    … where x.lastname \u003c\u003e ?1                    |\n|        In         |       findByAgeIn(Collection ages)       |                      … where x.age in ?1                       |\n|       NotIn       |      findByAgeNotIn(Collection age)      |                    … where x.age not in ?1                     |\n|       TRUE        |            findByActiveTrue()            |                    … where x.active = true                     |\n|       FALSE       |           findByActiveFalse()            |                    … where x.active = false                    |\n|    IgnoreCase     |        findByFirstnameIgnoreCase         |             … where UPPER(x.firstame) = UPPER(?1)              |",
			"TableAligns": [
				2,
				2,
				2
			],
			"Properties": {
				"id": "20210707235333-hzldl14"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Children": [
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeStrong",
											"Children": [
												{
													"Type": "NodeStrongA6kOpenMarker",
													"Data": "**"
												},
												{
													"Type": "NodeText",
													"Data": "Keyword"
												},
												{
													"Type": "NodeStrongA6kCloseMarker",
													"Data": "**"
												}
											]
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeStrong",
											"Children": [
												{
													"Type": "NodeStrongA6kOpenMarker",
													"Data": "**"
												},
												{
													"Type": "NodeText",
													"Data": "Sample"
												},
												{
													"Type": "NodeStrongA6kCloseMarker",
													"Data": "**"
												}
											]
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeStrong",
											"Children": [
												{
													"Type": "NodeStrongA6kOpenMarker",
													"Data": "**"
												},
												{
													"Type": "NodeText",
													"Data": "JPQL"
												},
												{
													"Type": "NodeStrongA6kCloseMarker",
													"Data": "**"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "And"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "findByLastnameAndFirstname"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "… where x.lastname = ?1 and x.firstname = ?2"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Or"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "findByLastnameOrFirstname"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "… where x.lastname = ?1 or x.firstname = ?2"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Is,Equals"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "findByFirstnameIs, findByFirstnameEquals"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "… where x.firstname = ?1"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Between"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "findByStartDateBetween"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "… where x.startDate between ?1 and ?2"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "LessThan"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "findByAgeLessThan"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "… where x.age \u003c ?1"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "LessThanEqual"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "findByAgeLessThanEqual"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "… where x.age ⇐ ?1"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "GreaterThan"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "findByAgeGreaterThan"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "… where x.age \u003e ?1"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "GreaterThanEqual"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "findByAgeGreaterThanEqual"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "… where x.age \u003e= ?1"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "After"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "findByStartDateAfter"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "… where x.startDate \u003e ?1"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Before"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "findByStartDateBefore"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "… where x.startDate \u003c ?1"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "IsNull"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "findByAgeIsNull"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "… where x.age is null"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "IsNotNull,NotNull"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "findByAge(Is)NotNull"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "… where x.age not null"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Like"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "findByFirstnameLike"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "… where x.firstname like ?1"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "NotLike"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "findByFirstnameNotLike"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "… where x.firstname not like ?1"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "StartingWith"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "findByFirstnameStartingWith"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "… where x.firstname like ?1 (parameter bound with appended %)"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "EndingWith"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "findByFirstnameEndingWith"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "… where x.firstname like ?1 (parameter bound with prepended %)"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Containing"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "findByFirstnameContaining"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "… where x.firstname like ?1 (parameter bound wrapped in %)"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "OrderBy"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "findByAgeOrderByLastnameDesc"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "… where x.age = ?1 order by x.lastname desc"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Not"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "findByLastnameNot"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "… where x.lastname \u003c\u003e ?1"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "In"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "findByAgeIn(Collection ages)"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "… where x.age in ?1"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "NotIn"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "findByAgeNotIn(Collection age)"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "… where x.age not in ?1"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "TRUE"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "findByActiveTrue()"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "… where x.active = true"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "FALSE"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "findByActiveFalse()"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "… where x.active = false"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						2,
						2,
						2
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "IgnoreCase"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "findByFirstnameIgnoreCase"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "… where UPPER(x.firstame) = UPPER(?1)"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707235333-w4crzkt",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707235333-w4crzkt"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "JPQL 查询"
				}
			]
		},
		{
			"ID": "20210707235333-sy4ncxa",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707235333-sy4ncxa"
			},
			"Children": [
				{
					"ID": "20210707235333-olwxuwl",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-olwxuwl"
					},
					"Children": [
						{
							"ID": "20210707235333-rhl4vxz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-rhl4vxz"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "特有的查询：需要在"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "Dao 接口上配置方法"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-2i3plpj",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-2i3plpj"
					},
					"Children": [
						{
							"ID": "20210707235333-lj7px43",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-lj7px43"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在新添加的方法上，使用"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeCodeSpan",
											"CodeMarkerLen": 1,
											"Children": [
												{
													"Type": "NodeCodeSpanOpenMarker",
													"Data": "`"
												},
												{
													"Type": "NodeCodeSpanContent",
													"Data": "@Query"
												},
												{
													"Type": "NodeCodeSpanCloseMarker",
													"Data": "`"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "注解的形式配置 JPQL 查询语句"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707235333-20q47ki",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707235333-20q47ki"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public interface CustomerDao extends JpaRepository\u003cCustomer,Long\u003e, JpaSpecificationExecutor\u003cCustomer\u003e {\n\n    /**\n     * 根据客户名称查询客户。使用JPQL查询\n     * ?1代表参数的占位符，其中1对应方法中的参数索引\n     */\n    @Query(\"from Customer where custName = ?1\")\n    Customer findByName(String custName);\n\n    /**\n     * 根据客户名称和客户ID查询客户。使用JPQL查询\n     * ?1代表参数的占位符，其中1对应方法中的参数索引。不指定则按照方法中参数位置对应\n     */\n    @Query(\"from Customer where custName = ?1 and custId=?2\")\n    Customer findByNameAndId(String custName,Long custId);\n\n\n    /**\n     * 根据ID更新客户名称。使用JPQL\n     * ?1代表参数的占位符，其中1对应方法中的参数索引。不指定则按照方法中参数位置对应。“:参数名称“ 也可以当做占位符\n     */\n    @Query(\"update Customer set custName = ?1 where custId = ?2\")\n    @Modifying//代表是更新操作\n    void updateNameById(String custName,Long custId);\n}\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707235333-yixikff",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707235333-yixikff"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@RunWith(SpringJUnit4ClassRunner.class)\n@ContextConfiguration(locations = \"classpath:applicationContext.xml\")//locations可省略\npublic class JPQLTest {\n\n    @Autowired\n    private CustomerDao customerDao;\n\n    @Test\n    public void testFindByName() {\n        Customer customer = customerDao.findByName(\"传智播客6\");\n        System.out.println(customer);\n    }\n\n    @Test\n    public void testFindByNameAndId() {\n        Customer customer = customerDao.findByNameAndId(\"传智播客\", 5L);\n        System.out.println(customer);\n    }\n\n    /**\n     * Spring Data JPA中使用JPQL完成 更新、删除操作需要手动添加事务，但默认执行后会回滚事务，需要添加注解设置为不回滚\n     */\n    @Test\n    @Transactional\n    @Rollback(value = false)\n    public void testUpdateNameById() {\n        customerDao.updateNameById(\"传智播客最牛逼\", 5L);\n    }\n}\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707235333-vp8hq25",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707235333-vp8hq25"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "SQL 语句查询"
				}
			]
		},
		{
			"ID": "20210707235333-6hiajh2",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707235333-6hiajh2"
			},
			"Children": [
				{
					"ID": "20210707235333-ecblbwc",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-ecblbwc"
					},
					"Children": [
						{
							"ID": "20210707235333-b07u5ym",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-b07u5ym"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "特有的查询：需要在"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "Dao 接口上配置方法"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-g2sury3",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-g2sury3"
					},
					"Children": [
						{
							"ID": "20210707235333-e6xgk3u",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-e6xgk3u"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在新添加的方法上，使用"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeCodeSpan",
											"CodeMarkerLen": 1,
											"Children": [
												{
													"Type": "NodeCodeSpanOpenMarker",
													"Data": "`"
												},
												{
													"Type": "NodeCodeSpanContent",
													"Data": "@Query"
												},
												{
													"Type": "NodeCodeSpanCloseMarker",
													"Data": "`"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "注解的形式配置 SQL 查询语句"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，还需设置"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "nativeQuery"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "属性"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707235333-8k9rue6",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707235333-8k9rue6"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public interface CustomerDao extends JpaRepository\u003cCustomer,Long\u003e, JpaSpecificationExecutor\u003cCustomer\u003e {\n    /**\n     * 使用SQL查询全部客户/模糊查询\n     * nativeQuery：默认false为JPQL查询，true为SQL查询\n     */\n    //@Query(value = \"select * from cst_customer\", nativeQuery = true)\n    @Query(value = \"select * from cst_customer where cust_name like ?1\", nativeQuery = true)\n    List\u003cObject[]\u003e findBySQL(String name);\n}\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707235333-reuayga",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707235333-reuayga"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@RunWith(SpringJUnit4ClassRunner.class)\n@ContextConfiguration(locations = \"classpath:applicationContext.xml\")//locations可省略\npublic class JPQLTest {\n\n    @Autowired\n    private CustomerDao customerDao;\n    @Test\n    public void testFindBySQL() {\n        List\u003cObject[]\u003e list = customerDao.findBySQL(\"传智播客%\");\n        for (Object[] obj : list) {\n            System.out.println(Arrays.toString(obj));\n        }\n    }\n}\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707235333-cb0vfp9",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707235333-cb0vfp9"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "Specification 动态查询"
				}
			]
		},
		{
			"ID": "20210707235333-82abuw7",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20210707235333-82abuw7"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e "
				},
				{
					"ID": "20210707235333-a0le4gx",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20210707235333-a0le4gx"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "以下是继承了 JpaSpecificationExecutor 接口后获得的"
						}
					]
				}
			]
		},
		{
			"ID": "20210707235333-ofixoc9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707235333-ofixoc9"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Spring Data JPA 中可以通过"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "JpaSpecificationExecutor"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "接口查询。相比 JPQL，其优势是类型安全，更加的面向对象。"
				}
			]
		},
		{
			"ID": "20210707235333-cde4l0d",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707235333-cde4l0d"
			},
			"Children": [
				{
					"ID": "20210707235333-cenzuld",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-cenzuld"
					},
					"Children": [
						{
							"ID": "20210707235333-rblw3w7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-rblw3w7"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "T findOne(Specification\u003cT\u003e spec);"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " //查询单个对象"
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-eloxml4",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-eloxml4"
					},
					"Children": [
						{
							"ID": "20210707235333-4fn2bgd",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-4fn2bgd"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "List\u003cT\u003e findAll(Specification\u003cT\u003e spec);"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " //查询列表"
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-zokvns5",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-zokvns5"
					},
					"Children": [
						{
							"ID": "20210707235333-uofphq5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-uofphq5"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Page\u003cT\u003e findAll(Specification\u003cT\u003e spec, Pageable pageable);"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"ID": "20210707235333-lbhc694",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707235333-lbhc694"
							},
							"Children": [
								{
									"ID": "20210707235333-y4tcmiz",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707235333-y4tcmiz"
									},
									"Children": [
										{
											"ID": "20210707235333-8wbj87p",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707235333-8wbj87p"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "Pageable：分页参数"
												}
											]
										}
									]
								},
								{
									"ID": "20210707235333-ppd65l6",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707235333-ppd65l6"
									},
									"Children": [
										{
											"ID": "20210707235333-3brm5ng",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707235333-3brm5ng"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "返回值：Spring Data JPA 提供的分页 Bean"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-doo9rf6",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-doo9rf6"
					},
					"Children": [
						{
							"ID": "20210707235333-nv782a4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-nv782a4"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "List\u003cT\u003e findAll(Specification\u003cT\u003e spec, Sort sort);"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "//排序查询"
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-krli69s",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-krli69s"
					},
					"Children": [
						{
							"ID": "20210707235333-mvzzcpa",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-mvzzcpa"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "long count(Specification\u003cT\u003e spec);"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "//统计查询"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707235333-9u9fuj1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707235333-9u9fuj1"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对于"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "JpaSpecificationExecutor"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，这个接口基本是围绕着"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Specification"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "接口来定义的。我们可以简单的理解为，"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeCodeSpan",
							"CodeMarkerLen": 1,
							"Children": [
								{
									"Type": "NodeCodeSpanOpenMarker",
									"Data": "`"
								},
								{
									"Type": "NodeCodeSpanContent",
									"Data": "Specification"
								},
								{
									"Type": "NodeCodeSpanCloseMarker",
									"Data": "`"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": "构造的就是查询条件"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20210707235333-yoxwu1t",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707235333-yoxwu1t"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "/**\n  *\troot\t：Root接口，代表查询的根对象，可以通过root获取实体中的属性\n  *\tquery\t：代表一个顶层查询对象，用来自定义查询（用的少，但是很强大）\n  *\tcb\t\t：用来构建查询，此对象里有很多条件方法\n  **/\npublic Predicate toPredicate(Root\u003cT\u003e root, CriteriaQuery\u003c?\u003e query, CriteriaBuilder cb);\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707235333-pg4m7xt",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707235333-pg4m7xt"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "/**\n * 1.实现Specification接口（提供泛型：查询的对象类型）\n * 2.实现toPredicate方法（构造查询条件）\n * 3.需要借助方法参数中的两个参数（\n * root：获取需要查询的对象属性（不是数据库中字段名！！）\n * CriteriaBuilder：构造查询条件的，内部封装了很多的查询条件（模糊匹配，精准匹配）\n **/\n@RunWith(SpringJUnit4ClassRunner.class)\n@ContextConfiguration(\"classpath:applicationContext.xml\")\npublic class SpecTest {\n\n    @Autowired\n    private CustomerDao customerDao;\n\n    /**\n     * 单条件查询，根据客户名称查询单个客户对象（equal）\n     */\n    @Test\n    public void testFindOne1() {\n        Specification\u003cCustomer\u003e specification = new Specification\u003cCustomer\u003e() {\n            public Predicate toPredicate(Root\u003cCustomer\u003e root, CriteriaQuery\u003c?\u003e criteriaQuery, CriteriaBuilder criteriaBuilder) {\n                //1.获取比较的属性\n                Path\u003cObject\u003e custName = root.get(\"custName\");\n                //2.构造查询条件\n                //第1个参数为比较的属性（Path对象）；第2个参数为要比较的值\n                return criteriaBuilder.equal(custName, \"博学谷\");\n            }\n        };\n        Customer customer = customerDao.findOne(specification);\n        System.out.println(customer);\n    }\n\n    /**\n     * 多条件查询，根据客户名和客户所属行业查询单个客户（equal，and）\n     */\n    @Test\n    public void testFindOne2() {\n\n        Specification\u003cCustomer\u003e specification = (root, criteriaQuery, criteriaBuilder) -\u003e {\n            Path\u003cObject\u003e custName = root.get(\"custName\");\n            Path\u003cObject\u003e custIndustry = root.get(\"custIndustry\");\n\n            Predicate predicate1 = criteriaBuilder.equal(custName, \"传智播客\");\n            Predicate predicate2 = criteriaBuilder.equal(custIndustry, \"IT\");\n            //组合谓词\n            return criteriaBuilder.and(predicate1, predicate2);//还有or等等方法来组合\n        };\n        Customer customer = customerDao.findOne(specification);\n        System.out.println(customer);\n    }\n\n    /**\n     * 普通查询；排序查询；分页查询，根据客户名模糊匹配查询客户列表（like）；\n     * equal ：直接的到path对象（属性），然后进行比较即可\n     * gt，lt,ge,le,like : 得到Path对象，根据Path指定比较的参数类型，再去进行比较\n     */\n    @Test\n    public void testFindAll1() {\n        Specification\u003cCustomer\u003e specification = ((root, criteriaQuery, criteriaBuilder) -\u003e {\n            Path\u003cObject\u003e custName = root.get(\"custName\");\n            return criteriaBuilder.like(custName.as(String.class), \"%传智%\");//或在获取Path时直接封装为String类型\n        });\n        //普通查询\n        List\u003cCustomer\u003e customerList1 = customerDao.findAll(specification);\n\n        //排序查询\n        //第一个参数：排序的顺序（倒序，正序）；第二个参数：排序的属性名称（不是字段名！）\n        Sort sort = new Sort(Sort.Direction.DESC, \"custId\");\n        List\u003cCustomer\u003e customerList2 = customerDao.findAll(specification, sort);\n\n        //分页查询\n        Pageable pageable = PageRequest.of(0,2);//页码（从0开始），每页显示条数\n        Page\u003cCustomer\u003e customerPage = customerDao.findAll(specification, pageable);\n        System.out.println(\"总记录数:\" + customerPage.getTotalElements());\n        System.out.println(\"总页数:\" + customerPage.getTotalPages());\n        System.out.println(\"分页查询的数据:\" + customerPage.getContent());\n    }\n\n\n    /**\n\t * Specification的多表查询\n\t */\n    @Test\n    public void testFind() {\n        Specification\u003cLinkMan\u003e specification = (root, criteriaQuery, criteriaBuilder) -\u003e  {\n                //Join代表链接查询，通过root对象获取\n                //创建的过程中，第一个参数为关联对象的属性名称，第二个参数为连接查询的方式（inner，left，right）\n                //JoinType.LEFT : 左外连接,JoinType.INNER：内连接,JoinType.RIGHT：右外连接\n                Join\u003cLinkMan, Customer\u003e join = root.join(\"customer\",JoinType.INNER);\n                return criteriaBuilder.like(join.get(\"custName\").as(String.class),\"传智播客1\");\n            }\n        };\n        List\u003cLinkMan\u003e list = linkManDao.findAll(specification);\n        for (LinkMan linkMan : list) {\n            System.out.println(linkMan);\n        }\n    }\n}\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707235333-t0ijtjt",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20210707235333-t0ijtjt"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e "
				},
				{
					"ID": "20210707235333-w3ry627",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20210707235333-w3ry627"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "方法对应关系"
						}
					]
				},
				{
					"ID": "20210707235333-rv07sks",
					"Type": "NodeTable",
					"Data": "| 方法名称                    | Sql 对应关系         |\n| --------------------------- | -------------------- |\n| equle                       | filed = value        |\n| gt（greaterThan ）          | filed \u003e value        |\n| lt（lessThan ）             | filed \u003c value        |\n| ge（greaterThanOrEqualTo ） | filed \u003e= value       |\n| le（ lessThanOrEqualTo）    | filed \u003c= value       |\n| notEqule                    | filed != value       |\n| like                        | filed like value     |\n| notLike                     | filed not like value |",
					"TableAligns": [
						0,
						0
					],
					"Properties": {
						"id": "20210707235333-rv07sks"
					},
					"Children": [
						{
							"Type": "NodeTableHead",
							"Children": [
								{
									"Type": "NodeTableRow",
									"Children": [
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeText",
													"Data": "方法名称"
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeText",
													"Data": "Sql 对应关系"
												}
											]
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableRow",
							"TableAligns": [
								0,
								0
							],
							"Children": [
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "equle"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "filed = value"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableRow",
							"TableAligns": [
								0,
								0
							],
							"Children": [
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "gt（greaterThan ）"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "filed \u003e value"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableRow",
							"TableAligns": [
								0,
								0
							],
							"Children": [
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "lt（lessThan ）"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "filed \u003c value"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableRow",
							"TableAligns": [
								0,
								0
							],
							"Children": [
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "ge（greaterThanOrEqualTo ）"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "filed \u003e= value"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableRow",
							"TableAligns": [
								0,
								0
							],
							"Children": [
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "le（ lessThanOrEqualTo）"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "filed \u003c= value"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableRow",
							"TableAligns": [
								0,
								0
							],
							"Children": [
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "notEqule"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "filed != value"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableRow",
							"TableAligns": [
								0,
								0
							],
							"Children": [
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "like"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "filed like value"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableRow",
							"TableAligns": [
								0,
								0
							],
							"Children": [
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "notLike"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "filed not like value"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707235333-kgvo9jx",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707235333-kgvo9jx"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "多表操作"
				}
			]
		},
		{
			"ID": "20210707235333-3d5l1ul",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707235333-3d5l1ul"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在实际开发中，我们数据库的表难免会有相互的关联关系，在操作表的时候就有可能会涉及到多张表的操作。而在这种实现了 ORM 思想的框架中（如 JPA），可以让我们通过操作实体类就实现对数据库表的操作。所以今天我们的学习重点是：掌握配置实体之间的关联关系。"
				}
			]
		},
		{
			"ID": "20210707235333-fk2ippb",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707235333-fk2ippb"
			},
			"Children": [
				{
					"ID": "20210707235333-dteh76t",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-dteh76t"
					},
					"Children": [
						{
							"ID": "20210707235333-67234g6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-67234g6"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "第一步：首先确定两张表之间的关系。（如果关系确定错了，后面做的所有操作就都不可能正确。）"
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-v6olpre",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-v6olpre"
					},
					"Children": [
						{
							"ID": "20210707235333-uukaoak",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-uukaoak"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "第二步：在数据库中实现两张表的关系"
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-gt2jb6m",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-gt2jb6m"
					},
					"Children": [
						{
							"ID": "20210707235333-vv7jnr5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-vv7jnr5"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "第三步：在实体类中描述出两个实体的关系"
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-snj3mhh",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-snj3mhh"
					},
					"Children": [
						{
							"ID": "20210707235333-e7gj3o3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-e7gj3o3"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "第四步：配置出实体类和数据库表的关系映射（重点）"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707235333-sdfkqrz",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707235333-sdfkqrz"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "一对多"
				}
			]
		},
		{
			"ID": "20210707235333-pi76ruo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707235333-pi76ruo"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "案例：客户和联系人的案例（一对多关系，一个客户可以具有多个联系人，一个联系人从属于一家公司）"
				}
			]
		},
		{
			"ID": "20210707235333-ai3pyi5",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707235333-ai3pyi5"
			},
			"Children": [
				{
					"ID": "20210707235333-osk4d94",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-osk4d94"
					},
					"Children": [
						{
							"ID": "20210707235333-eq2widg",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-eq2widg"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "客户：一家公司"
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-dtfoqks",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-dtfoqks"
					},
					"Children": [
						{
							"ID": "20210707235333-mthy5e8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-mthy5e8"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "联系人：这家公司的员工"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707235333-h2m48on",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707235333-h2m48on"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "分析步骤："
				}
			]
		},
		{
			"ID": "20210707235333-l6z8576",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 3,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20210707235333-l6z8576"
			},
			"Children": [
				{
					"ID": "20210707235333-tfk7dew",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20210707235333-tfk7dew"
					},
					"Children": [
						{
							"ID": "20210707235333-h4ficl8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-h4ficl8"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "明确表关系：一对多关系"
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-2sgycyq",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20210707235333-2sgycyq"
					},
					"Children": [
						{
							"ID": "20210707235333-42b36xp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-42b36xp"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "确定表关系（外键）"
								}
							]
						},
						{
							"ID": "20210707235333-7epqavl",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707235333-7epqavl"
							},
							"Children": [
								{
									"ID": "20210707235333-u5y8kvh",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707235333-u5y8kvh"
									},
									"Children": [
										{
											"ID": "20210707235333-s0x2x67",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707235333-s0x2x67"
											},
											"Children": [
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "主表"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "：客户表"
												}
											]
										}
									]
								},
								{
									"ID": "20210707235333-3pa64hb",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707235333-3pa64hb"
									},
									"Children": [
										{
											"ID": "20210707235333-2gvzpc4",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707235333-2gvzpc4"
											},
											"Children": [
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "从表"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "：联系人表，在从表添加"
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "外键"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-e5p4xs1",
					"Type": "NodeListItem",
					"Data": "3",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 3,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "Mw==",
						"Num": 3
					},
					"Properties": {
						"id": "20210707235333-e5p4xs1"
					},
					"Children": [
						{
							"ID": "20210707235333-1810m12",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-1810m12"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "编写实体类，再实体类中描述表关系（"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "包含关系"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "）"
								}
							]
						},
						{
							"ID": "20210707235333-ewf4enn",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707235333-ewf4enn"
							},
							"Children": [
								{
									"ID": "20210707235333-f5r2eyd",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707235333-f5r2eyd"
									},
									"Children": [
										{
											"ID": "20210707235333-9xj2565",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707235333-9xj2565"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "客户：再客户的实体类中包含一个联系人的集合"
												}
											]
										}
									]
								},
								{
									"ID": "20210707235333-o4erzlm",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707235333-o4erzlm"
									},
									"Children": [
										{
											"ID": "20210707235333-mc5nvls",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707235333-mc5nvls"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "联系人：在联系人的实体类中包含一个客户的对象"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-c2dp5te",
					"Type": "NodeListItem",
					"Data": "4",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 4,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "NA==",
						"Num": 4
					},
					"Properties": {
						"id": "20210707235333-c2dp5te"
					},
					"Children": [
						{
							"ID": "20210707235333-vsv5b9d",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-vsv5b9d"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "配置映射关系"
								}
							]
						},
						{
							"ID": "20210707235333-qpce5x5",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707235333-qpce5x5"
							},
							"Children": [
								{
									"ID": "20210707235333-f7p64qv",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707235333-f7p64qv"
									},
									"Children": [
										{
											"ID": "20210707235333-sdxxdsh",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707235333-sdxxdsh"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "使用 "
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "JPA 注解配置一对多映射关系"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707235333-bq4uuf8",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707235333-bq4uuf8"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@Entity\n@Table(name = \"cst_customer\")\npublic class Customer {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    @Column(name = \"cust_id\")\n    private Long custId; //客户的主键\n\n\n    @OneToMany(mappedBy = \"customer\")//主表放弃维护外键\n    private Set\u003cLinkMan\u003e linkMans = new HashSet\u003c\u003e();\n\n    @Column(name = \"cust_name\")\n    private String custName;//客户名称\n\n    ...\n}\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707235333-xyyjr73",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707235333-xyyjr73"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@Entity\n@Table(name = \"cst_linkman\")\npublic class LinkMan implements Serializable {\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    @Column(name = \"lkm_id\")\n    private Long lkmId;\n\n    @ManyToOne\n    @JoinColumn(name = \"lkm_cust_id\",referencedColumnName = \"cust_id\")\n    private Customer customer;\n\n    @Column(name = \"lkm_name\")\n    private String lkmName;\n    ...\n}\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707235333-qr70jb3",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20210707235333-qr70jb3"
			}
		},
		{
			"ID": "20210707235333-ly2x7mq",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707235333-ly2x7mq"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@RunWith(SpringJUnit4ClassRunner.class)\n@ContextConfiguration(\"classpath:applicationContext.xml\")\npublic class One2ManyTest {\n\n    @Autowired\n    private CustomerDao customerDao;\n\n    @Autowired\n    private LinkManDao linkManDao;\n\n    @Test\n    @Transactional//开启事务\n    @Rollback(false)//不回滚\n    public void testSave() {\n        Customer customer = new Customer();\n        customer.setCustName(\"腾讯\");\n        LinkMan linkMan = new LinkMan();\n        linkMan.setLkmName(\"小马\");\n\n        customer.getLinkMans().add(linkMan);\n        linkMan.setCustomer(customer);\n\n        customerDao.save(customer);\n        linkManDao.save(linkMan);\n    }\n\n    @Test\n    @Transactional\n    @Rollback(false)//设置为不回滚\n    public void testDelete() {\n        customerDao.delete(3L);\n    }\n}\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707235333-awx9ptj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707235333-awx9ptj"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "删除操作的说明如下"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20210707235333-xsregcm",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707235333-xsregcm"
			},
			"Children": [
				{
					"ID": "20210707235333-bd0srb7",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-bd0srb7"
					},
					"Children": [
						{
							"ID": "20210707235333-dw8k661",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-dw8k661"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "删除从表数据：可以随时任意删除"
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-iyaffkl",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-iyaffkl"
					},
					"Children": [
						{
							"ID": "20210707235333-1s9xhnd",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-1s9xhnd"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "删除主表数据："
								}
							]
						},
						{
							"ID": "20210707235333-mw0igeo",
							"Type": "NodeList",
							"ListData": {
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707235333-mw0igeo"
							},
							"Children": [
								{
									"ID": "20210707235333-vxgt0ms",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707235333-vxgt0ms"
									},
									"Children": [
										{
											"ID": "20210707235333-i0rtmw4",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707235333-i0rtmw4"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "没有从表数据引用：随便删"
												}
											]
										}
									]
								},
								{
									"ID": "20210707235333-45ertsy",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707235333-45ertsy"
									},
									"Children": [
										{
											"ID": "20210707235333-difg3ia",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707235333-difg3ia"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "有从表数据："
												}
											]
										},
										{
											"ID": "20210707235333-11oe862",
											"Type": "NodeList",
											"ListData": {
												"Tight": true,
												"BulletChar": 45,
												"Padding": 2,
												"Marker": "LQ==",
												"Num": -1
											},
											"Properties": {
												"id": "20210707235333-11oe862"
											},
											"Children": [
												{
													"ID": "20210707235333-42ns20t",
													"Type": "NodeListItem",
													"Data": "-",
													"ListData": {
														"Tight": true,
														"BulletChar": 45,
														"Padding": 2,
														"Marker": "LQ==",
														"Num": -1
													},
													"Properties": {
														"id": "20210707235333-42ns20t"
													},
													"Children": [
														{
															"ID": "20210707235333-leyhy52",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20210707235333-leyhy52"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "在默认情况下，它会把外键字段置为 null，然后删除主表数据。如果在数据库的表结构上，外键字段有非空约束，默认情况就会报错了"
																}
															]
														}
													]
												},
												{
													"ID": "20210707235333-cdp2y04",
													"Type": "NodeListItem",
													"Data": "-",
													"ListData": {
														"Tight": true,
														"BulletChar": 45,
														"Padding": 2,
														"Marker": "LQ==",
														"Num": -1
													},
													"Properties": {
														"id": "20210707235333-cdp2y04"
													},
													"Children": [
														{
															"ID": "20210707235333-v6z6gqk",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20210707235333-v6z6gqk"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "如果配置了放弃维护关联关系的权利，则不能删除（与外键字段是否允许为 null，没有关系）因为在删除时，它根本不会去更新从表的外键字段了"
																}
															]
														}
													]
												},
												{
													"ID": "20210707235333-pgkrsvx",
													"Type": "NodeListItem",
													"Data": "-",
													"ListData": {
														"Tight": true,
														"BulletChar": 45,
														"Padding": 2,
														"Marker": "LQ==",
														"Num": -1
													},
													"Properties": {
														"id": "20210707235333-pgkrsvx"
													},
													"Children": [
														{
															"ID": "20210707235333-bdmy009",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20210707235333-bdmy009"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "如果还想删除，使用级联删除引用（在实际开发中，级联删除请慎用！(在一对多的情况下)）"
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707235333-hga6gc8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707235333-hga6gc8"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "级联"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "：操作一个对象的同时操作他的关联对象"
				}
			]
		},
		{
			"ID": "20210707235333-19l6ryi",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707235333-19l6ryi"
			},
			"Children": [
				{
					"ID": "20210707235333-bpd8s6m",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-bpd8s6m"
					},
					"Children": [
						{
							"ID": "20210707235333-750zbjh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-750zbjh"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "级联操作： 1.需要"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "区分操作主体"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 2.需要在操作主体的实体类上（主表或维护表），添加级联属性"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "cascade"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "（需要添加到多表映射关系的注解上）"
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-b44zgsj",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-b44zgsj"
					},
					"Children": [
						{
							"ID": "20210707235333-34lxs5q",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-34lxs5q"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "级联添加，案例：当我保存一个客户的同时保存联系人（在代码中只需保存客户！）"
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-0xvxwht",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-0xvxwht"
					},
					"Children": [
						{
							"ID": "20210707235333-fudnrb1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-fudnrb1"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "级联删除，案例：当我删除一个客户的同时删除此客户的所有联系人，有中间表会先删除中间表（在代码中只需删除客户！）"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707235333-qw40957",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707235333-qw40957"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "多对多"
				}
			]
		},
		{
			"ID": "20210707235333-m69cpoc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707235333-m69cpoc"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "案例：用户和角色（多对多关系）"
				}
			]
		},
		{
			"ID": "20210707235333-06yn7dh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707235333-06yn7dh"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "分析步骤："
				}
			]
		},
		{
			"ID": "20210707235333-ttvxivs",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 3,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20210707235333-ttvxivs"
			},
			"Children": [
				{
					"ID": "20210707235333-a6y0l5j",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20210707235333-a6y0l5j"
					},
					"Children": [
						{
							"ID": "20210707235333-ohhf0m3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-ohhf0m3"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "明确表关系：多对多关系"
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-oo86jos",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20210707235333-oo86jos"
					},
					"Children": [
						{
							"ID": "20210707235333-b1ing0s",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-b1ing0s"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "确定表关系（中间表）"
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-1x84ruc",
					"Type": "NodeListItem",
					"Data": "3",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 3,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "Mw==",
						"Num": 3
					},
					"Properties": {
						"id": "20210707235333-1x84ruc"
					},
					"Children": [
						{
							"ID": "20210707235333-pr6y3pc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-pr6y3pc"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "编写实体类，再实体类中描述表关系（"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "包含关系"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "）"
								}
							]
						},
						{
							"ID": "20210707235333-22c1iam",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707235333-22c1iam"
							},
							"Children": [
								{
									"ID": "20210707235333-dzf32a8",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707235333-dzf32a8"
									},
									"Children": [
										{
											"ID": "20210707235333-1jf6g4u",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707235333-1jf6g4u"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "用户：包含角色的集合"
												}
											]
										}
									]
								},
								{
									"ID": "20210707235333-lidt5ln",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707235333-lidt5ln"
									},
									"Children": [
										{
											"ID": "20210707235333-zyghlhg",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707235333-zyghlhg"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "角色：包含用户的集合"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-j5xnk8u",
					"Type": "NodeListItem",
					"Data": "4",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 4,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "NA==",
						"Num": 4
					},
					"Properties": {
						"id": "20210707235333-j5xnk8u"
					},
					"Children": [
						{
							"ID": "20210707235333-ahnsh5w",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-ahnsh5w"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "配置映射关系"
								}
							]
						},
						{
							"ID": "20210707235333-cuxnquc",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707235333-cuxnquc"
							},
							"Children": [
								{
									"ID": "20210707235333-79ykejp",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707235333-79ykejp"
									},
									"Children": [
										{
											"ID": "20210707235333-tin3rcc",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707235333-tin3rcc"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "使用 "
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "JPA 注解配置多对多映射关系"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707235333-rsiz8we",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707235333-rsiz8we"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@Entity\n@Table//不配置name则为类目首字母小写\npublic class User {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    @Column//不配置字段名则为属性名\n    private Long userId;\n\n    @ManyToMany\n    //维护中间表\n    @JoinTable(\n        name = \"sys_user_role\",\n        //当前对象在中间表中的外键\n        joinColumns = {@JoinColumn(name = \"sys_user_id\",referencedColumnName = \"userId\")},\n        //对方对象在中间表中的外键\n        inverseJoinColumns = {@JoinColumn(name = \"sys_role_id\",referencedColumnName = \"roleId\")}\n    )\n    private Set\u003cRole\u003e roles = new HashSet\u003c\u003e();\n    ...\n}\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707235333-psgstbu",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707235333-psgstbu"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@Entity\n@Table\npublic class Role {\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    @Column\n    private Long roleId;\n\n    @ManyToMany(mappedBy = \"roles\")//被维护表放弃维护中间表！\n    private Set\u003cUser\u003e users = new HashSet\u003c\u003e();\n    ...\n}\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707235333-a0vs178",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707235333-a0vs178"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其他删除/级联等同一对多，删除时会先删除中间表数据"
				}
			]
		},
		{
			"ID": "20210707235333-ufsxnm0",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707235333-ufsxnm0"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "对象导航查询"
				}
			]
		},
		{
			"ID": "20210707235333-f6l2eec",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707235333-f6l2eec"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对象图导航检索方式是根据已经加载的对象，导航到他的关联对象。它利用类与类之间的关系来检索对象。例如：我们通过 ID 查询方式查出一个客户，可以调用 Customer 类中的 getLinkMans()方法来获取该客户的所有联系人。对象导航查询的使用要求是：两个对象之间必须存在关联关系。"
				}
			]
		},
		{
			"ID": "20210707235333-6x9lqdu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707235333-6x9lqdu"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对象导航查询"
				}
			]
		},
		{
			"ID": "20210707235333-exv4uuz",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707235333-exv4uuz"
			},
			"Children": [
				{
					"ID": "20210707235333-ofm7ygu",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-ofm7ygu"
					},
					"Children": [
						{
							"ID": "20210707235333-xfznn58",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-xfznn58"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "从一方查询多方：默认延迟加载"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707235333-ztu588i",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707235333-ztu588i"
					},
					"Children": [
						{
							"ID": "20210707235333-brb6zuk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707235333-brb6zuk"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "从多方查询一方：默认立即加载"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707235333-bk8dmlz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707235333-bk8dmlz"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可以修改配置将其改为立即加载（不推荐！），"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "fetch 配置在多表关系中主体（或一方或多方）的注解上"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，查看 3.3"
				}
			]
		},
		{
			"ID": "20210707235333-beyb2u9",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707235333-beyb2u9"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "Specification 动态查询"
				}
			]
		},
		{
			"ID": "20210707235333-pd213qr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707235333-pd213qr"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如基本 CRUD 和复杂查询章节"
				}
			]
		}
	]
}