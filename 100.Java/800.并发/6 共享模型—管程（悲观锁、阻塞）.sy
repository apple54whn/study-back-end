{
	"ID": "20210707224540-5zmw0wh",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20210707224540-5zmw0wh",
		"type": "doc"
	},
	"Children": [
		{
			"ID": "20210707224540-0y5tru5",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20210707224540-0y5tru5"
			}
		},
		{
			"ID": "20210707224540-37hsbaz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-37hsbaz"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "title: 共享模型—管程（悲观锁，阻塞）"
				},
				{
					"Type": "NodeSoftBreak",
					"Data": "\n"
				},
				{
					"Type": "NodeText",
					"Data": "date: 2021-02-16 15:51:34"
				},
				{
					"Type": "NodeSoftBreak",
					"Data": "\n"
				},
				{
					"Type": "NodeText",
					"Data": "permalink: /pages/72c98e/"
				},
				{
					"Type": "NodeSoftBreak",
					"Data": "\n"
				},
				{
					"Type": "NodeText",
					"Data": "categories:"
				}
			]
		},
		{
			"ID": "20210707224540-cb381vj",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"MarkerOffset": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-cb381vj"
			},
			"Children": [
				{
					"ID": "20210707224540-av79hez",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"MarkerOffset": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-av79hez"
					},
					"Children": [
						{
							"ID": "20210707224540-0z1w987",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-0z1w987"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "CoreJava"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-po31nbn",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"MarkerOffset": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-po31nbn"
					},
					"Children": [
						{
							"ID": "20210707224540-ubs2ds5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-ubs2ds5"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "高级"
								},
								{
									"Type": "NodeSoftBreak",
									"Data": "\n"
								},
								{
									"Type": "NodeText",
									"Data": "tags:"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-87ru0ag",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"MarkerOffset": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-87ru0ag"
					}
				}
			]
		},
		{
			"ID": "20210707224540-ns2u307",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20210707224540-ns2u307"
			}
		},
		{
			"ID": "20210707224540-44dlcsu",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20210707224540-44dlcsu"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "# "
				},
				{
					"Type": "NodeText",
					"Data": "多线程—共享模型—管程（悲观锁，阻塞）"
				}
			]
		},
		{
			"ID": "20210707224540-vs2sgba",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707224540-vs2sgba"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "共享带来的线程安全问题"
				}
			]
		},
		{
			"ID": "20210707224540-zwfck7i",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-zwfck7i"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在 Java 中的体现"
				}
			]
		},
		{
			"ID": "20210707224540-on4riu5",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-on4riu5"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "卖票问题"
				}
			]
		},
		{
			"ID": "20210707224540-qi3s77d",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-qi3s77d"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@Slf4j(topic = \"TestSafe\")\npublic class TestSafe {\n    public static void main(String[] args) throws InterruptedException {\n\n        Runnable task = new Ticket();\n\n        Thread t1 = new Thread(task, \"窗口1\");\n        Thread t2 = new Thread(task, \"窗口2\");\n        Thread t3 = new Thread(task, \"窗口3\");\n        Thread t4 = new Thread(task, \"窗口4\");\n\n        t1.start();\n        t2.start();\n        t3.start();\n        t4.start();\n    }\n}\n\n@Slf4j(topic = \"Ticket\")\nclass Ticket implements Runnable {\n    private static int count = 1_000;// 线程竞争不明显可以增大票数\n\n    @Override\n    public void run() {\n        while (true) {\n            if (count \u003c= 0) {\n                log.debug(\"{}说: 票已经卖完了\", Thread.currentThread().getName());\n                break;\n            }\n            try {\n                // 进入time waiting，提高线程切换概率，错票几率\n                TimeUnit.MILLISECONDS.sleep(10);\n                log.debug(\"{}卖了第{}张票\", Thread.currentThread().getName(), count--);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-j1aqyr3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-j1aqyr3"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "问题："
				}
			]
		},
		{
			"ID": "20210707224540-2rjx0q0",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-2rjx0q0"
			},
			"Children": [
				{
					"ID": "20210707224540-5j0lzyz",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-5j0lzyz"
					},
					"Children": [
						{
							"ID": "20210707224540-xrk8vvo",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-xrk8vvo"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "相同的票出现多次：CPU 的一次操作必须是原子性的（但是输出语句不是原子的）"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-pcdpgri",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-pcdpgri"
					},
					"Children": [
						{
							"ID": "20210707224540-5ruvhuo",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-5ruvhuo"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "出现负数的票：随机性和延迟导致"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-qkanooe",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-qkanooe"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "自增自减问题"
				}
			]
		},
		{
			"ID": "20210707224540-p3481tu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-p3481tu"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "两个线程对初始值为 0 的"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "静态变量（局部变量就不一样了）"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "一个做自增，一个做自减，各做 5000 次，结果是 0 吗？"
				}
			]
		},
		{
			"ID": "20210707224540-megqz5e",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-megqz5e"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@Slf4j(topic = \"TestCount\")\npublic class TestCount {\n\n    static int counter = 0;\n\n    public static void main(String[] args) throws InterruptedException {\n        test1();\n    }\n\n    public static void test1() throws InterruptedException {\n        Thread t1 = new Thread(() -\u003e {\n            for (int i = 0; i \u003c 5_000; i++) {\n                counter++;\n            }\n        }, \"t1\");\n        Thread t2 = new Thread(() -\u003e {\n            for (int i = 0; i \u003c 5_000; i++) {\n                counter--;\n            }\n        }, \"t2\");\n        t1.start();\n        t2.start();\n        t1.join();\n        t2.join();\n        log.debug(\"{}\", counter);\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-34stz66",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-34stz66"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "问题分析"
				}
			]
		},
		{
			"ID": "20210707224540-5r7m228",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-5r7m228"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "以上的结果可能是正数、负数、零。为什么呢？因为 Java 中对"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "静态变量（局部变量就不一样了）"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的自增，自减并不是原子操作，要彻底理解，必须从字节码来进行分析。例如对于 i++ 而言（i 为静态变量），实际会产生如下的 JVM 字节码指令："
				}
			]
		},
		{
			"ID": "20210707224540-3d3xbsf",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-3d3xbsf"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "getstatic i // 获取静态变量i的值\niconst_1 // 准备常量1\niadd // 自增\nputstatic i // 将修改后的值存入静态变量i\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-4nrggs7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-4nrggs7"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "而对应 i-- 也是类似："
				}
			]
		},
		{
			"ID": "20210707224540-kttltqq",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-kttltqq"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "getstatic i // 获取静态变量i的值\niconst_1 // 准备常量1\nisub // 自减\nputstatic i // 将修改后的值存入静态变量i\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-9zex0mg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-9zex0mg"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "而 Java 的内存模型如下，完成静态变量的自增，自减需要"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "在主存和工作内存中进行数据交换"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "："
				}
			]
		},
		{
			"ID": "20210707224540-e4zhgzf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-e4zhgzf"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Children": [
						{
							"Type": "NodeBang",
							"Data": "!"
						},
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "image-20210216174313171"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "../assets/image-20210216174313171.png"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-zgc5ofz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-zgc5ofz"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果是单线程以上 8 行代码是顺序执行（不会交错）没有问题："
				}
			]
		},
		{
			"ID": "20210707224540-53fgvsd",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "bWVybWFpZA==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-53fgvsd"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "bWVybWFpZA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "sequenceDiagram\nparticipant t1 as 线程1\nparticipant i as static i\ni -\u003e\u003e t1 : getstatic i 读取 0\nt1 -\u003e\u003e t1 : iconst_1 准备常数 1\nt1 -\u003e\u003e t1 : iadd 加法，线程内 i = 1\nt1 -\u003e\u003e i : putstatic i 写入 1\n\ni -\u003e\u003e t1 : getstatic i 读取 0\nt1 -\u003e\u003e t1 : iconst_1 准备常数 1\nt1 -\u003e\u003e t1 : isub 减去，线程内 i = -1\nt1 -\u003e\u003e i : putstatic i 写入 1\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-roncsy5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-roncsy5"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "但多线程下这 8 行代码可能"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "交错运行"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-rgcwcqg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-rgcwcqg"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "会出现负数的情况："
				}
			]
		},
		{
			"ID": "20210707224540-5rdc99s",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "bWVybWFpZA==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-5rdc99s"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "bWVybWFpZA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "sequenceDiagram\nparticipant t1 as 线程1\nparticipant t2 as 线程2\nparticipant i as static i\n\ti -\u003e\u003e t1 : getstatic i 读取 0\n\tt2 -\u003e\u003e t2 : iconst_1 准备常数 1\n\tt2 -\u003e\u003e t2 : isub 减去，线程内 i = -1\n\tt2 --\u003e\u003e t1 : 上下文切换\n\n\ti -\u003e\u003e t1 : getstatic i 读取 0\n\tt1 -\u003e\u003e t1 : iconst_1 准备常数 1\n\tt1 -\u003e\u003e t1 : iadd 加法，线程内 i = 1\n\tt1 -\u003e\u003e i : putstatic i 写入 1\n\n\tt1 --\u003e\u003e t2 : 上下文切换\n\tt2 -\u003e\u003e i : putstatic i 写入 -1\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-so24qve",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-so24qve"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "出现正数的情况："
				}
			]
		},
		{
			"ID": "20210707224540-b53qtxk",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "bWVybWFpZA==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-b53qtxk"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "bWVybWFpZA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "sequenceDiagram\nparticipant t1 as 线程1\nparticipant t2 as 线程2\nparticipant i as static i\n\ti -\u003e\u003e t1 : getstatic i 读取 0\n\tt1 -\u003e\u003e t1 : iconst_1 准备常数 1\n\tt1 -\u003e\u003e t1 : iadd 加法，线程内 i = 1\n\tt1 --\u003e\u003e t2 : 上下文切换\n\n\ti -\u003e\u003e t2 : getstatic i 读取 0\n\tt2 -\u003e\u003e t2 : iconst_1 准备常数 1\n\tt2 -\u003e\u003e t2 : isub 减法，线程内 i = -1\n\tt2 -\u003e\u003e i : putstatic i 写入 -1\n\n\tt2 --\u003e\u003e t1 : 上下文切换\n\tt1 -\u003e\u003e i : putstatic i 写入 1\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-f81xetu",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-f81xetu"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "线程安全问题总结 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-y3jelyk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-y3jelyk"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "分时系统，线程切换时，对临界区数据读写的非原子性，以及缓存导致最终可能发生"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "线程安全问题"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。出现该问题的原因："
				}
			]
		},
		{
			"ID": "20210707224540-zd2ax9d",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-zd2ax9d"
			},
			"Children": [
				{
					"ID": "20210707224540-xa8lsz2",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-xa8lsz2"
					},
					"Children": [
						{
							"ID": "20210707224540-u5li1ec",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-u5li1ec"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "多个线程在操作共享资源"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-takd38e",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-takd38e"
					},
					"Children": [
						{
							"ID": "20210707224540-h95mwa6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-h95mwa6"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "操作共享资源的代码有多条（可能是非原子操作）"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						},
						{
							"ID": "20210707224540-l1ycvk5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-l1ycvk5"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "即当一个线程在执行操作共享资源的多条代码（可能是非原子操作）过程中，其他线程参与了运算，就会导致"
								}
							]
						},
						{
							"ID": "20210707224540-9ecv4h7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-9ecv4h7"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "OS 的分时操作，线程切换，缓存"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-0gg1ftz",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-0gg1ftz"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "临界区 Critical Section"
				}
			]
		},
		{
			"ID": "20210707224540-af0g3y5",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-af0g3y5"
			},
			"Children": [
				{
					"ID": "20210707224540-re3lvxh",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-re3lvxh"
					},
					"Children": [
						{
							"ID": "20210707224540-qkeiv1v",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-qkeiv1v"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "一个程序运行多个线程本身是没有问题的"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-xb26287",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-xb26287"
					},
					"Children": [
						{
							"ID": "20210707224540-w9bcp29",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-w9bcp29"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "问题出在多个线程访问"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "共享资源"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						},
						{
							"ID": "20210707224540-wehpus5",
							"Type": "NodeList",
							"ListData": {
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707224540-wehpus5"
							},
							"Children": [
								{
									"ID": "20210707224540-kr71tfm",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707224540-kr71tfm"
									},
									"Children": [
										{
											"ID": "20210707224540-frtsugo",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-frtsugo"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "多个线程读"
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "共享资源"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "其实也没有问题"
												}
											]
										}
									]
								},
								{
									"ID": "20210707224540-c4n2q9r",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707224540-c4n2q9r"
									},
									"Children": [
										{
											"ID": "20210707224540-2qw2wum",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-2qw2wum"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "在多个线程对"
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "共享资源"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "读写操作时发生指令交错，就会出现问题"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-klzjwme",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-klzjwme"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "临界区(critical section)是指访问某一共享资源的"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "代码片段"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，并且这段代码的执行"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "应为原子(atomic) 操作"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "即临界区内的代码必须对外是不可分割的，不会被线程切换所打断"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-1a4bxtu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-1a4bxtu"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "例如，下面代码中的临界区（必须有 synchronized，否则无法保证临界区代码的原子操作）"
				}
			]
		},
		{
			"ID": "20210707224540-8l5ahs2",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-8l5ahs2"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "static int counter = 0;\nsynchronized static void increment() {\n    // 临界区\n    counter++;\n}\nsynchronized static void decrement() {\n    // 临界区\n    counter--;\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-tjyljxm",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-tjyljxm"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "竞态条件 Race Condition"
				}
			]
		},
		{
			"ID": "20210707224540-bffnkml",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-bffnkml"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "竞争条件是指多个任务以"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "非互斥"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的方式同时进入临界区，大家对公共资源的访问是以竞争的方式并行进行的，因此公共资源的最终状态依赖于这些任务的临界区中的微操作"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "执行次序"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20210707224540-kcak0jb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-kcak0jb"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "多个线程在临界区内执行，由于代码的"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "执行序列不同"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "而导致结果无法预测，称之为发生了"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "竞态条件"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-61kgzsk",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-61kgzsk"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "解决方案总览 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-28vh071",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-28vh071"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "为了"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "避免临界区的竞态条件发生"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，有多种手段可以达到目的。"
				}
			]
		},
		{
			"ID": "20210707224540-hnazsg3",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-hnazsg3"
			},
			"Children": [
				{
					"ID": "20210707224540-6l5n7ob",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-6l5n7ob"
					},
					"Children": [
						{
							"ID": "20210707224540-nyeluy6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-nyeluy6"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "阻塞式"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "的解决方案："
								}
							]
						},
						{
							"ID": "20210707224540-9v039vj",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707224540-9v039vj"
							},
							"Children": [
								{
									"ID": "20210707224540-aev8yhj",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707224540-aev8yhj"
									},
									"Children": [
										{
											"ID": "20210707224540-opjoduw",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-opjoduw"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "同步锁机制："
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "synchronized"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "（同步代码块、同步方法）"
												}
											]
										}
									]
								},
								{
									"ID": "20210707224540-nxv23ci",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707224540-nxv23ci"
									},
									"Children": [
										{
											"ID": "20210707224540-8xubar2",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-8xubar2"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "Lock 锁机制："
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "Lock"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "（JUC 中介绍）"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-de82ceb",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-de82ceb"
					},
					"Children": [
						{
							"ID": "20210707224540-tvcnjw1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-tvcnjw1"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "非阻塞式"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "的解决方案"
								}
							]
						},
						{
							"ID": "20210707224540-4qaum6l",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707224540-4qaum6l"
							},
							"Children": [
								{
									"ID": "20210707224540-jz4ikys",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707224540-jz4ikys"
									},
									"Children": [
										{
											"ID": "20210707224540-nyq6wvg",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-nyq6wvg"
											},
											"Children": [
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "原子变量"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "（Automic）"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-zlh49r3",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707224540-zlh49r3"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "synchronized 关键字 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-scczd06",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-scczd06"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "介绍"
				}
			]
		},
		{
			"ID": "20210707224540-n8376h7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-n8376h7"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "synchronized"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "关键字可以用于"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "方法中的某个区块中"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，表示只对这个区块的"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "资源实行互斥访问"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。让同一时刻至多只有一个线程能持有【同步锁/对象锁/对象监视器】，其它线程再想获取这个【同步锁/对象锁/对象监视器】时就会"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "阻塞"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "住。这样就能保证拥有锁的线程可以安全的执行临界区内的代码，不用担心线程上下文切换"
				}
			]
		},
		{
			"ID": "20210707224540-czgnkd6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-czgnkd6"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "注意"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，虽然 java 中互斥和同步都可以采用 synchronized 关键字来完成，但它们还是有区别的："
				}
			]
		},
		{
			"ID": "20210707224540-9hqcqza",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-9hqcqza"
			},
			"Children": [
				{
					"ID": "20210707224540-ee1fo65",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-ee1fo65"
					},
					"Children": [
						{
							"ID": "20210707224540-db5waxl",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-db5waxl"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "互斥"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "是保证临界区的竞态条件发生，同一时刻只能有一个线程执行临界区代码"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-5tmwuy1",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-5tmwuy1"
					},
					"Children": [
						{
							"ID": "20210707224540-z1wrrjy",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-z1wrrjy"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "同步"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "是由于线程执行的先后、顺序不同、需要一个线程等待其它线程运行到某个点"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-4nbaj1v",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-4nbaj1v"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "synchronized 的优缺点："
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-0t25ir1",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-0t25ir1"
			},
			"Children": [
				{
					"ID": "20210707224540-ispp8tc",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-ispp8tc"
					},
					"Children": [
						{
							"ID": "20210707224540-lbzoqls",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-lbzoqls"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "好处"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：解决线程的安全问题（互斥）"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-xcvqryg",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-xcvqryg"
					},
					"Children": [
						{
							"ID": "20210707224540-r9qblxw",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-r9qblxw"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "弊端"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：相对"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "降低效率"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "（同步），因为同步外的线程都会判断同步锁；若有"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "同步嵌套容易产生死锁"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-mr687md",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-mr687md"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "同步锁/对象锁/对象监视器"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-38fdsrn",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-38fdsrn"
			},
			"Children": [
				{
					"ID": "20210707224540-7xtr5jl",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-7xtr5jl"
					},
					"Children": [
						{
							"ID": "20210707224540-ahhsid3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-ahhsid3"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "锁对象可以是"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "任意类型"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-huytnbi",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-huytnbi"
					},
					"Children": [
						{
							"ID": "20210707224540-v532mg8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-v532mg8"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "多个线程对象要使用"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "同一把锁"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-co09o5w",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-co09o5w"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "语法 1—同步代码块"
				}
			]
		},
		{
			"ID": "20210707224540-ml0ml0b",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-ml0ml0b"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "锁的目标是对象！"
				}
			]
		},
		{
			"ID": "20210707224540-j7orsh6",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-j7orsh6"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "synchronized(对象){// 线程1进入后，线程2到这里就被 blocked\n    // 临界区\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-vknbtsr",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-vknbtsr"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "卖票问题解决"
				}
			]
		},
		{
			"ID": "20210707224540-z0pp83n",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-z0pp83n"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@Slf4j(topic = \"SafeTicket\")\nclass SafeTicket implements Runnable {\n    private static int count = 1_000;// 线程竞争不明显可以增大票数\n\n    // final Object lock = new Object();\n\n    @Override\n    public void run() {\n        // 卖票窗口一直开着，不能在同步中，否则就会被一个线程执行完\n        while (true) {\n            // synchronized 需在内部写，否则其他线程会进不去。类似进入厕所然后锁门。需要包裹操作共享资源的代码。\n            // 还可以写 this（注意唯一性）、SafeTicket.class、上面的对象 lock\n            synchronized (this) {\n                if (count \u003c= 0) {\n                    log.debug(\"{}说: 票已经卖完了\", Thread.currentThread().getName());\n                    break;\n                }\n                try {\n                    // 进入time waiting，提高线程切换概率，错票几率\n                    TimeUnit.MILLISECONDS.sleep(10);\n                    log.debug(\"{}卖了第{}张票\", Thread.currentThread().getName(), count--);\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n    }\n}\n\n@Slf4j(topic = \"TestSafe\")\npublic class TestSafe {\n    public static void main(String[] args) throws InterruptedException {\n\n        Runnable task = new Ticket();\n\n        Thread t1 = new Thread(task, \"窗口1\");\n        Thread t2 = new Thread(task, \"窗口2\");\n        Thread t3 = new Thread(task, \"窗口3\");\n        Thread t4 = new Thread(task, \"窗口4\");\n\n        t1.start();\n        t2.start();\n        t3.start();\n        t4.start();\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-su7ywjw",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-su7ywjw"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "自增自减问题解决"
				}
			]
		},
		{
			"ID": "20210707224540-k1e5v07",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-k1e5v07"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@Slf4j(topic = \"TestCount\")\npublic class TestCount {\n\n    static int counter = 0;\n\n    static final Object room = new Object();\n\n    public static void main(String[] args) throws InterruptedException {\n        // test1();\n        test2();\n    }\n\n    /**\n     * 同步代码块\n     */\n    public static void test2() throws InterruptedException {\n        Thread t1 = new Thread(() -\u003e {\n            for (int i = 0; i \u003c 5_000; i++) {\n                synchronized (room) {\n                    counter++;\n                }\n            }\n        }, \"t1\");\n        Thread t2 = new Thread(() -\u003e {\n            for (int i = 0; i \u003c 5_000; i++) {\n                synchronized (room) {\n                    counter--;\n                }\n            }\n        }, \"t2\");\n        t1.start();\n        t2.start();\n        t1.join();\n        t2.join();\n        log.debug(\"{}\", counter);\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-arz6hqc",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-arz6hqc"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "原理 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-dnp53tj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-dnp53tj"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "类比："
				}
			]
		},
		{
			"ID": "20210707224540-da2w9mr",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-da2w9mr"
			},
			"Children": [
				{
					"ID": "20210707224540-avrm1ep",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-avrm1ep"
					},
					"Children": [
						{
							"ID": "20210707224540-gk6r7a4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-gk6r7a4"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "synchronized(对象) 中的对象，可以想象为一个房间（room），有唯一入口（门）房间只能一次进入一人进行计算，线程 t1，t2 想象成两个人"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-twxr6jb",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-twxr6jb"
					},
					"Children": [
						{
							"ID": "20210707224540-ni6ms4s",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-ni6ms4s"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "当线程 t1 执行到 synchronized(room) 时就好比 t1 进入了这个房间，并锁住了门拿走了钥匙，在门内执行 count++ 代码"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-hmk3th3",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-hmk3th3"
					},
					"Children": [
						{
							"ID": "20210707224540-i2v2xm2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-i2v2xm2"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "这时候如果 t2 也运行到了 synchronized(room) 时，它发现门被锁住了，只能在门外等待，发生了上下文切换，阻塞住了"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-s9aykif",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-s9aykif"
					},
					"Children": [
						{
							"ID": "20210707224540-ikt3bho",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-ikt3bho"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "这中间"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "即使 t1 的 cpu 时间片不幸用完，被踢出了门外"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "（不要错误理解为锁住了对象就能一直执行下去哦），这时"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "门还是锁住的，t1 仍拿着钥匙，t2 线程还在阻塞状态进不来"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，只有"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "下次轮到 t1 自己再次获得时间片时才能开门进入"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-07t0qo8",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-07t0qo8"
					},
					"Children": [
						{
							"ID": "20210707224540-nmbx66i",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-nmbx66i"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "当 t1 执行完 synchronized{} 块内的代码，这时候才会从 obj 房间出来并解开门上的锁，唤醒 t2 线程把钥匙给他"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。t2 线程这时才可以进入 obj 房间，锁住了门拿上钥匙，执行它的 count-- 代码"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-us4nd2v",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-us4nd2v"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "用图表示："
				}
			]
		},
		{
			"ID": "20210707224540-1zcicil",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "bWVybWFpZA==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-1zcicil"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "bWVybWFpZA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "sequenceDiagram\nparticipant t1 as 线程1\nparticipant t2 as 线程2\nparticipant i as static i\nparticipant lock as 锁对象\n\tt2 -\u003e\u003e lock : 尝试获取锁\n\tnote over t2,lock: 拥有锁\n\ti -\u003e\u003e t1 : getstatic i 读取 0\n\tt2 -\u003e\u003e t2 : iconst_1 准备常数 1\n\tt2 -\u003e\u003e t2 : isub 减去，线程内 i = -1\n\tt2 --\u003e\u003e t1 : 上下文切换\n\n\tt1 -x lock : 尝试获取锁，被阻塞（BLOCKED）\n\n\tt1 --\u003e\u003e t2 : 上下文切换\n\tt2 -\u003e\u003e i : putstatic i 写入 -1\n\tnote over t2,lock: 拥有锁\n\tt2 -\u003e\u003e lock : 释放锁，并唤醒阻塞的线程\n\n\tnote over t1,lock: 拥有锁\n\ti -\u003e\u003e t1 : getstatic i 读取 0\n\tt1 -\u003e\u003e t1 : iconst_1 准备常数 1\n\tt1 -\u003e\u003e t1 : iadd 加法，线程内 i = 1\n\tt1 -\u003e\u003e i : putstatic i 写入 1\n\tnote over t1,lock: 拥有锁\n\tt1 -\u003e\u003e lock : 释放锁，并唤醒阻塞的线程\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-vglnbo8",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-vglnbo8"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "思考"
				}
			]
		},
		{
			"ID": "20210707224540-vxa1hqc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-vxa1hqc"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "synchronized 实际是用"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "对象锁"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "保证了"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "临界区内代码的原子性（临界区内的代码必须对外是不可分割的，不会被线程切换所打断）"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。为了加深理解，请思考下面的问题（自增自减问题）："
				}
			]
		},
		{
			"ID": "20210707224540-im8opr4",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-im8opr4"
			},
			"Children": [
				{
					"ID": "20210707224540-1g5btli",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-1g5btli"
					},
					"Children": [
						{
							"ID": "20210707224540-1gr9eg9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-1gr9eg9"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果把 synchronized(obj) 放在 for 循环的外面，如何理解？-- 对 for 循环整体保证原子性"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-03h46dv",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-03h46dv"
					},
					"Children": [
						{
							"ID": "20210707224540-ac05cpi",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-ac05cpi"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果 t1 synchronized(obj1) 而 t2 synchronized(obj2) 会怎样运作？-- 锁对象不同，无法保证同步互斥"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-ldcy7x4",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-ldcy7x4"
					},
					"Children": [
						{
							"ID": "20210707224540-ttgqs9j",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-ttgqs9j"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果 t1 synchronized(obj) 而 t2 没有加会怎么样？如何理解？-- 锁对象不同，一个有一个没有，则会发生线程安全问题"
								}
							]
						},
						{
							"ID": "20210707224540-xxc7a7e",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-xxc7a7e"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "加法不加锁则是正数几率大，减法不加锁则是负数几率大，为啥了。。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-06p43nd",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-06p43nd"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "自增自减面向对象改进"
				}
			]
		},
		{
			"ID": "20210707224540-sp7uyv0",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-sp7uyv0"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@Slf4j(topic = \"TestCount2\")\npublic class TestCount2 {\n\n    public static void main(String[] args) throws InterruptedException {\n        Room room = new Room();\n\n        Thread t1 = new Thread(() -\u003e {\n            for (int i = 0; i \u003c 5_000; i++) {\n                room.increment();\n            }\n        }, \"t1\");\n        Thread t2 = new Thread(() -\u003e {\n            for (int i = 0; i \u003c 5_000; i++) {\n                room.decrement();\n            }\n        }, \"t2\");\n        t1.start();\n        t2.start();\n        t1.join();\n        t2.join();\n        log.debug(\"{}\", room.getCount());\n    }\n}\n\nclass Room {\n    private int count = 0;\n\n    public void increment(){\n        synchronized (this){\n            count++;\n        }\n    }\n\n    public void decrement(){\n        synchronized (this){\n            count--;\n        }\n    }\n\n    public int getCount(){\n        synchronized (this){\n            return count;\n        }\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-x6urrtr",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-x6urrtr"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "语法 2—同步方法 \u0026 锁对象 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-zg5jp6h",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-zg5jp6h"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "此时同步锁是谁？锁的目标还是对象"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，不是锁方法！"
				}
			]
		},
		{
			"ID": "20210707224540-r1v82as",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-r1v82as"
			},
			"Children": [
				{
					"ID": "20210707224540-ymln175",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-ymln175"
					},
					"Children": [
						{
							"ID": "20210707224540-r4yppqp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-r4yppqp"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "对于"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "非 static 方法"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，同步锁就是"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "this"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，此时代表调用 run 方法的对象"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-h257xx2",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-h257xx2"
					},
					"Children": [
						{
							"ID": "20210707224540-94dqdec",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-94dqdec"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "对于"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "static 方法"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，同步锁当前方法所在类的字节码对象("
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "类名.class"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": ")，"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "与方法调用者无关"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "！！！"
								}
							]
						},
						{
							"ID": "20210707224540-2aytgsv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-2aytgsv"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "使用继承 Thread 类和同步方法实现时，需要写 "
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "static synchronized"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-zl21z67",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-zl21z67"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "class Test {\n    public synchronized void test(){\n        // 临界区\n    }\n}\n\n// 等价于（自动转换）\nclass Test {\n    public void test(){\n        synchronized(this){\n            // 临界区\n        }\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-6eq0dpn",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-6eq0dpn"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "class Test {\n    public synchronized static void test(){\n        // 临界区\n    }\n}\n\n// 等价于（自动转换）\nclass Test {\n    public void test(){\n        synchronized(Test.class){\n            // 临界区\n        }\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-xgcg723",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-xgcg723"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "改进代码如下："
				}
			]
		},
		{
			"ID": "20210707224540-o3ktdi6",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-o3ktdi6"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@Slf4j(topic = \"TestCount2\")\npublic class TestCount2 {\n\n    public static void main(String[] args) throws InterruptedException {\n        Room room = new Room();\n\n        Thread t1 = new Thread(() -\u003e {\n            for (int i = 0; i \u003c 5_000; i++) {\n                room.increment();\n            }\n        }, \"t1\");\n        Thread t2 = new Thread(() -\u003e {\n            for (int i = 0; i \u003c 5_000; i++) {\n                room.decrement();\n            }\n        }, \"t2\");\n        t1.start();\n        t2.start();\n        t1.join();\n        t2.join();\n        log.debug(\"{}\", room.getCount());\n    }\n}\n\nclass Room {\n    private int count = 0;\n\n    public synchronized void increment() {\n        count++;\n    }\n\n    public synchronized void decrement() {\n        count--;\n    }\n\n    public synchronized int getCount() {\n        return count;\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-pe1bvo2",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707224540-pe1bvo2"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "\"线程八锁\" 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-nkfwdva",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-nkfwdva"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "考察 synchronized 锁住的是哪个对象"
				}
			]
		},
		{
			"ID": "20210707224540-x7miscp",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210707224540-x7miscp"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "情况 1"
				}
			]
		},
		{
			"ID": "20210707224540-f7f8m3q",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-f7f8m3q"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "结果：12 或 21"
				}
			]
		},
		{
			"ID": "20210707224540-efx8pim",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-efx8pim"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "锁是 this 对象（底层查看 n1 对象头部信息）"
				}
			]
		},
		{
			"ID": "20210707224540-tn8vi25",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-tn8vi25"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public class Test1 {\n\n    public static void main(String[] args) {\n        Number n1 = new Number();\n        new Thread(n1::a).start();\n        new Thread(n1::b).start();\n    }\n}\n\n@Slf4j(topic = \"Number\")\nclass Number{\n    public synchronized void a() {\n        log.debug(\"1\");\n    }\n    public synchronized void b() {\n        log.debug(\"2\");\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-n78uehl",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210707224540-n78uehl"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "情况 2"
				}
			]
		},
		{
			"ID": "20210707224540-pkhejs6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-pkhejs6"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "结果：1s 后 12，或 2 1s 后 1"
				}
			]
		},
		{
			"ID": "20210707224540-0aae0j7",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-0aae0j7"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public class Test1 {\n\n    public static void main(String[] args) {\n        Number n1 = new Number();\n        new Thread(n1::a).start();\n        new Thread(n1::b).start();\n    }\n}\n\n@Slf4j(topic = \"Number\")\nclass Number{\n    public synchronized void a() {\n        try {\n            TimeUnit.SECONDS.sleep(1);// sleep 不会释放锁，会释放处理机\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n        log.debug(\"1\");\n    }\n    public synchronized void b() {\n        log.debug(\"2\");\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-v96axon",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210707224540-v96axon"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "情况 3"
				}
			]
		},
		{
			"ID": "20210707224540-m3mneh3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-m3mneh3"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "结果：3 1s 12 或 23 1s 1 或 32 1s 1"
				}
			]
		},
		{
			"ID": "20210707224540-1qrwzs3",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-1qrwzs3"
			},
			"Children": [
				{
					"ID": "20210707224540-63zcpp7",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-63zcpp7"
					},
					"Children": [
						{
							"ID": "20210707224540-gww46ty",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-gww46ty"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "若 a 先获得锁，则 3 先打印，1s 后 1 打印，2 打印"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-01vk8xd",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-01vk8xd"
					},
					"Children": [
						{
							"ID": "20210707224540-2bsawrq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-2bsawrq"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "若 b 先获得锁，则 2 或 3 先打印，1s 后 1 打印"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-t4fan0i",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-t4fan0i"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public class Test3 {\n\n    public static void main(String[] args) {\n        Number3 n1 = new Number3();\n        new Thread(n1::a).start();\n        new Thread(n1::b).start();\n        new Thread(n1::c).start();\n    }\n}\n\n@Slf4j(topic = \"Number\")\nclass Number3{\n    public synchronized void a() {\n        try {\n            TimeUnit.SECONDS.sleep(1);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n        log.debug(\"1\");\n    }\n    public synchronized void b() {\n        log.debug(\"2\");\n    }\n\n    public void c() {\n        log.debug(\"3\");\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-3qwtyp2",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210707224540-3qwtyp2"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "情况 4"
				}
			]
		},
		{
			"ID": "20210707224540-jn9crks",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-jn9crks"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "结果：2 1s 后 1"
				}
			]
		},
		{
			"ID": "20210707224540-a2cf1bz",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-a2cf1bz"
			},
			"Children": [
				{
					"ID": "20210707224540-rvhrxq2",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-rvhrxq2"
					},
					"Children": [
						{
							"ID": "20210707224540-ur5u8vc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-ur5u8vc"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "首先锁对象都不是同一个了！所以俩线程并行执行"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-x9alwlq",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-x9alwlq"
					},
					"Children": [
						{
							"ID": "20210707224540-o8fj48d",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-o8fj48d"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "a 需要等 1s，所以是先打印 2，1s 后打印 1"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-l57fvwp",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-l57fvwp"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public class Test4 {\n\n    public static void main(String[] args) {\n        Number4 n1 = new Number4();\n        Number4 n2 = new Number4();\n        new Thread(n1::a).start();\n        new Thread(n2::b).start();\n    }\n}\n\n@Slf4j(topic = \"Number\")\nclass Number4{\n    public synchronized void a() {\n        try {\n            TimeUnit.SECONDS.sleep(1);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n        log.debug(\"1\");\n    }\n    public synchronized void b() {\n        log.debug(\"2\");\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-qze0hoo",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210707224540-qze0hoo"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "情况 5"
				}
			]
		},
		{
			"ID": "20210707224540-unf7iae",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-unf7iae"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "结果：2 1s 后 1"
				}
			]
		},
		{
			"ID": "20210707224540-571c6he",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-571c6he"
			},
			"Children": [
				{
					"ID": "20210707224540-7n2er76",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-7n2er76"
					},
					"Children": [
						{
							"ID": "20210707224540-fpqx3f0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-fpqx3f0"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "首先锁对象都不是同一个了！"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "static 方法不是看调用者，是看规则"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "！"
								}
							]
						},
						{
							"ID": "20210707224540-u4m0t6b",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-u4m0t6b"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "a 的锁是 Number4.class 对象，b 的锁是 this 对象，所以俩线程并行执行"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-xmp1iwx",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-xmp1iwx"
					},
					"Children": [
						{
							"ID": "20210707224540-8k2qkzc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-8k2qkzc"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "a 需要等 1s，所以是先打印 2，1s 后打印 1"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-2uv2uv7",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-2uv2uv7"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public class Test5 {\n\n    public static void main(String[] args) {\n        Number5 n1 = new Number5();\n        new Thread(() -\u003e n1.a()).start();\n        new Thread(() -\u003e n1.b()).start();\n    }\n}\n\n@Slf4j(topic = \"Number\")\nclass Number5{\n    public static synchronized void a() {\n        try {\n            TimeUnit.SECONDS.sleep(1);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n        log.debug(\"1\");\n    }\n    public synchronized void b() {\n        log.debug(\"2\");\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-9fp17o4",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210707224540-9fp17o4"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "情况 6"
				}
			]
		},
		{
			"ID": "20210707224540-1hvg39s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-1hvg39s"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "结果：1s 后 12，或 2 1s 后 1"
				}
			]
		},
		{
			"ID": "20210707224540-pa4lflx",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-pa4lflx"
			},
			"Children": [
				{
					"ID": "20210707224540-errb64c",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-errb64c"
					},
					"Children": [
						{
							"ID": "20210707224540-hwfsp9w",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-hwfsp9w"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "锁对象都是 Number6.class ，所以同步互斥运行"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-b6emhar",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-b6emhar"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public class Test6 {\n\n    public static void main(String[] args) {\n        new Thread(Number6::a).start();\n        new Thread(Number6::b).start();\n    }\n}\n\n@Slf4j(topic = \"Number\")\nclass Number6{\n    public static synchronized void a() {\n        try {\n            TimeUnit.SECONDS.sleep(1);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n        log.debug(\"1\");\n    }\n    public static synchronized void b() {\n        log.debug(\"2\");\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-bymc4p8",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210707224540-bymc4p8"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "情况 7"
				}
			]
		},
		{
			"ID": "20210707224540-jaap86j",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-jaap86j"
			},
			"Children": [
				{
					"ID": "20210707224540-01z2cjg",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-01z2cjg"
					},
					"Children": [
						{
							"ID": "20210707224540-ghonlwi",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-ghonlwi"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "结果：2 1s 后 1"
								}
							]
						},
						{
							"ID": "20210707224540-e85y6op",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707224540-e85y6op"
							},
							"Children": [
								{
									"ID": "20210707224540-y3d5xvw",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707224540-y3d5xvw"
									},
									"Children": [
										{
											"ID": "20210707224540-zmgm3vh",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-zmgm3vh"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "首先锁对象都不是同一个了，所以俩线程并行执行"
												}
											]
										}
									]
								},
								{
									"ID": "20210707224540-beu3ols",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707224540-beu3ols"
									},
									"Children": [
										{
											"ID": "20210707224540-y1h1a1w",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-y1h1a1w"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "a 需要等 1s，所以是先打印 2，1s 后打印 1"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-v7sv8na",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-v7sv8na"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public class Test7 {\n\n    public static void main(String[] args) {\n        Number7 n1 = new Number7();\n        Number7 n2 = new Number7();\n        new Thread(() -\u003e n1.a()).start();\n        new Thread(() -\u003e n2.b()).start();\n    }\n}\n\n@Slf4j(topic = \"Number\")\nclass Number7{\n    public static synchronized void a() {\n        try {\n            TimeUnit.SECONDS.sleep(1);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n        log.debug(\"1\");\n    }\n    public synchronized void b() {\n        log.debug(\"2\");\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-kmvlees",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210707224540-kmvlees"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "情况 8"
				}
			]
		},
		{
			"ID": "20210707224540-ttn53hw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-ttn53hw"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "结果：1s 后 12，或 2 1s 后 1"
				}
			]
		},
		{
			"ID": "20210707224540-2pxxbek",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-2pxxbek"
			},
			"Children": [
				{
					"ID": "20210707224540-tqwdkis",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-tqwdkis"
					},
					"Children": [
						{
							"ID": "20210707224540-wg6grom",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-wg6grom"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "虽然看着是 new 了不同的对象，但是实际调用会转为类 static 调用，所以是同一锁对象"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-1ygcqun",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-1ygcqun"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public class Test8 {\n\n    public static void main(String[] args) {\n        Number8 n1 = new Number8();\n        Number8 n2 = new Number8();\n        new Thread(() -\u003e n1.a()).start();\n        new Thread(() -\u003e n2.b()).start();\n    }\n}\n\n@Slf4j(topic = \"Number\")\nclass Number8{\n    public static synchronized void a() {\n        try {\n            TimeUnit.SECONDS.sleep(1);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n        log.debug(\"1\");\n    }\n    public static synchronized void b() {\n        log.debug(\"2\");\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-c24lwf1",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707224540-c24lwf1"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "变量的线程安全分析 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-l29h55o",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-l29h55o"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "成员变量和静态变量是否线程安全？"
				}
			]
		},
		{
			"ID": "20210707224540-wpo6jd6",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-wpo6jd6"
			},
			"Children": [
				{
					"ID": "20210707224540-ehwvcil",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-ehwvcil"
					},
					"Children": [
						{
							"ID": "20210707224540-1t4rapb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-1t4rapb"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果它们"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "没有共享，则线程安全"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-8mfaa9h",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-8mfaa9h"
					},
					"Children": [
						{
							"ID": "20210707224540-t1aqo2y",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-t1aqo2y"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果它们被"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "共享"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "了，根据它们的状态是否能够改变，又分两种情况"
								}
							]
						},
						{
							"ID": "20210707224540-bi33eby",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707224540-bi33eby"
							},
							"Children": [
								{
									"ID": "20210707224540-47vpez5",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707224540-47vpez5"
									},
									"Children": [
										{
											"ID": "20210707224540-nvr086q",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-nvr086q"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "如果"
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "只有读"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "操作，则"
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "线程安全"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20210707224540-yugk5j8",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707224540-yugk5j8"
									},
									"Children": [
										{
											"ID": "20210707224540-943hd1n",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-943hd1n"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "如果"
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "有读写"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "操作，则这段代码是临界区，需要"
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "考虑线程安全"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-7myxkmt",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-7myxkmt"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "局部变量是否线程安全？"
				}
			]
		},
		{
			"ID": "20210707224540-hrwsge9",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-hrwsge9"
			},
			"Children": [
				{
					"ID": "20210707224540-np1o4nq",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-np1o4nq"
					},
					"Children": [
						{
							"ID": "20210707224540-zi85k2t",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-zi85k2t"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "局部变量"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "是"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "线程安全"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "的"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-mgbhipg",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-mgbhipg"
					},
					"Children": [
						{
							"ID": "20210707224540-o7yo4l6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-o7yo4l6"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "但"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "局部变量引用的对象则未必"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "🔥"
								}
							]
						},
						{
							"ID": "20210707224540-enq1lb9",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707224540-enq1lb9"
							},
							"Children": [
								{
									"ID": "20210707224540-rcu4i5d",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707224540-rcu4i5d"
									},
									"Children": [
										{
											"ID": "20210707224540-dknf6br",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-dknf6br"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "如果该对象"
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "没有逃离方法的作用访问"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "，它是"
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "线程安全"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "的"
												}
											]
										}
									]
								},
								{
									"ID": "20210707224540-4bwuocm",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707224540-4bwuocm"
									},
									"Children": [
										{
											"ID": "20210707224540-h11z40q",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-h11z40q"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "如果该对象"
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "逃离方法的作用范围"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "，需要"
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "考虑线程安全"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-y2dtfbe",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-y2dtfbe"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "分析—成员变量—List#add × 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-7kcos3n",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-7kcos3n"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "class Test {\n    static final int THREAD_NUMBER = 2;\n    static final int LOOP_NUMBER = 200;\n\n    public static void main(String[] args) {\n        ThreadUnsafe test = new ThreadUnsafe();\n        for (int i = 0; i \u003c THREAD_NUMBER; i++) {\n            new Thread(() -\u003e {\n                test.method1(LOOP_NUMBER);\n            }, \"Thread\" + i).start();\n        }\n    }\n}\n\nclass ThreadUnsafe {\n\n    /* 成员变量 */\n    ArrayList\u003cString\u003e list = new ArrayList\u003c\u003e();\n\n    public void method1(int loopNumber) {\n        for (int i = 0; i \u003c loopNumber; i++) {\n            // 临界区, 会产生竞态条件\n            method2();\n            method3();\n            // 临界区\n        }\n    }\n\n    private void method2() {\n        list.add(\"1\");\n    }\n\n    private void method3() {\n        list.remove(0);\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-2jzm5qm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-2jzm5qm"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这里面本来 method2 执行完 add 后再执行 method3 的 remove 是无论如何不会出错的，但是在多线程下，"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "add 方法不是原子性"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的："
				}
			]
		},
		{
			"ID": "20210707224540-hit9wnb",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-hit9wnb"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public boolean add(E e) {\n    ensureCapacityInternal(size + 1);  // Increments modCount!!\n    elementData[size++] = e;\n    return true;\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-udoo8z3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-udoo8z3"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "有可能 2 个线程同时操作 add 时，拿到了同一个 size"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，即"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "只添加了一个元素"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "！此时要是调用第二个 remove 就会抛如下异常："
				}
			]
		},
		{
			"ID": "20210707224540-p7en80v",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-p7en80v"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Exception in thread \"Thread0\" java.lang.IndexOutOfBoundsException: Index: 0, Size: 0\n\tat java.util.ArrayList.rangeCheck(ArrayList.java:657)\n\tat java.util.ArrayList.remove(ArrayList.java:496)\n\tat _10_var_safe.ThreadUnsafe.method3(ThreadUnsafe.java:23)\n\tat _10_var_safe.ThreadUnsafe.method1(ThreadUnsafe.java:14)\n\tat _10_var_safe.ThreadUnsafe.lambda$main$0(ThreadUnsafe.java:37)\n\tat java.lang.Thread.run(Thread.java:748)\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-x7euwmc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-x7euwmc"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "与自增自减不同的是，自增自减中 2 个线程，分别进行增、减操作，这里是一个线程内进行增减操作"
				}
			]
		},
		{
			"ID": "20210707224540-s47pjaa",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-s47pjaa"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "分析："
				}
			]
		},
		{
			"ID": "20210707224540-dacbhvg",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-dacbhvg"
			},
			"Children": [
				{
					"ID": "20210707224540-mwy54i2",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-mwy54i2"
					},
					"Children": [
						{
							"ID": "20210707224540-6hshxa9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-6hshxa9"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "无论哪个线程中的 method2 引用的都是同一个对象中的 list 成员变量"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-ygq979p",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-ygq979p"
					},
					"Children": [
						{
							"ID": "20210707224540-fbupjg2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-fbupjg2"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "method3 与 method2 分析相同"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-9li9hat",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-9li9hat"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Children": [
						{
							"Type": "NodeBang",
							"Data": "!"
						},
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "image-20210217160309358"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "../assets/image-20210217160309358.png"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-hto7t9r",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-hto7t9r"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "分析—局部普通变量 ✓"
				}
			]
		},
		{
			"ID": "20210707224540-pqtphtn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-pqtphtn"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如下代码："
				}
			]
		},
		{
			"ID": "20210707224540-yf4kp2u",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-yf4kp2u"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public static void test1() {\n    int i = 10;\n    i++;\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-93yba7l",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-93yba7l"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "每个线程调用 test1() 方法时局部变量 i，会在每个线程的栈帧内存中被创建多份，因此不存在共享"
				}
			]
		},
		{
			"ID": "20210707224540-wnk89jd",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-wnk89jd"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public static void test1();\n\n\tdescriptor: ()V\n    flags: ACC_PUBLIC, ACC_STATIC\n\tCode:\n\t\tstack=1, locals=1, args_size=0\n\t\t\t0: bipush 10\n\t\t\t2: istore_0\n\t\t\t3: iinc 0, 1\n\t\t\t6: return\n\t\tLineNumberTable:\n\t\t\tline 10: 0\n\t\t\tline 11: 3\n\t\t\tline 12: 6\n\t\tLocalVariableTable:\n\t\t\tStart Length Slot Name Signature\n\t\t\t3 \t\t4 \t\t0 \ti \t\tI\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-zyek76j",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-zyek76j"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如图："
				}
			]
		},
		{
			"ID": "20210707224540-7x87flh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-7x87flh"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Children": [
						{
							"Type": "NodeBang",
							"Data": "!"
						},
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "image-20210217154731430"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "../assets/image-20210217154731430.png"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-61o2cv3",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-61o2cv3"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "分析—局部变量为引用对象 ✓"
				}
			]
		},
		{
			"ID": "20210707224540-yoimzg7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-yoimzg7"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "将 list 修改为局部变量"
				}
			]
		},
		{
			"ID": "20210707224540-l5hit7k",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-l5hit7k"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "class Test {\n    static final int THREAD_NUMBER = 2;\n    static final int LOOP_NUMBER = 200;\n\n    public static void main(String[] args) {\n        ThreadSafe test = new ThreadSafe();\n        for (int i = 0; i \u003c THREAD_NUMBER; i++) {\n            new Thread(() -\u003e {\n                test.method1(LOOP_NUMBER);\n            }, \"Thread\" + i).start();\n        }\n    }\n}\n\nclass ThreadSafe {\n\n    public void method1(int loopNumber) {\n        ArrayList\u003cString\u003e list = new ArrayList\u003c\u003e();\n        for (int i = 0; i \u003c loopNumber; i++) {\n            // 临界区, 会产生竞态条件\n            method2(list);\n            method3(list);\n            // 临界区\n        }\n    }\n\n    private void method2(ArrayList\u003cString\u003e list) {\n        list.add(\"1\");\n    }\n\n    private void method3(ArrayList\u003cString\u003e list) {\n        list.remove(0);\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-kfdecex",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-kfdecex"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "那么就不会有上述问题了"
				}
			]
		},
		{
			"ID": "20210707224540-u6m9nqs",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-u6m9nqs"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "分析："
				}
			]
		},
		{
			"ID": "20210707224540-8t8hq2n",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-8t8hq2n"
			},
			"Children": [
				{
					"ID": "20210707224540-1581936",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-1581936"
					},
					"Children": [
						{
							"ID": "20210707224540-o96qe0h",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-o96qe0h"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "list 是局部变量，"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "每个线程调用时会创建其不同实例，没有共享"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-vh4k1j9",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-vh4k1j9"
					},
					"Children": [
						{
							"ID": "20210707224540-69rufsq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-69rufsq"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "而 method2 的参数是从 method1 中传递过来的，与 method1 中引用同一个对象"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-nljso5m",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-nljso5m"
					},
					"Children": [
						{
							"ID": "20210707224540-9aqmjj1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-9aqmjj1"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "method3 的参数分析与 method2 相同"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-zneso6c",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-zneso6c"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Children": [
						{
							"Type": "NodeBang",
							"Data": "!"
						},
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "image-20210217160523996"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "../assets/image-20210217160523996.png"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-n7ml9hv",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-n7ml9hv"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "分析—局部变量为引用对象并暴露 ×"
				}
			]
		},
		{
			"ID": "20210707224540-s93upqb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-s93upqb"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "方法访问修饰符带来的思考，如果把 method2 和 method3 的方法修改为 public 会不会代理线程安全问题？"
				}
			]
		},
		{
			"ID": "20210707224540-wizpq1h",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-wizpq1h"
			},
			"Children": [
				{
					"ID": "20210707224540-8jxb0nt",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-8jxb0nt"
					},
					"Children": [
						{
							"ID": "20210707224540-lom5vz7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-lom5vz7"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "情况 1：有其它线程调用 method2 和 method3"
								}
							]
						},
						{
							"ID": "20210707224540-vr00790",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-vr00790"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "没有问题，因为操作的 list 对象还是各线程私有的"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-wu37yn3",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-wu37yn3"
					},
					"Children": [
						{
							"ID": "20210707224540-n2h4hsa",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-n2h4hsa"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "情况 2：在 情况 1 的基础上，为 ThreadSafe 类添加子类，子类覆盖 method2 或 method3 方法，即"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-or4x2nm",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-or4x2nm"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "class Test2 {\n    static final int THREAD_NUMBER = 2;\n    static final int LOOP_NUMBER = 200;\n\n    public static void main(String[] args) {\n        ThreadSafe2Sub test = new ThreadSafe2Sub();\n        for (int i = 0; i \u003c THREAD_NUMBER; i++) {\n            new Thread(() -\u003e test.method1(LOOP_NUMBER), \"Thread\" + i).start();\n        }\n    }\n}\n\n\nclass ThreadSafe2 {\n\n    public void method1(int loopNumber) {\n        ArrayList\u003cString\u003e list = new ArrayList\u003c\u003e();\n        for (int i = 0; i \u003c loopNumber; i++) {\n            // 临界区, 会产生竞态条件\n            method2(list);\n            method3(list);\n            // 临界区\n        }\n    }\n\n    public void method2(ArrayList\u003cString\u003e list) {\n        list.add(\"1\");\n    }\n\n    public void method3(ArrayList\u003cString\u003e list) {\n        list.remove(0);\n    }\n}\n\nclass ThreadSafe2Sub extends ThreadSafe2{\n    // @Override\n    // public void method2(ArrayList\u003cString\u003e list) {\n    //     new Thread(()-\u003e list.add(\"1\")).start();\n    // }\n\n    @Override\n    public void method3(ArrayList\u003cString\u003e list) {\n        new Thread(()-\u003e list.remove(0)).start();\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-qoegeoj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-qoegeoj"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这样就导致多个线程对同一资源进行操作，且操作的语句有多条！remove 底层："
				}
			]
		},
		{
			"ID": "20210707224540-6ysm0jn",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-6ysm0jn"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public E remove(int index) {\n    rangeCheck(index);\n\n    modCount++;\n    E oldValue = elementData(index);\n\n    int numMoved = size - index - 1;\n    if (numMoved \u003e 0)\n        System.arraycopy(elementData, index+1, elementData, index,\n                         numMoved);\n    elementData[--size] = null; // clear to let GC do its work\n\n    return oldValue;\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-y46yemc",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-y46yemc"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "常见线程安全类—同步锁"
				}
			]
		},
		{
			"ID": "20210707224540-1wpckjf",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-1wpckjf"
			},
			"Children": [
				{
					"ID": "20210707224540-pmabnf2",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-pmabnf2"
					},
					"Children": [
						{
							"ID": "20210707224540-plz5omx",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-plz5omx"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "StringBuffer"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-vcivy9a",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-vcivy9a"
					},
					"Children": [
						{
							"ID": "20210707224540-8zdddj3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-8zdddj3"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Random"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-q1yu1r6",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-q1yu1r6"
					},
					"Children": [
						{
							"ID": "20210707224540-j1hoox4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-j1hoox4"
							},
							"Children": [
								{
									"Type": "NodeStrikethrough",
									"Children": [
										{
											"Type": "NodeStrikethrough2OpenMarker",
											"Data": "~~"
										},
										{
											"Type": "NodeText",
											"Data": "Vector"
										},
										{
											"Type": "NodeStrikethrough2CloseMarker",
											"Data": "~~"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：不推荐"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-279qpi4",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-279qpi4"
					},
					"Children": [
						{
							"ID": "20210707224540-twle60w",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-twle60w"
							},
							"Children": [
								{
									"Type": "NodeStrikethrough",
									"Children": [
										{
											"Type": "NodeStrikethrough2OpenMarker",
											"Data": "~~"
										},
										{
											"Type": "NodeText",
											"Data": "Hashtable"
										},
										{
											"Type": "NodeStrikethrough2CloseMarker",
											"Data": "~~"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：不推荐"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-a4zdb01",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-a4zdb01"
					},
					"Children": [
						{
							"ID": "20210707224540-rcm4x0s",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-rcm4x0s"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "java.util.concurrent 包下的类"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-88tvegb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-88tvegb"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这里说它们是线程安全的是指，"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "多个线程调用"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "它们"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "同一个实例的某个方法时"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，是"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "线程安全"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的。也可以理解为"
				}
			]
		},
		{
			"ID": "20210707224540-xd2o2m6",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-xd2o2m6"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Hashtable table = new Hashtable();\nnew Thread(()-\u003e{\n    table.put(\"key\", \"value1\");\n}).start();\nnew Thread(()-\u003e{\n    table.put(\"key\", \"value2\");\n}).start();\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-qgxxwrl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-qgxxwrl"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "它们的"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "每个方法是原子"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的。但"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "注意"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "它们"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "多个方法的组合不是原子"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的："
				}
			]
		},
		{
			"ID": "20210707224540-q7zwbu2",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-q7zwbu2"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Hashtable table = new Hashtable();\nnew Thread(()-\u003e{\n    if(table.get(\"key\")==null){\n        table.put(\"key\", \"value\");\n    }\n}).start();\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-loiqocf",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "bWVybWFpZA==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-loiqocf"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "bWVybWFpZA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "sequenceDiagram\nparticipant t1 as 线程1\nparticipant t2 as 线程2\nparticipant table\nt1 -\u003e\u003e table : get(\"key\") == null\nt2 -\u003e\u003e table : get(\"key\") == null\nt2 -\u003e\u003e table : put(\"key\", \"value)\nt1 -\u003e\u003e table : put(\"key\", \"value)\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-04vx1w8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-04vx1w8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "每个原子操作执行完后都会释放锁，并唤醒其他阻塞线程。这里的 get、put 方法都是同一把锁"
				}
			]
		},
		{
			"ID": "20210707224540-dgxdz91",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-dgxdz91"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "常见线程安全类—不可变类"
				}
			]
		},
		{
			"ID": "20210707224540-1xtly7x",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-1xtly7x"
			},
			"Children": [
				{
					"ID": "20210707224540-55fwikj",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-55fwikj"
					},
					"Children": [
						{
							"ID": "20210707224540-7vvqsuu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-7vvqsuu"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "String"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-jc6w5d2",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-jc6w5d2"
					},
					"Children": [
						{
							"ID": "20210707224540-ubzcnm7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-ubzcnm7"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Integer"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-ruim3b1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-ruim3b1"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "String、Integer 等都是不可变类，因为其内部的状态不可以改变，因此它们的方法都是线程安全的"
				}
			]
		},
		{
			"ID": "20210707224540-0l7kq2z",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-0l7kq2z"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "有同学或许有疑问，String 有 replace，substring 等方法【可以】改变值啊，那么这些方法又是如何保证线程安全的呢？"
				}
			]
		},
		{
			"ID": "20210707224540-iotzis3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-iotzis3"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "因为"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "没有改变原有的值"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，是"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "重新 new 一个对象并返回"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的！"
				}
			]
		},
		{
			"ID": "20210707224540-bjj1zdf",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-bjj1zdf"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "实例分析 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-2h52gxw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-2h52gxw"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "如下实例中，Servlet 都是单例的！！！所以其所有 Service、Dao 也都是单例的"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-dorxrg1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-dorxrg1"
			},
			"Children": [
				{
					"Type": "NodeLink",
					"Children": [
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "Servlet 参考博客"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://www.cnblogs.com/stono/p/14234241.html"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-1vbaml5",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210707224540-1vbaml5"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "例 1"
				}
			]
		},
		{
			"ID": "20210707224540-ozybca7",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-ozybca7"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public class MyServlet extends HttpServlet {\n    // 是否安全？否\n    Map\u003cString,Object\u003e map = new HashMap\u003c\u003e();\n    // 是否安全？是\n    String S1 = \"...\";\n    // 是否安全？是\n    final String S2 = \"...\";\n    // 是否安全？否\n    Date d1 = new Date();\n    // 是否安全？否，只是 d2 这个引用值不能变，其对象内部属性是可变的\n    final Date d2 = new Date();\n\n    public void doGet(HttpServletRequest request, HttpServletResponse response) {\n        // 使用上述变量\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-4xkw5rg",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210707224540-4xkw5rg"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "例 2"
				}
			]
		},
		{
			"ID": "20210707224540-umzcloo",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-umzcloo"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "// MyServlet 只有一份，每个线程访问都会有一份\npublic class MyServlet extends HttpServlet {\n    // 是否安全？成员变量，可能有线程安全问题。UserServiceImpl中有成员变量，并有对该成员变量的修改操作\n    private UserService userService = new UserServiceImpl();\n\n    public void doGet(HttpServletRequest request, HttpServletResponse response) {\n        userService.update(...);\n    }\n}\npublic class UserServiceImpl implements UserService {\n    // 记录调用次数\n    // 成员变量，可能有线程安全问题\n    private int count = 0;\n    public void update() {\n        // ...同样\n        count++;\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-t072iuo",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210707224540-t072iuo"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "例 3"
				}
			]
		},
		{
			"ID": "20210707224540-rb4zzte",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-rb4zzte"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@Aspect\n@Component// Spring组件默认单例\npublic class MyAspect {\n    // 是否安全？成员变量，可能有线程安全问题\n    private long start = 0L;\n    @Before(\"execution(* *(..))\")\n    public void before() {\n        start = System.nanoTime();\n    }\n    @After(\"execution(* *(..))\")\n    public void after() {\n        long end = System.nanoTime();\n        System.out.println(\"cost time:\" + (end-start));\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-1fycm6c",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-1fycm6c"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可以使用环绕通知，将变量改为局部变量"
				}
			]
		},
		{
			"ID": "20210707224540-g3w9cpq",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210707224540-g3w9cpq"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "例 4"
				}
			]
		},
		{
			"ID": "20210707224540-wx5egty",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-wx5egty"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public class MyServlet extends HttpServlet {\n    // 是否安全。是。没有对userService进行修改的操作\n    private UserService userService = new UserServiceImpl();\n\n    public void doGet(HttpServletRequest request, HttpServletResponse response) {\n        userService.update(...);\n    }\n}\npublic class UserServiceImpl implements UserService {\n    // 是否安全。是。没有对userDao进行修改的操作\n    private UserDao userDao = new UserDaoImpl();\n    public void update() {\n        userDao.update();\n    }\n}\npublic class UserDaoImpl implements UserDao {\n    public void update() {\n        String sql = \"update user set password = ? where username = ?\";\n        // 是否安全。是。没有成员变量，只有局部变量一般都是线程安全的\n        try (Connection conn = DriverManager.getConnection(\"\",\"\",\"\")){\n            // ...\n        } catch (Exception e) {\n            // ...\n        }\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-94h428m",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210707224540-94h428m"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "例 5"
				}
			]
		},
		{
			"ID": "20210707224540-8q2p9i0",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-8q2p9i0"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public class MyServlet extends HttpServlet {\n    // 是否安全。是。没有对userService进行修改的操作\n    private UserService userService = new UserServiceImpl();\n\n    public void doGet(HttpServletRequest request, HttpServletResponse response) {\n        userService.update(...);\n    }\n}\npublic class UserServiceImpl implements UserService {\n    // 是否安全。是。没有对userDao进行修改的操作\n    private UserDao userDao = new UserDaoImpl();\n\n    public void update() {\n        userDao.update();\n    }\n}\npublic class UserDaoImpl implements UserDao {\n    // 是否安全。否。成员变量，且有对成员变量的修改操作，如close\n    private Connection conn = null;\n    public void update() throws SQLException {\n        String sql = \"update user set password = ? where username = ?\";\n        conn = DriverManager.getConnection(\"\",\"\",\"\");\n        // ...\n        conn.close();\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-533lels",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210707224540-533lels"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "例 6"
				}
			]
		},
		{
			"ID": "20210707224540-mqs0bep",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-mqs0bep"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public class MyServlet extends HttpServlet {\n    // 是否安全。是\n    private UserService userService = new UserServiceImpl();\n    public void doGet(HttpServletRequest request, HttpServletResponse response) {\n        userService.update(...);\n    }\n}\npublic class UserServiceImpl implements UserService {\n    // 是否安全。是\n    public void update() {\n        UserDao userDao = new UserDaoImpl();\n        userDao.update();\n    }\n}\npublic class UserDaoImpl implements UserDao {\n    // 是否安全，是，每次都会new UserDaoImpl，其实例中的成员变量不存在共享\n    private Connection conn = null;\n    public void update() throws SQLException {\n        String sql = \"update user set password = ? where username = ?\";\n        conn = DriverManager.getConnection(\"\",\"\",\"\");\n        // ...\n        conn.close();\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-2odhevm",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210707224540-2odhevm"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "例 7"
				}
			]
		},
		{
			"ID": "20210707224540-llubfna",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-llubfna"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public abstract class Test {\n    public void bar() {\n        // 是否安全。否。局部变量为引用对象，并暴露了！\n        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n        foo(sdf);\n    }\n    public abstract foo(SimpleDateFormat sdf);\n    public static void main(String[] args) {\n        new Test().bar();\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-nv6v5kc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-nv6v5kc"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其中 foo 的行为是不确定的，可能导致不安全的发生，被称之为"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "外星方法"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-sebz20d",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-sebz20d"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public void foo(SimpleDateFormat sdf) {\n    String dateStr = \"1999-10-11 00:00:00\";\n    for (int i = 0; i \u003c 20; i++) {\n        new Thread(() -\u003e {\n            try {\n                sdf.parse(dateStr);\n            } catch (ParseException e) {\n                e.printStackTrace();\n            }\n        }).start();\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-i24p0yp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-i24p0yp"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "请比较 JDK 中 String 类的实现"
				}
			]
		},
		{
			"ID": "20210707224540-y93d2ka",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210707224540-y93d2ka"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "例 8"
				}
			]
		},
		{
			"ID": "20210707224540-c34qd6k",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-c34qd6k"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@Slf4j(topic = \"Test3\")\npublic class Test3 {\n\n    private static Integer i = 0;\n    public static void main(String[] args) throws InterruptedException {\n        List\u003cThread\u003e list = new ArrayList\u003c\u003e();\n        for (int j = 0; j \u003c 2; j++) {\n            Thread thread = new Thread(() -\u003e {\n                for (int k = 0; k \u003c 5000; k++) {\n                    synchronized (i) {\n                        i++;\n                    }\n                }\n            }, \"\" + j);\n            list.add(thread);\n        }\n\n        list.forEach(Thread::start);\n        list.forEach(t -\u003e {\n            try {\n                t.join();\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n        log.debug(\"{}\", i);// 不够10000\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-604943s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-604943s"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "锁对象用的是成语变量 Integer i ，一直在变化，所以有线程安全问题"
				}
			]
		},
		{
			"ID": "20210707224540-78w76e9",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-78w76e9"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "习题 1—卖票练习 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-w7xwu46",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-w7xwu46"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "测试下面代码是否存在线程安全问题，并尝试改正。目前已是正确的了！"
				}
			]
		},
		{
			"ID": "20210707224540-p04dekl",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-p04dekl"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@Slf4j(topic = \"TestSell\")\npublic class TestSell {\n\n    // Random 为线程安全\n    static Random random = new Random();\n\n    // 随机 1~5\n    public static int randomAmount() {\n        return random.nextInt(5) + 1;\n    }\n\n\n    @RepeatedTest(10)\n    void test() {\n        // 初始化票数\n        TicketWindow ticketWindow = new TicketWindow(1000);\n\n        // 方便 join 同步，等待都完成后 main 线程执行统计。主线程中执行的，不涉及多线程\n        List\u003cThread\u003e list = new ArrayList\u003c\u003e();\n\n        // 用来存储卖出去多少张票。共享资源，若使用 List#add 其方法不是同步的，有线程安全问题\n        List\u003cInteger\u003e sellCount = new Vector\u003c\u003e();\n        for (int i = 0; i \u003c 2_000; i++) {\n            Thread t = new Thread(() -\u003e {\n                try {\n                    // 增加时间，以便线程切换几率，否则代码太少，很快就执行完了\n                    TimeUnit.MILLISECONDS.sleep(randomAmount());\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n                // 分析这里的竞态条件\n                // 该方法不是原子的，需要同步约束\n                int count = ticketWindow.sell(randomAmount());\n                // 该方法已经是同步的了，且和上面的不是同一共享资源，所以无需组合同步\n                sellCount.add(count);\n            });\n            list.add(t);\n            t.start();\n        }\n        list.forEach(t -\u003e {\n            try {\n                t.join();\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n        log.debug(\"卖出的票 :{} \\t余票: {}\",\n                sellCount.stream().mapToInt(c -\u003e c).sum(),\n                ticketWindow.getCount() );\n        // 卖出的票 + 余票 应该等于初始票数\n    }\n\n\n}\n\n\n// 售票窗口\nclass TicketWindow {\n    private int count;\n\n    public TicketWindow(int count) {\n        this.count = count;\n    }\n\n    // 获取余票\n    public int getCount() {\n        return count;\n    }\n\n    // 售票。必须加上synchronized，保证原子性\n    public synchronized int sell(int amount) {\n        if (this.count \u003e= amount) {\n            this.count -= amount;\n            return amount;\n        } else {\n            return 0;\n        }\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-bjz6z9e",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-bjz6z9e"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "不加 sleep，使用脚本测试多次（有可能电脑太快了，还必须加 sleep）。如下为 cmd"
				}
			]
		},
		{
			"ID": "20210707224540-xl8ncgu",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-xl8ncgu"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "for /L %n in (1,1,10) do java -cp \".;C:\\Users\\manyh\\.m2\\repository\\ch\\qos\\logback\\logback-classic\\1.2.3\\logback-classic-1.2.3.jar;C:\\Users\\manyh\\.m2\\repository\\ch\\qos\\logback\\logback-core\\1.2.3\\logback-core-1.2.3.jar;C:\\Users\\manyh\\.m2\\repository\\org\\slf4j\\slf4j-api\\1.7.25\\slf4j-api-1.7.25.jar\" cn.itcast.n4.exercise.ExerciseSell\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-aq4dwrd",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-aq4dwrd"
			},
			"Children": [
				{
					"ID": "20210707224540-dorbl2v",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-dorbl2v"
					},
					"Children": [
						{
							"ID": "20210707224540-o2hzhk5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-o2hzhk5"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "-cp：classpath，因为利用了第三方库"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-6hqtejx",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-6hqtejx"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "习题 2—转账 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-cwk7hu5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-cwk7hu5"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "测试下面代码是否存在线程安全问题，并尝试改正。目前已是正确的了！但是"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "有很大缺陷"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-vr7rs3u",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-vr7rs3u"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@Slf4j(topic = \"TestTransfer\")\npublic class TestTransfer {\n\n    // Random 为线程安全\n    static Random random = new Random();\n\n    // 随机 1~100\n    public static int randomAmount() {\n        return random.nextInt(100) + 1;\n    }\n\n\n    @RepeatedTest(10)\n    void test() throws InterruptedException {\n        Account a = new Account(1000);\n        Account b = new Account(1000);\n\n        Thread t1 = new Thread(() -\u003e {\n            for (int i = 0; i \u003c 1000; i++) {\n                a.transfer(b, randomAmount());\n            }\n        }, \"t1\");\n        Thread t2 = new Thread(() -\u003e {\n            for (int i = 0; i \u003c 1000; i++) {\n                b.transfer(a, randomAmount());\n            }\n        }, \"t2\");\n\n        t1.start();\n        t2.start();\n        t1.join();\n        t2.join();\n\n        log.debug(\"total:{}\", (a.getMoney() + b.getMoney()));\n    }\n\n}\n\n\nclass Account {\n    private int money;\n\n    public Account(int money) {\n        this.money = money;\n    }\n\n    public int getMoney() {\n        return money;\n    }\n\n    public void setMoney(int money) {\n        this.money = money;\n    }\n\n    // 这里 money 共享资源其实是有 2个账户的，需要都保护起来。\n    // 而 synchronized 同步方法锁对象是 this，不能都保护。即 a转b时其他a转b线程不能进入，但是b转a线程可以进入！\n    // 此时需要将都保护起来。但是不能使用嵌套同步代码块，容易死锁。此时可以采用Account.class锁对象\n    // 但是这是在同一时刻只能一个账户进行转账了，性能低下！！！\n    public void transfer(Account target, int amount) {\n        synchronized (Account.class) {\n            if (this.money \u003e amount) {\n                this.setMoney(this.money - amount);\n                target.setMoney(target.getMoney() + amount);\n            }\n        }\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-bptwtxs",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707224540-bptwtxs"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "线程间通信—wait、notify 等待唤醒机制 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-fwm5qk1",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-fwm5qk1"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "线程间通信 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-pa73ku2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-pa73ku2"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "多个线程在处理同一个资源，但是处理的动作（线程的任务）却不相同"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，需要线程通信来帮助解决线程之间对同一个变量的使用或操作。 就是多个线程在操作同一份数据时， 避免对同一共享变量的争夺。也就是我们需要通过一定的手段使各个线程能有效的利用资源。而这种手段即—— "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "等待唤醒机制"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20210707224540-3mvlcym",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-3mvlcym"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "小故事"
				}
			]
		},
		{
			"ID": "20210707224540-1vgzyy4",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-1vgzyy4"
			},
			"Children": [
				{
					"ID": "20210707224540-g643ox6",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-g643ox6"
					},
					"Children": [
						{
							"ID": "20210707224540-cztn8dr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-cztn8dr"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "由于条件不满足，小南不能继续进行计算"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-ygukcvj",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-ygukcvj"
					},
					"Children": [
						{
							"ID": "20210707224540-rgtifkv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-rgtifkv"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "但小南如果一直占用着锁，其它人就得一直阻塞，效率太低"
								}
							]
						},
						{
							"ID": "20210707224540-8lrc9by",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-8lrc9by"
							},
							"Children": [
								{
									"Type": "NodeImage",
									"Children": [
										{
											"Type": "NodeBang",
											"Data": "!"
										},
										{
											"Type": "NodeOpenBracket",
											"Data": "["
										},
										{
											"Type": "NodeLinkText",
											"Data": "image-20210219233020753"
										},
										{
											"Type": "NodeCloseBracket",
											"Data": "]"
										},
										{
											"Type": "NodeOpenParen",
											"Data": "("
										},
										{
											"Type": "NodeLinkDest",
											"Data": "../assets/image-20210219233020753.png"
										},
										{
											"Type": "NodeCloseParen",
											"Data": ")"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-v8iijmr",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-v8iijmr"
					},
					"Children": [
						{
							"ID": "20210707224540-0qyafaa",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-0qyafaa"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "于是老王单开了一间休息室（调用 wait 方法），让小南到休息室（WaitSet）等着去了，但这时锁释放开，其它人可以由老王随机安排进屋"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-jr2t02k",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-jr2t02k"
					},
					"Children": [
						{
							"ID": "20210707224540-jqt3c90",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-jqt3c90"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "直到小 M 将烟送来，大叫一声 [ 你的烟到了 ] （调用 notify 方法）"
								}
							]
						},
						{
							"ID": "20210707224540-8yl9xut",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-8yl9xut"
							},
							"Children": [
								{
									"Type": "NodeImage",
									"Children": [
										{
											"Type": "NodeBang",
											"Data": "!"
										},
										{
											"Type": "NodeOpenBracket",
											"Data": "["
										},
										{
											"Type": "NodeLinkText",
											"Data": "image-20210219233050871"
										},
										{
											"Type": "NodeCloseBracket",
											"Data": "]"
										},
										{
											"Type": "NodeOpenParen",
											"Data": "("
										},
										{
											"Type": "NodeLinkDest",
											"Data": "../assets/image-20210219233050871.png"
										},
										{
											"Type": "NodeCloseParen",
											"Data": ")"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-i6unz89",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-i6unz89"
					},
					"Children": [
						{
							"ID": "20210707224540-kkfl5dd",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-kkfl5dd"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "小南于是可以离开休息室，重新进入竞争锁的队列"
								}
							]
						},
						{
							"ID": "20210707224540-ebly7sb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-ebly7sb"
							},
							"Children": [
								{
									"Type": "NodeImage",
									"Children": [
										{
											"Type": "NodeBang",
											"Data": "!"
										},
										{
											"Type": "NodeOpenBracket",
											"Data": "["
										},
										{
											"Type": "NodeLinkText",
											"Data": "image-20210219233119428"
										},
										{
											"Type": "NodeCloseBracket",
											"Data": "]"
										},
										{
											"Type": "NodeOpenParen",
											"Data": "("
										},
										{
											"Type": "NodeLinkDest",
											"Data": "../assets/image-20210219233119428.png"
										},
										{
											"Type": "NodeCloseParen",
											"Data": ")"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-599b65l",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-599b65l"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "原理图解 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-f7hefuq",
			"Type": "NodeIFrame",
			"Data": "\u003ciframe id=\"embed_dom\" name=\"embed_dom\" frameborder=\"0\" style=\"display:block;width:100%; height:645px;\" src=\"https://www.processon.com/embed/602e422c07912934224cfe8d\"\u003e\u003c/iframe\u003e",
			"Properties": {
				"id": "20210707224540-f7hefuq"
			}
		},
		{
			"ID": "20210707224540-ov1gag1",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-ov1gag1"
			},
			"Children": [
				{
					"ID": "20210707224540-1be5jah",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-1be5jah"
					},
					"Children": [
						{
							"ID": "20210707224540-j55crj4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-j55crj4"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Owner 线程发现条件不满足，调用 wait 方法，即可进入 WaitSet 变为 WAITING 状态"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-cbjwhjy",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-cbjwhjy"
					},
					"Children": [
						{
							"ID": "20210707224540-d9z959i",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-d9z959i"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "BLOCKED 和 WAITING 的线程"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "都处于阻塞状态"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "不占用 CPU 时间片"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-q1g25pu",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-q1g25pu"
					},
					"Children": [
						{
							"ID": "20210707224540-k5wmrhz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-k5wmrhz"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "BLOCKED 线程会在 Owner 线程释放锁时唤醒"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						},
						{
							"ID": "20210707224540-3azds08",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-3azds08"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "WAITING 线程会在 Owner 所属 Monitor 调用 notify 或 notifyAll 时唤醒"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，但唤醒后"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "并不意味者立刻获得锁"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，仍需"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "进入 EntryList 重新竞争"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-i6cqjrp",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-i6cqjrp"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "方法 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-zozfuum",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-zozfuum"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Object"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "类（任意锁）中提供了三个方法，是线程之间进行协作的手段。这些方法必须通过"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "同一个锁对象（this 调用或其他同一对象调用）在同步中（同步代码块、同步方法，即必须获得锁、成为 Monitor 的 Owner）调用"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，否则报"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "IllegalMonitorStateException"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "错。Lock 有其自己的方法。"
				}
			]
		},
		{
			"ID": "20210707224540-hykl7s4",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-hykl7s4"
			},
			"Children": [
				{
					"ID": "20210707224540-ng5yvfb",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-ng5yvfb"
					},
					"Children": [
						{
							"ID": "20210707224540-7d1s7xa",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-7d1s7xa"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "wait([long timeout])"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：让进入 obj 监视器的线程到 WaitSet 等待。"
								}
							]
						},
						{
							"ID": "20210707224540-lpamoyd",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-lpamoyd"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "等待"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "并立即"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "释放锁"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，线程进入 WAITING，"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "被唤醒若获得锁后从断点处执行后续代码"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						},
						{
							"ID": "20210707224540-s20621x",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-s20621x"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "有时限的等待, 到 n 毫秒后结束等待直接运行后续代码，或是被 notify"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-qhodfg9",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-qhodfg9"
					},
					"Children": [
						{
							"ID": "20210707224540-oozkpvo",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-oozkpvo"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "wait(long timeout, int nanos)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "不会精确到 nanos，只要 nanos 有正确的值，则给 timeout++"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-rbk7tuz",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-rbk7tuz"
					},
					"Children": [
						{
							"ID": "20210707224540-ofqwr7h",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-ofqwr7h"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "notify()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：在 obj 上正在 WaitSet 等待的线程中挑一个唤醒。"
								}
							]
						},
						{
							"ID": "20210707224540-c6i9ugl",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-c6i9ugl"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "唤醒正在排队等待同步资源的线程中优先级最高者结束等待，但"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "它自己不释放锁"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，被通知线程不能立即恢复执行线程，"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "需重新请求同步锁"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-hphba0w",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-hphba0w"
					},
					"Children": [
						{
							"ID": "20210707224540-e3356t6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-e3356t6"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "notifyAll()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：让 obj 上正在 WaitSet 等待的线程全部唤醒"
								}
							]
						},
						{
							"ID": "20210707224540-qb5qnl0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-qb5qnl0"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "唤醒正在排队等待资源的所有线程结束等待"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-9n974xa",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-9n974xa"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "::: tip"
				}
			]
		},
		{
			"ID": "20210707224540-9b5ftx8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-9b5ftx8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "哪怕只通知了一个等待的线程，被通知线程也不能立即恢复执行，因为它当初中断的地方是在同步块内，而此刻它已经不持有锁，所以她需要再次尝试去获取锁（很可能面临其它线程的竞争），成功后才能在当初调用 wait 方法之后的地方恢复执行。"
				},
				{
					"Type": "NodeSoftBreak",
					"Data": "\n"
				},
				{
					"Type": "NodeText",
					"Data": "总结如下："
				},
				{
					"Type": "NodeSoftBreak",
					"Data": "\n"
				},
				{
					"Type": "NodeText",
					"Data": "如果能获取锁，线程就从 WAITING 状态变成 RUNNABLE 状态； 否则，从 WaitSet 出来，又进入 EntryList，线程就从 WAITING 状态又变成 BLOCKED 状态。"
				}
			]
		},
		{
			"ID": "20210707224540-upcgv7w",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-upcgv7w"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": ":::"
				}
			]
		},
		{
			"ID": "20210707224540-59un1m5",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-59un1m5"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@Slf4j(topic = \"Test1\")\npublic class Test1 {\n\n    final static Object obj = new Object();\n\n    public static void main(String[] args) throws InterruptedException {\n        new Thread(() -\u003e {\n            synchronized (obj) {\n                log.debug(\"执行....\");\n                try {\n                    obj.wait(); // 让线程在obj上一直等待下去\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n                log.debug(\"执行后续代码....\");\n            }\n        }).start();\n\n        new Thread(() -\u003e {\n            synchronized (obj) {\n                log.debug(\"执行....\");\n                try {\n                    obj.wait(); // 让线程在obj上一直等待下去\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n                log.debug(\"执行后续代码....\");\n            }\n        }).start();\n\n        // 主线程两秒后执行\n        TimeUnit.SECONDS.sleep(2);\n        log.debug(\"唤醒 obj 上其它线程\");\n        synchronized (obj) {\n            obj.notify(); // 唤醒obj上一个线程\n            // obj.notifyAll(); // 唤醒obj上所有等待线程\n        }\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-tews5iv",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-tews5iv"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "sleep 与 wait 区别 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-q1aint5",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-q1aint5"
			},
			"Children": [
				{
					"ID": "20210707224540-6p4mlb8",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-6p4mlb8"
					},
					"Children": [
						{
							"ID": "20210707224540-kbfbrt7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-kbfbrt7"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "sleep 是 Thread 方法，而 wait 是 Object 的方法"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-39wo9ns",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-39wo9ns"
					},
					"Children": [
						{
							"ID": "20210707224540-7vkield",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-7vkield"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "sleep 不需要强制和 synchronized 配合使用，但 wait 需要和 synchronized 一起用"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-tdugfh7",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-tdugfh7"
					},
					"Children": [
						{
							"ID": "20210707224540-40hmcwr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-40hmcwr"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "sleep 在睡眠的同时，不会释放对象锁的，但 wait 在等待的时候会释放对象锁"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-meycnwv",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-meycnwv"
					},
					"Children": [
						{
							"ID": "20210707224540-yy7cr85",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-yy7cr85"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "状态都是 TIMED_WAITING"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-y40vxao",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-y40vxao"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "正确使用 wait、notify 步骤 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-7qhj4vk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-7qhj4vk"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "先来个"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "格式"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "吧："
				}
			]
		},
		{
			"ID": "20210707224540-6hyzrpj",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-6hyzrpj"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "synchronized(lock) {\n    while(条件不成立) {\n        lock.wait();\n    }\n    // 干活\n}\n\nsynchronized(lock) {\n\tlock.notifyAll();\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-lvnquk2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-lvnquk2"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "被唤醒后若获得锁则从 wait 后继续执行，这里由于是 while，应该继续执行 while 条件判断"
				}
			]
		},
		{
			"ID": "20210707224540-d3klt42",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-d3klt42"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "具体思路如下"
				}
			]
		},
		{
			"ID": "20210707224540-wphs131",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210707224540-wphs131"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "sleep 方式"
				}
			]
		},
		{
			"ID": "20210707224540-jino37c",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-jino37c"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "思考下面的解决方案好不好，为什么？"
				}
			]
		},
		{
			"ID": "20210707224540-46c4xai",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-46c4xai"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@Slf4j(topic = \"TestWaitNotify\")\npublic class TestWaitNotify {\n\n    static final Object room = new Object();\n    static boolean hasCigarette = false;// 有烟吗\n\n    public static void main(String[] args) throws InterruptedException {\n        step1();\n    }\n\n\n    private static void step1() throws InterruptedException {\n        new Thread(() -\u003e {\n            synchronized (room) {\n                log.debug(\"有烟没？[{}]\", hasCigarette);\n                if (!hasCigarette) {\n                    log.debug(\"没烟，先歇会！\");\n                    try {\n                        sleep(2);\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                }\n                log.debug(\"有烟没？[{}]\", hasCigarette);\n                if (hasCigarette) {\n                    log.debug(\"可以开始干活了\");\n                }\n            }\n        }, \"小南\").start();\n\n        for (int i = 0; i \u003c 5; i++) {\n            new Thread(() -\u003e {\n                synchronized (room) {\n                    log.debug(\"可以开始干活了\");\n                }\n            }, \"其它人\").start();\n        }\n\n        sleep(1);\n        new Thread(() -\u003e {\n            // 这里能不能加 synchronized (room)？不能，加了后在小南线程sleep时（不释放锁）主线程这里无法获取锁\n            hasCigarette = true;\n            log.debug(\"烟到了噢！\");\n        }, \"送烟的\").start();\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-y1eluce",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-y1eluce"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "结果如下："
				}
			]
		},
		{
			"ID": "20210707224540-tdp2c44",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-tdp2c44"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "15:42:08.224 [小南] DEBUG TestWaitNotify - 有烟没？[false]\n15:42:08.227 [小南] DEBUG TestWaitNotify - 没烟，先歇会！\n15:42:09.226 [送烟的] DEBUG TestWaitNotify - 烟到了噢！\n15:42:10.231 [小南] DEBUG TestWaitNotify - 有烟没？[true]\n15:42:10.232 [小南] DEBUG TestWaitNotify - 可以开始干活了\n15:42:10.232 [其它人] DEBUG TestWaitNotify - 可以开始干活了\n15:42:10.232 [其它人] DEBUG TestWaitNotify - 可以开始干活了\n15:42:10.233 [其它人] DEBUG TestWaitNotify - 可以开始干活了\n15:42:10.233 [其它人] DEBUG TestWaitNotify - 可以开始干活了\n15:42:10.233 [其它人] DEBUG TestWaitNotify - 可以开始干活了\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-r21qd1p",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-r21qd1p"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "问题如下："
				}
			]
		},
		{
			"ID": "20210707224540-oeia07v",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-oeia07v"
			},
			"Children": [
				{
					"ID": "20210707224540-bhwint2",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-bhwint2"
					},
					"Children": [
						{
							"ID": "20210707224540-pemil3e",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-pemil3e"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "小南线程未执行完毕时（包括 sleep 中）其它干活的线程，都要一直阻塞，效率太低"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-e4lqqut",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-e4lqqut"
					},
					"Children": [
						{
							"ID": "20210707224540-knn3cjf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-knn3cjf"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "小南线程必须睡足 2s 后才能醒来，就算烟提前送到，也无法立刻醒来"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-hf0oo80",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-hf0oo80"
					},
					"Children": [
						{
							"ID": "20210707224540-19nzyb5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-19nzyb5"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "加了 synchronized (room) 后，就好比小南在里面反锁了门睡觉，烟根本没法送进门，main 没加 synchronized 就好像 main 线程是翻窗户进来的"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-g9t46x1",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-g9t46x1"
					},
					"Children": [
						{
							"ID": "20210707224540-uas00o7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-uas00o7"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "解决方法，使用 wait - notify 机制"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-onynorm",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210707224540-onynorm"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "wait + notify 改进"
				}
			]
		},
		{
			"ID": "20210707224540-ecabz0k",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-ecabz0k"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "思考下面的实现行吗，为什么？"
				}
			]
		},
		{
			"ID": "20210707224540-88o5drw",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-88o5drw"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@Slf4j(topic = \"TestWaitNotify\")\npublic class TestWaitNotify {\n\n    static final Object room = new Object();\n    static boolean hasCigarette = false;// 有烟吗\n\n    public static void main(String[] args) throws InterruptedException {\n        step2();\n    }\n\n    /**\n     * wait、notify 方式\n     */\n    private static void step2() throws InterruptedException {\n        new Thread(() -\u003e {\n            synchronized (room) {\n                log.debug(\"有烟没？[{}]\", hasCigarette);\n                if (!hasCigarette) {\n                    log.debug(\"没烟，先歇会！\");\n                    try {\n                        room.wait();\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                }\n                log.debug(\"有烟没？[{}]\", hasCigarette);\n                if (hasCigarette) {\n                    log.debug(\"可以开始干活了\");\n                }\n            }\n        }, \"小南\").start();\n\n        for (int i = 0; i \u003c 5; i++) {\n            new Thread(() -\u003e {\n                synchronized (room) {\n                    log.debug(\"可以开始干活了\");\n                }\n            }, \"其它人\").start();\n        }\n\n        TimeUnit.SECONDS.sleep(1);\n        new Thread(() -\u003e {\n            // 这里能不能加 synchronized (room)？不能，加了后在小南线程sleep时（不释放锁）主线程这里无法获取锁\n            synchronized (room) {\n                hasCigarette = true;\n                log.debug(\"烟到了噢！\");\n                room.notify();\n            }\n        }, \"送烟的\").start();\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-xh7gor4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-xh7gor4"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "结果如下："
				}
			]
		},
		{
			"ID": "20210707224540-c39ksjp",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-c39ksjp"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "15:46:57.337 [小南] DEBUG TestWaitNotify - 有烟没？[false]\n15:46:57.344 [小南] DEBUG TestWaitNotify - 没烟，先歇会！\n15:46:57.344 [其它人] DEBUG TestWaitNotify - 可以开始干活了\n15:46:57.344 [其它人] DEBUG TestWaitNotify - 可以开始干活了\n15:46:57.344 [其它人] DEBUG TestWaitNotify - 可以开始干活了\n15:46:57.344 [其它人] DEBUG TestWaitNotify - 可以开始干活了\n15:46:57.344 [其它人] DEBUG TestWaitNotify - 可以开始干活了\n15:46:58.344 [送烟的] DEBUG TestWaitNotify - 烟到了噢！\n15:46:58.344 [小南] DEBUG TestWaitNotify - 有烟没？[true]\n15:46:58.344 [小南] DEBUG TestWaitNotify - 可以开始干活了\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-vguoa43",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-vguoa43"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "问题如下："
				}
			]
		},
		{
			"ID": "20210707224540-npth400",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-npth400"
			},
			"Children": [
				{
					"ID": "20210707224540-xmfsu4h",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-xmfsu4h"
					},
					"Children": [
						{
							"ID": "20210707224540-3765618",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-3765618"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "解决了其它干活的线程阻塞的问题，但如果有其它线程也在等待条件呢？会不会叫醒了其他线程？"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-bz7j1tl",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210707224540-bz7j1tl"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "notify 虚假唤醒 + notifyAll"
				}
			]
		},
		{
			"ID": "20210707224540-xb54h3r",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-xb54h3r"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@Slf4j(topic = \"TestWaitNotify\")\npublic class TestWaitNotify {\n\n    static final Object room = new Object();\n    static boolean hasCigarette = false;// 有烟吗\n    static boolean hasTakeout = false;// 有外卖吗\n\n\n    public static void main(String[] args) throws InterruptedException {\n        // step1();\n        // step2();\n        step3();\n    }\n\n    private static void step3() throws InterruptedException {\n        new Thread(() -\u003e {\n            synchronized (room) {\n                log.debug(\"有烟没？[{}]\", hasCigarette);\n                if (!hasCigarette) {\n                    log.debug(\"没烟，先歇会！\");\n                    try {\n                        room.wait();\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                }\n                log.debug(\"有烟没？[{}]\", hasCigarette);\n                if (hasCigarette) {\n                    log.debug(\"可以开始干活了\");\n                }\n            }\n        }, \"小南\").start();\n\n        new Thread(() -\u003e {\n            synchronized (room) {\n                Thread thread = Thread.currentThread();\n                log.debug(\"外卖送到没？[{}]\", hasTakeout);\n                if (!hasTakeout) {\n                    log.debug(\"没外卖，先歇会！\");\n                    try {\n                        room.wait();\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                }\n                log.debug(\"外卖送到没？[{}]\", hasTakeout);\n                if (hasTakeout) {\n                    log.debug(\"可以开始干活了\");\n                } else {\n                    log.debug(\"没干成活...\");\n                }\n            }\n        }, \"小女\").start();\n\n        for (int i = 0; i \u003c 5; i++) {\n            new Thread(() -\u003e {\n                synchronized (room) {\n                    log.debug(\"可以开始干活了\");\n                }\n            }, \"其它人\").start();\n        }\n\n        TimeUnit.SECONDS.sleep(1);\n        // 送外卖的把小南线程唤醒了！！！没唤醒小女线程\n        new Thread(() -\u003e {\n            synchronized (room) {\n                hasTakeout = true;\n                log.debug(\"外卖到了噢！\");\n                room.notify();\n            }\n        }, \"送外卖的\").start();\n    }\n\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-5inlt91",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-5inlt91"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "结果如下："
				}
			]
		},
		{
			"ID": "20210707224540-dt5am10",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-dt5am10"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "15:55:04.411 [小南] DEBUG TestWaitNotify - 有烟没？[false]\n15:55:04.414 [小南] DEBUG TestWaitNotify - 没烟，先歇会！\n15:55:04.414 [其它人] DEBUG TestWaitNotify - 可以开始干活了\n15:55:04.414 [其它人] DEBUG TestWaitNotify - 可以开始干活了\n15:55:04.414 [其它人] DEBUG TestWaitNotify - 可以开始干活了\n15:55:04.414 [其它人] DEBUG TestWaitNotify - 可以开始干活了\n15:55:04.415 [其它人] DEBUG TestWaitNotify - 可以开始干活了\n15:55:04.415 [小女] DEBUG TestWaitNotify - 外卖送到没？[false]\n15:55:04.415 [小女] DEBUG TestWaitNotify - 没外卖，先歇会！\n15:55:05.411 [送外卖的] DEBUG TestWaitNotify - 外卖到了噢！\n15:55:05.411 [小南] DEBUG TestWaitNotify - 有烟没？[false]\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-uyaczxr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-uyaczxr"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "问题如下："
				}
			]
		},
		{
			"ID": "20210707224540-apf14qv",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-apf14qv"
			},
			"Children": [
				{
					"ID": "20210707224540-r4831sn",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-r4831sn"
					},
					"Children": [
						{
							"ID": "20210707224540-mx16wfd",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-mx16wfd"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "notify 只能随机唤醒一个 WaitSet 中的线程，这时如果有其它线程也在等待，那么就可能唤醒不了正确的线程，称之为【虚假唤醒】"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-0p98a2l",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-0p98a2l"
					},
					"Children": [
						{
							"ID": "20210707224540-vv56zvp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-vv56zvp"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "解决方法，改为 notifyAll。结果如下："
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-golrxb4",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-golrxb4"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "16:04:01.018 [小南] DEBUG TestWaitNotify - 有烟没？[false]\n16:04:01.022 [小南] DEBUG TestWaitNotify - 没烟，先歇会！\n16:04:01.022 [其它人] DEBUG TestWaitNotify - 可以开始干活了\n16:04:01.022 [其它人] DEBUG TestWaitNotify - 可以开始干活了\n16:04:01.023 [其它人] DEBUG TestWaitNotify - 可以开始干活了\n16:04:01.023 [其它人] DEBUG TestWaitNotify - 可以开始干活了\n16:04:01.023 [其它人] DEBUG TestWaitNotify - 可以开始干活了\n16:04:01.023 [小女] DEBUG TestWaitNotify - 外卖送到没？[false]\n16:04:01.023 [小女] DEBUG TestWaitNotify - 没外卖，先歇会！\n16:04:02.019 [送外卖的] DEBUG TestWaitNotify - 外卖到了噢！\n16:04:02.020 [小女] DEBUG TestWaitNotify - 外卖送到没？[true]\n16:04:02.020 [小女] DEBUG TestWaitNotify - 可以开始干活了\n16:04:02.020 [小南] DEBUG TestWaitNotify - 有烟没？[false]\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-2x42l04",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-2x42l04"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "问题如下："
				}
			]
		},
		{
			"ID": "20210707224540-kiufd5v",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-kiufd5v"
			},
			"Children": [
				{
					"ID": "20210707224540-f84zw06",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-f84zw06"
					},
					"Children": [
						{
							"ID": "20210707224540-vq9k9r5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-vq9k9r5"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "用 notifyAll 仅解决某个线程的唤醒问题，但使用 if + wait 判断仅有一次机会，一旦条件不成立，就没有重新判断的机会了"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-tnotue5",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-tnotue5"
					},
					"Children": [
						{
							"ID": "20210707224540-t8gmu7q",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-t8gmu7q"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "解决方法，"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "用 while + wait，当条件不成立，再次 wait"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-rmihory",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210707224540-rmihory"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "while + wait + notifyAll 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-9hc2jpu",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-9hc2jpu"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@Slf4j(topic = \"TestWaitNotify\")\npublic class TestWaitNotify {\n\n    static final Object room = new Object();\n    static boolean hasCigarette = false;// 有烟吗\n    static boolean hasTakeout = false;// 有外卖吗\n\n    public static void main(String[] args) throws InterruptedException {\n        step4();\n    }\n\n    /**\n     * while、wait、notifyAll 方式\n     */\n    private static void step4() throws InterruptedException {\n        new Thread(() -\u003e {\n            synchronized (room) {\n                log.debug(\"有烟没？[{}]\", hasCigarette);\n                while (!hasCigarette) {\n                    log.debug(\"没烟，先歇会！\");\n                    try {\n                        room.wait();\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                }\n                log.debug(\"有烟了，可以开始干活了\");\n            }\n        }, \"小南\").start();\n\n        new Thread(() -\u003e {\n            synchronized (room) {\n                Thread thread = Thread.currentThread();\n                log.debug(\"外卖送到没？[{}]\", hasTakeout);\n                while (!hasTakeout) {\n                    log.debug(\"没外卖，先歇会！\");\n                    try {\n                        room.wait();\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                }\n                log.debug(\"有外卖了，可以开始干活了\");\n            }\n        }, \"小女\").start();\n\n        for (int i = 0; i \u003c 5; i++) {\n            new Thread(() -\u003e {\n                synchronized (room) {\n                    log.debug(\"可以开始干活了\");\n                }\n            }, \"其它人\").start();\n        }\n\n        TimeUnit.SECONDS.sleep(1);\n        // 送外卖的把小南线程唤醒了！！！没唤醒小女线程\n        new Thread(() -\u003e {\n            synchronized (room) {\n                hasTakeout = true;\n                log.debug(\"外卖到了噢！\");\n                room.notifyAll();\n            }\n        }, \"送外卖的\").start();\n    }\n\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-305u1yg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-305u1yg"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "结果如下："
				}
			]
		},
		{
			"ID": "20210707224540-54kqobg",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-54kqobg"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "16:12:11.012 [小南] DEBUG TestWaitNotify - 有烟没？[false]\n16:12:11.015 [小南] DEBUG TestWaitNotify - 没烟，先歇会！\n16:12:11.015 [其它人] DEBUG TestWaitNotify - 可以开始干活了\n16:12:11.015 [其它人] DEBUG TestWaitNotify - 可以开始干活了\n16:12:11.015 [其它人] DEBUG TestWaitNotify - 可以开始干活了\n16:12:11.015 [其它人] DEBUG TestWaitNotify - 可以开始干活了\n16:12:11.016 [其它人] DEBUG TestWaitNotify - 可以开始干活了\n16:12:11.016 [小女] DEBUG TestWaitNotify - 外卖送到没？[false]\n16:12:11.016 [小女] DEBUG TestWaitNotify - 没外卖，先歇会！\n16:12:12.012 [送外卖的] DEBUG TestWaitNotify - 外卖到了噢！\n16:12:12.013 [小女] DEBUG TestWaitNotify - 有外卖了，可以开始干活了\n16:12:12.013 [小南] DEBUG TestWaitNotify - 没烟，先歇会！\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-h1lxbjb",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-h1lxbjb"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "设计模式—保护性暂停 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-81b0pxq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-81b0pxq"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "见设计模式"
				}
			]
		},
		{
			"ID": "20210707224540-un5uh64",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-un5uh64"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "join 原理—源码"
				}
			]
		},
		{
			"ID": "20210707224540-624cc5i",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-624cc5i"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public final void join() throws InterruptedException {\n    join(0);\n}\n\npublic final synchronized void join(long millis)\n    throws InterruptedException {\n    long base = System.currentTimeMillis();\n    long now = 0;\n\n    if (millis \u003c 0) {\n        throw new IllegalArgumentException(\"timeout value is negative\");\n    }\n\n    if (millis == 0) {\n        while (isAlive()) {\n            wait(0);\n        }\n    } else {\n        while (isAlive()) {\n            long delay = millis - now;\n            if (delay \u003c= 0) {\n                break;\n            }\n            wait(delay);\n            now = System.currentTimeMillis() - base;\n        }\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-hz5i3pr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-hz5i3pr"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "join 体现的是【保护性暂停】模式，请参考之"
				}
			]
		},
		{
			"ID": "20210707224540-o9csgfl",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-o9csgfl"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "设计模式—生产者消费者 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-rdvcm7e",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-rdvcm7e"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "见设计模式"
				}
			]
		},
		{
			"ID": "20210707224540-q6024dx",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707224540-q6024dx"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "park、unpark 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-ctkvp8a",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-ctkvp8a"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "基本使用"
				}
			]
		},
		{
			"ID": "20210707224540-b36evp0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-b36evp0"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "它们是 LockSupport 类中的方法"
				}
			]
		},
		{
			"ID": "20210707224540-ps11jkk",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-ps11jkk"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "// 暂停当前线程\nLockSupport.park();\n// 恢复某个线程的运行\nLockSupport.unpark(暂停线程对象)\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-jc8uyhr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-jc8uyhr"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "先 park 再 unpark"
				}
			]
		},
		{
			"ID": "20210707224540-ic2hn1m",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-ic2hn1m"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Thread t1 = new Thread(() -\u003e {\n    log.debug(\"start...\");\n    sleep(1);\n    log.debug(\"park...\");\n    LockSupport.park();\n    log.debug(\"resume...\");\n},\"t1\");\nt1.start();\n\nsleep(2);\n\nlog.debug(\"unpark...\");\nLockSupport.unpark(t1);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-jqxghdo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-jqxghdo"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出"
				}
			]
		},
		{
			"ID": "20210707224540-8x13vqr",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-8x13vqr"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "18:42:52.585 c.TestParkUnpark [t1] - start...\n18:42:53.589 c.TestParkUnpark [t1] - park...\n18:42:54.583 c.TestParkUnpark [main] - unpark...\n18:42:54.583 c.TestParkUnpark [t1] - resume...\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-5cybiba",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-5cybiba"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "先 unpark 再 park"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-uz0pgvx",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-uz0pgvx"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Thread t1 = new Thread(() -\u003e {\n    log.debug(\"start...\");\n    sleep(2);\n    log.debug(\"park...\");\n    LockSupport.park();\n    log.debug(\"resume...\");\n}, \"t1\");\nt1.start();\n\nsleep(1);\n\nlog.debug(\"unpark...\");\nLockSupport.unpark(t1);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-85le6nj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-85le6nj"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出"
				}
			]
		},
		{
			"ID": "20210707224540-c5mg45n",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-c5mg45n"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "18:43:50.765 c.TestParkUnpark [t1] - start...\n18:43:51.764 c.TestParkUnpark [main] - unpark...\n18:43:52.769 c.TestParkUnpark [t1] - park...\n18:43:52.769 c.TestParkUnpark [t1] - resume...\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-i1go6zo",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-i1go6zo"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "特点 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-vbtncac",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-vbtncac"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "与 Object 的 wait \u0026 notify 相比"
				}
			]
		},
		{
			"ID": "20210707224540-yq3f047",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-yq3f047"
			},
			"Children": [
				{
					"ID": "20210707224540-1vw7ww5",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-1vw7ww5"
					},
					"Children": [
						{
							"ID": "20210707224540-1e3i9kx",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-1e3i9kx"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "wait，notify 和 notifyAll 必须配合 Object Monitor"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " （sync）一起使用，"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "而 park，unpark 不必"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-gx7rhm6",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-gx7rhm6"
					},
					"Children": [
						{
							"ID": "20210707224540-kn3rmd7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-kn3rmd7"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "park \u0026 unpark 是以线程为单位来【阻塞】和【唤醒】线程"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，而 notify 只能随机唤醒一个等待线程，notifyAll 是唤醒所有等待线程，就不那么【"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "精确"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "】"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-60ejmt7",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-60ejmt7"
					},
					"Children": [
						{
							"ID": "20210707224540-a1mrrhx",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-a1mrrhx"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "park \u0026 unpark 可以先 unpark，而 wait \u0026 notify 不能先 notify"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-1s3xgnh",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-1s3xgnh"
					},
					"Children": [
						{
							"ID": "20210707224540-g9u8hrf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-g9u8hrf"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "park 后线程状态是 WAITING"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-j3bcc5f",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-j3bcc5f"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "底层原理 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-kgtkfnf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-kgtkfnf"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "每个线程都有自己的一个 Parker 对象（底层 C 实现），由三部分组成 "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "_counter"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " ， "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "_cond"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 和 "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "_mutex"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 打个比喻"
				}
			]
		},
		{
			"ID": "20210707224540-tvzuw78",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-tvzuw78"
			},
			"Children": [
				{
					"ID": "20210707224540-cvkfnvf",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-cvkfnvf"
					},
					"Children": [
						{
							"ID": "20210707224540-c7zb2dy",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-c7zb2dy"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "线程就像一个旅人，Parker 就像他随身携带的背包，"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "_cond"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 条件变量就好比背包中的帐篷。"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "_counter"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 就好比背包中的备用干粮（0 为耗尽，1 为充足）"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-myw8ck6",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-myw8ck6"
					},
					"Children": [
						{
							"ID": "20210707224540-m0tjl6z",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-m0tjl6z"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "调用 park 就是要看需不需要停下来歇息"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						},
						{
							"ID": "20210707224540-s8k4gf9",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707224540-s8k4gf9"
							},
							"Children": [
								{
									"ID": "20210707224540-1berh5d",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707224540-1berh5d"
									},
									"Children": [
										{
											"ID": "20210707224540-hkbtl7s",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-hkbtl7s"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "如果备用干粮耗尽，那么钻进帐篷歇息"
												}
											]
										}
									]
								},
								{
									"ID": "20210707224540-qlpblq5",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707224540-qlpblq5"
									},
									"Children": [
										{
											"ID": "20210707224540-3qa7lce",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-3qa7lce"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "如果备用干粮充足，那么不需停留，继续前进"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-jxyg0p4",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-jxyg0p4"
					},
					"Children": [
						{
							"ID": "20210707224540-34dmq47",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-34dmq47"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "调用 unpark，就好比令干粮充足"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						},
						{
							"ID": "20210707224540-njwterb",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707224540-njwterb"
							},
							"Children": [
								{
									"ID": "20210707224540-gb7j82d",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707224540-gb7j82d"
									},
									"Children": [
										{
											"ID": "20210707224540-8v6qz4w",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-8v6qz4w"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "如果这时线程还在帐篷，就唤醒让他继续前进"
												}
											]
										}
									]
								},
								{
									"ID": "20210707224540-c98xqhc",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707224540-c98xqhc"
									},
									"Children": [
										{
											"ID": "20210707224540-z5pigzv",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-z5pigzv"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "如果这时线程还在运行，那么下次他调用 park 时，仅是消耗掉备用干粮，不需停留继续前进"
												}
											]
										},
										{
											"ID": "20210707224540-or63anf",
											"Type": "NodeList",
											"ListData": {
												"Tight": true,
												"BulletChar": 45,
												"Padding": 2,
												"Marker": "LQ==",
												"Num": -1
											},
											"Properties": {
												"id": "20210707224540-or63anf"
											},
											"Children": [
												{
													"ID": "20210707224540-yy291v7",
													"Type": "NodeListItem",
													"Data": "-",
													"ListData": {
														"Tight": true,
														"BulletChar": 45,
														"Padding": 2,
														"Marker": "LQ==",
														"Num": -1
													},
													"Properties": {
														"id": "20210707224540-yy291v7"
													},
													"Children": [
														{
															"ID": "20210707224540-2usa63v",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20210707224540-2usa63v"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "因为背包空间有限，多次调用 unpark 仅会补充一份备用干粮"
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-vj6oqdi",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-vj6oqdi"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "流程如下："
				}
			]
		},
		{
			"ID": "20210707224540-avitch6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-avitch6"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Children": [
						{
							"Type": "NodeBang",
							"Data": "!"
						},
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "image-20210222003332613"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "../assets/image-20210222003332613.png"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-b3lcq2k",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20210707224540-b3lcq2k"
			},
			"Children": [
				{
					"ID": "20210707224540-bil918l",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20210707224540-bil918l"
					},
					"Children": [
						{
							"ID": "20210707224540-77q970x",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-77q970x"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "当前线程调用 Unsafe.park() 方法"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-qbrgdru",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20210707224540-qbrgdru"
					},
					"Children": [
						{
							"ID": "20210707224540-bmuuek9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-bmuuek9"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "检查 "
								},
								{
									"Type": "NodeBackslash",
									"Children": [
										{
											"Type": "NodeBackslashContent",
											"Data": "_"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "counter ，本情况为 0，这时，获得 "
								},
								{
									"Type": "NodeBackslash",
									"Children": [
										{
											"Type": "NodeBackslashContent",
											"Data": "_"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "mutex 互斥锁"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-bmi361p",
					"Type": "NodeListItem",
					"Data": "3",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 3,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mw==",
						"Num": 3
					},
					"Properties": {
						"id": "20210707224540-bmi361p"
					},
					"Children": [
						{
							"ID": "20210707224540-ofdayb8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-ofdayb8"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "线程进入 "
								},
								{
									"Type": "NodeBackslash",
									"Children": [
										{
											"Type": "NodeBackslashContent",
											"Data": "_"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "cond 条件变量阻塞"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-kxc8y9n",
					"Type": "NodeListItem",
					"Data": "4",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 4,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "NA==",
						"Num": 4
					},
					"Properties": {
						"id": "20210707224540-kxc8y9n"
					},
					"Children": [
						{
							"ID": "20210707224540-xsnjzbd",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-xsnjzbd"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "设置 "
								},
								{
									"Type": "NodeBackslash",
									"Children": [
										{
											"Type": "NodeBackslashContent",
											"Data": "_"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "counter = 0！！！本来就是 0"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-k3egfky",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-k3egfky"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Children": [
						{
							"Type": "NodeBang",
							"Data": "!"
						},
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "image-20210222003428179"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "../assets/image-20210222003428179.png"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-z94uk02",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20210707224540-z94uk02"
			},
			"Children": [
				{
					"ID": "20210707224540-v5tsvts",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20210707224540-v5tsvts"
					},
					"Children": [
						{
							"ID": "20210707224540-3olrr4u",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-3olrr4u"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "调用 Unsafe.unpark(Thread_0) 方法，设置 "
								},
								{
									"Type": "NodeBackslash",
									"Children": [
										{
											"Type": "NodeBackslashContent",
											"Data": "_"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "counter 为 1"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-8rwbp2l",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20210707224540-8rwbp2l"
					},
					"Children": [
						{
							"ID": "20210707224540-anso64n",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-anso64n"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "唤醒 "
								},
								{
									"Type": "NodeBackslash",
									"Children": [
										{
											"Type": "NodeBackslashContent",
											"Data": "_"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "cond 条件变量中的 Thread_0"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-0il7frw",
					"Type": "NodeListItem",
					"Data": "3",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 3,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mw==",
						"Num": 3
					},
					"Properties": {
						"id": "20210707224540-0il7frw"
					},
					"Children": [
						{
							"ID": "20210707224540-5utqeru",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-5utqeru"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Thread_0 恢复运行"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-4srvlha",
					"Type": "NodeListItem",
					"Data": "4",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 4,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "NA==",
						"Num": 4
					},
					"Properties": {
						"id": "20210707224540-4srvlha"
					},
					"Children": [
						{
							"ID": "20210707224540-c4qtj81",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-c4qtj81"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "设置 "
								},
								{
									"Type": "NodeBackslash",
									"Children": [
										{
											"Type": "NodeBackslashContent",
											"Data": "_"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "counter 为 0！！！因为运行了消耗所以又改为 0"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-qr534fz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-qr534fz"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Children": [
						{
							"Type": "NodeBang",
							"Data": "!"
						},
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "image-20210222003456287"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "../assets/image-20210222003456287.png"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-a3jt3at",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20210707224540-a3jt3at"
			},
			"Children": [
				{
					"ID": "20210707224540-3424a1e",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20210707224540-3424a1e"
					},
					"Children": [
						{
							"ID": "20210707224540-9s30qd5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-9s30qd5"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "调用 Unsafe.unpark(Thread_0) 方法，设置 "
								},
								{
									"Type": "NodeBackslash",
									"Children": [
										{
											"Type": "NodeBackslashContent",
											"Data": "_"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "counter 为 1"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-rpqaaws",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20210707224540-rpqaaws"
					},
					"Children": [
						{
							"ID": "20210707224540-gmollho",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-gmollho"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "当前线程调用 Unsafe.park() 方法"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-7m1da6x",
					"Type": "NodeListItem",
					"Data": "3",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 3,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mw==",
						"Num": 3
					},
					"Properties": {
						"id": "20210707224540-7m1da6x"
					},
					"Children": [
						{
							"ID": "20210707224540-0lct618",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-0lct618"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "检查 "
								},
								{
									"Type": "NodeBackslash",
									"Children": [
										{
											"Type": "NodeBackslashContent",
											"Data": "_"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "counter ，本情况为 1，这时线程"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "无需阻塞，继续运行"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-1i8o463",
					"Type": "NodeListItem",
					"Data": "4",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 4,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "NA==",
						"Num": 4
					},
					"Properties": {
						"id": "20210707224540-1i8o463"
					},
					"Children": [
						{
							"ID": "20210707224540-v98xapi",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-v98xapi"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "设置 "
								},
								{
									"Type": "NodeBackslash",
									"Children": [
										{
											"Type": "NodeBackslashContent",
											"Data": "_"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "counter 为 0！！！因为运行了消耗所以又改为 0"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-olvxi1b",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707224540-olvxi1b"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "多把锁—锁粒度 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-bvsww5n",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-bvsww5n"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一间大屋子有两个功能：睡觉、学习，互不相干。现在小南要学习，小女要睡觉，但如果只用一间屋子（一个对象锁）的话，那么并发度很低。解决方法是准备多个房间（多个对象锁）"
				}
			]
		},
		{
			"ID": "20210707224540-zk9c7ya",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-zk9c7ya"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "例如："
				}
			]
		},
		{
			"ID": "20210707224540-8gy8zia",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-8gy8zia"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "class BigRoom {\n    public void sleep() {\n        synchronized (this) {\n            log.debug(\"sleeping 2 小时\");\n            Sleeper.sleep(2);\n        }\n    }\n    public void study() {\n        synchronized (this) {\n            log.debug(\"study 1 小时\");\n            Sleeper.sleep(1);\n        }\n    }\n}\n\npublic class Test {\n    public static void main(String[] args) {\n        BigRoom bigRoom = new BigRoom();\n\n        new Thread(() -\u003e {\n            bigRoom.compute();\n        },\"小南\").start();\n\n        new Thread(() -\u003e {\n            bigRoom.sleep();\n        },\"小女\").start();\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-bjbhhwb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-bjbhhwb"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "某次结果"
				}
			]
		},
		{
			"ID": "20210707224540-bly53vn",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-bly53vn"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "12:13:54.471 [小南] c.BigRoom - study 1 小时\n12:13:55.476 [小女] c.BigRoom - sleeping 2 小时\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-wqqum79",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-wqqum79"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "改进"
				}
			]
		},
		{
			"ID": "20210707224540-zqsuvp1",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-zqsuvp1"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "class BigRoom {\n    private final Object studyRoom = new Object();\n    private final Object bedRoom = new Object();\n\n    public void sleep() {\n        synchronized (bedRoom) {\n            log.debug(\"sleeping 2 小时\");\n            Sleeper.sleep(2);\n        }\n    }\n\n    public void study() {\n        synchronized (studyRoom) {\n            log.debug(\"study 1 小时\");\n            Sleeper.sleep(1);\n        }\n    }\n}\npublic class Test {\n    public static void main(String[] args) {\n        BigRoom bigRoom = new BigRoom();\n\n        new Thread(() -\u003e {\n            bigRoom.compute();\n        },\"小南\").start();\n\n        new Thread(() -\u003e {\n            bigRoom.sleep();\n        },\"小女\").start();\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-dpf4504",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-dpf4504"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "某次执行结果"
				}
			]
		},
		{
			"ID": "20210707224540-vea29nw",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-vea29nw"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "12:15:35.069 [小南] c.BigRoom - study 1 小时\n12:15:35.069 [小女] c.BigRoom - sleeping 2 小时\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-jvpajn4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-jvpajn4"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "将"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "锁的粒度细分"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "（业务资源是没有关联的，否则无法细分）"
				}
			]
		},
		{
			"ID": "20210707224540-5hb482q",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-5hb482q"
			},
			"Children": [
				{
					"ID": "20210707224540-zlxau63",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-zlxau63"
					},
					"Children": [
						{
							"ID": "20210707224540-suz32i0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-suz32i0"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "好处，是可以"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "增强并发度"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-0evel4o",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-0evel4o"
					},
					"Children": [
						{
							"ID": "20210707224540-hha6swe",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-hha6swe"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "坏处，"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "如果一个线程需要同时获得多把锁，就容易发生死锁"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-fl5ehov",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707224540-fl5ehov"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "线程活跃性 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-4lmxw7q",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-4lmxw7q"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "死锁 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-tmhmlwz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-tmhmlwz"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "指两个或两个以上的线程在执行的过程中，因"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "争夺资源"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "产生的一种"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "互相等待"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "现象。一个线程需要同时获取多把锁，这时就容易发生死锁"
				}
			]
		},
		{
			"ID": "20210707224540-q2b4z0g",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-q2b4z0g"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "不要使用 String 来做锁。如：String s1 = \"Hello\" 和 String s2 = \"Hello\" 其实是同一把锁；还会可能与其他类库发生死锁。"
				}
			]
		},
		{
			"ID": "20210707224540-zob56ta",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-zob56ta"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "t1 线程 获得 A 对象 锁，接下来想获取 B 对象 的锁 t2 线程 获得 B 对象 锁，接下来想获取 A 对象的锁。例："
				}
			]
		},
		{
			"ID": "20210707224540-dcgshcj",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-dcgshcj"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public class DeadLock {\n    private static final Object lock1 = new Object();\n    private static final Object lock2 = new Object();\n\n    public static void main(String[] args) {\n        new Thread(() -\u003e {\n            synchronized (lock1) {\n                System.out.println(\"t1 get lock1\");\n                // 可在此处sleep提高死锁概率\n                synchronized (lock2) {\n                    System.out.println(\"t1 get lock2\");\n                }\n            }\n        }, \"t1\").start();\n\n        new Thread(() -\u003e {\n            synchronized (lock2) {\n                System.out.println(\"t2 get lock2\");\n                // 可在此处sleep提高死锁概率\n                synchronized (lock1) {\n                    System.out.println(\"t2 get lock1\");\n                }\n            }\n        }, \"t2\").start();\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-qsyf046",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-qsyf046"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可能出现的结果有："
				}
			]
		},
		{
			"ID": "20210707224540-uhmox2n",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-uhmox2n"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "// 1 正常\nt1 get lock1\nt1 get lock2\nt2 get lock2\nt2 get lock1\n\n// 2 正常\nt2 get lock2\nt2 get lock1\nt1 get lock1\nt1 get lock2\n\n// 3 死锁\nt1 get lock1\nt2 get lock2\n\n// 4 死锁\nt2 get lock2\nt1 get lock1\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-re1a12j",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-re1a12j"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "定位死锁—jps jstack sconsole 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-e0qn3hq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-e0qn3hq"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "jps"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 执行后"
				}
			]
		},
		{
			"ID": "20210707224540-za9b2jx",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-za9b2jx"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "51203 RemoteMavenServer36\n51204 RemoteMavenServer36\n26357\n51205 RemoteMavenServer36\n95943 DeadLock\n95942 Launcher\n96462 Jps\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-q826y5f",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-q826y5f"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "jstack 95943"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "查看 95943 DeadLock"
				}
			]
		},
		{
			"ID": "20210707224540-8sv85mn",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-8sv85mn"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "2021-02-23 21:51:28\nFull thread dump OpenJDK 64-Bit Server VM (25.232-b09 mixed mode):\n\n\"Attach Listener\" #14 daemon prio=9 os_prio=31 tid=0x00007fba44086800 nid=0xa203 waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n\"DestroyJavaVM\" #13 prio=5 os_prio=31 tid=0x00007fba4604e800 nid=0xe03 waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n\"t2\" #12 prio=5 os_prio=31 tid=0x00007fba4604d800 nid=0x5b03 waiting for monitor entry [0x00007000111df000]\n   java.lang.Thread.State: BLOCKED (on object monitor)\n\tat _12_deadlock.DeadLock.lambda$main$1(DeadLock.java:30)\n\t- waiting to lock \u003c0x000000076ac2dc88\u003e (a java.lang.Object)\n\t- locked \u003c0x000000076ac2dc98\u003e (a java.lang.Object)\n\tat _12_deadlock.DeadLock$$Lambda$2/764977973.run(Unknown Source)\n\tat java.lang.Thread.run(Thread.java:748)\n\n\"t1\" #11 prio=5 os_prio=31 tid=0x00007fba4604d000 nid=0x5903 waiting for monitor entry [0x00007000110dc000]\n   java.lang.Thread.State: BLOCKED (on object monitor)\n\tat _12_deadlock.DeadLock.lambda$main$0(DeadLock.java:20)\n\t- waiting to lock \u003c0x000000076ac2dc98\u003e (a java.lang.Object)\n\t- locked \u003c0x000000076ac2dc88\u003e (a java.lang.Object)\n\tat _12_deadlock.DeadLock$$Lambda$1/1452126962.run(Unknown Source)\n\tat java.lang.Thread.run(Thread.java:748)\n\n\"Service Thread\" #10 daemon prio=9 os_prio=31 tid=0x00007fba44828800 nid=0xa603 runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n\"C1 CompilerThread3\" #9 daemon prio=9 os_prio=31 tid=0x00007fba45032800 nid=0x5703 waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n\"C2 CompilerThread2\" #8 daemon prio=9 os_prio=31 tid=0x00007fba45032000 nid=0xa703 waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n\"C2 CompilerThread1\" #7 daemon prio=9 os_prio=31 tid=0x00007fba45031000 nid=0xa903 waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n\"C2 CompilerThread0\" #6 daemon prio=9 os_prio=31 tid=0x00007fba49821800 nid=0x4203 waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n\"Monitor Ctrl-Break\" #5 daemon prio=5 os_prio=31 tid=0x00007fba4981f800 nid=0x4103 runnable [0x00007000109c7000]\n   java.lang.Thread.State: RUNNABLE\n\tat java.net.SocketInputStream.socketRead0(Native Method)\n\tat java.net.SocketInputStream.socketRead(SocketInputStream.java:116)\n\tat java.net.SocketInputStream.read(SocketInputStream.java:171)\n\tat java.net.SocketInputStream.read(SocketInputStream.java:141)\n\tat sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)\n\tat sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)\n\tat sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)\n\t- locked \u003c0x000000076ac7af78\u003e (a java.io.InputStreamReader)\n\tat java.io.InputStreamReader.read(InputStreamReader.java:184)\n\tat java.io.BufferedReader.fill(BufferedReader.java:161)\n\tat java.io.BufferedReader.readLine(BufferedReader.java:324)\n\t- locked \u003c0x000000076ac7af78\u003e (a java.io.InputStreamReader)\n\tat java.io.BufferedReader.readLine(BufferedReader.java:389)\n\tat com.intellij.rt.execution.application.AppMainV2$1.run(AppMainV2.java:61)\n\n\"Signal Dispatcher\" #4 daemon prio=9 os_prio=31 tid=0x00007fba4a00b000 nid=0x3f07 runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n\"Finalizer\" #3 daemon prio=8 os_prio=31 tid=0x00007fba4a008800 nid=0x3403 in Object.wait() [0x0000700010638000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on \u003c0x000000076ab08ed8\u003e (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)\n\t- locked \u003c0x000000076ab08ed8\u003e (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:165)\n\tat java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:216)\n\n\"Reference Handler\" #2 daemon prio=10 os_prio=31 tid=0x00007fba4481d800 nid=0x4d03 in Object.wait() [0x0000700010535000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on \u003c0x000000076ab06c00\u003e (a java.lang.ref.Reference$Lock)\n\tat java.lang.Object.wait(Object.java:502)\n\tat java.lang.ref.Reference.tryHandlePending(Reference.java:191)\n\t- locked \u003c0x000000076ab06c00\u003e (a java.lang.ref.Reference$Lock)\n\tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:153)\n\n\"VM Thread\" os_prio=31 tid=0x00007fba44016800 nid=0x4f03 runnable\n\n\"GC task thread#0 (ParallelGC)\" os_prio=31 tid=0x00007fba4480e800 nid=0x1c07 runnable\n\n\"GC task thread#1 (ParallelGC)\" os_prio=31 tid=0x00007fba4480f000 nid=0x2003 runnable\n\n\"GC task thread#2 (ParallelGC)\" os_prio=31 tid=0x00007fba4400c000 nid=0x1e03 runnable\n\n\"GC task thread#3 (ParallelGC)\" os_prio=31 tid=0x00007fba4400c800 nid=0x2a03 runnable\n\n\"GC task thread#4 (ParallelGC)\" os_prio=31 tid=0x00007fba4481a800 nid=0x5303 runnable\n\n\"GC task thread#5 (ParallelGC)\" os_prio=31 tid=0x00007fba4400d000 nid=0x5103 runnable\n\n\"GC task thread#6 (ParallelGC)\" os_prio=31 tid=0x00007fba4400d800 nid=0x2c03 runnable\n\n\"GC task thread#7 (ParallelGC)\" os_prio=31 tid=0x00007fba4400e800 nid=0x2e03 runnable\n\n\"GC task thread#8 (ParallelGC)\" os_prio=31 tid=0x00007fba46008800 nid=0x2f03 runnable\n\n\"GC task thread#9 (ParallelGC)\" os_prio=31 tid=0x00007fba46009000 nid=0x3103 runnable\n\n\"VM Periodic Task Thread\" os_prio=31 tid=0x00007fba4604c000 nid=0xa403 waiting on condition\n\nJNI global references: 320\n\n\nFound one Java-level deadlock:\n=============================\n\"t2\":\n  waiting to lock monitor 0x00007fba4603deb8 (object 0x000000076ac2dc88, a java.lang.Object),\n  which is held by \"t1\"\n\"t1\":\n  waiting to lock monitor 0x00007fba4603f2a8 (object 0x000000076ac2dc98, a java.lang.Object),\n  which is held by \"t2\"\n\nJava stack information for the threads listed above:\n===================================================\n\"t2\":\n\tat _12_deadlock.DeadLock.lambda$main$1(DeadLock.java:30)\n\t- waiting to lock \u003c0x000000076ac2dc88\u003e (a java.lang.Object)\n\t- locked \u003c0x000000076ac2dc98\u003e (a java.lang.Object)\n\tat _12_deadlock.DeadLock$$Lambda$2/764977973.run(Unknown Source)\n\tat java.lang.Thread.run(Thread.java:748)\n\"t1\":\n\tat _12_deadlock.DeadLock.lambda$main$0(DeadLock.java:20)\n\t- waiting to lock \u003c0x000000076ac2dc98\u003e (a java.lang.Object)\n\t- locked \u003c0x000000076ac2dc88\u003e (a java.lang.Object)\n\tat _12_deadlock.DeadLock$$Lambda$1/1452126962.run(Unknown Source)\n\tat java.lang.Thread.run(Thread.java:748)\n\nFound 1 deadlock.\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-bz8yms6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-bz8yms6"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "看 Found one Java-level deadlock: 即可知道：t2 线程拥有 98 的锁，等待 88 的锁，t1 线程相反"
				}
			]
		},
		{
			"ID": "20210707224540-bwl4lft",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-bwl4lft"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "jconsole"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "专门有检测死锁按钮"
				}
			]
		},
		{
			"ID": "20210707224540-kfhe84n",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-kfhe84n"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "哲学家就餐问题 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-5ozl10f",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-5ozl10f"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Children": [
						{
							"Type": "NodeBang",
							"Data": "!"
						},
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "image-20210223220035029"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "../assets/image-20210223220035029.png"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-fdcm3ek",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-fdcm3ek"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "有五位哲学家，围坐在圆桌旁。"
				}
			]
		},
		{
			"ID": "20210707224540-8dkph20",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-8dkph20"
			},
			"Children": [
				{
					"ID": "20210707224540-yjw0hyh",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-yjw0hyh"
					},
					"Children": [
						{
							"ID": "20210707224540-89rpfw3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-89rpfw3"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "他们只做两件事，思考和吃饭，思考一会吃口饭，吃完饭后接着思考。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-ynkcik2",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-ynkcik2"
					},
					"Children": [
						{
							"ID": "20210707224540-w6br77p",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-w6br77p"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "吃饭时要用两根筷子吃，桌上共有 5 根筷子，每位哲学家左右手边各有一根筷子。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-yf9wc7z",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-yf9wc7z"
					},
					"Children": [
						{
							"ID": "20210707224540-gle3eg5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-gle3eg5"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果筷子被身边的人拿着，自己就得等待"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-q7jk2ix",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-q7jk2ix"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "/**\n * 筷子\n */\nclass Chopstick {\n\n    String name;\n\n    public Chopstick(String name) {\n        this.name = name;\n    }\n\n    @Override\n    public String toString() {\n        return \"筷子{\" + name + '}';\n    }\n}\n\n\n/**\n * 哲学家\n */\n@Slf4j(topic = \"Philosopher\")\nclass Philosopher extends Thread {\n\n    // 筷子充当锁\n    final Chopstick left;\n    final Chopstick right;\n\n    public Philosopher(String name, Chopstick left, Chopstick right) {\n        super(name);\n        this.left = left;\n        this.right = right;\n    }\n\n    @Override\n    public void run() {\n        while (true) {\n            // 获得左手筷子\n            synchronized (left) {\n                // 获得右手筷子\n                synchronized (right) {\n                    try {\n                        // 吃饭\n                        log.debug(\"eating...\");\n                        TimeUnit.SECONDS.sleep(1);\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                }\n                // 放下右手筷子\n            }\n            // 放下左手筷子\n        }\n    }\n}\n\n\npublic class TestPhilosopher {\n\n    public static void main(String[] args) {\n\n        Chopstick c1 = new Chopstick(\"筷子1\");\n        Chopstick c2 = new Chopstick(\"筷子2\");\n        Chopstick c3 = new Chopstick(\"筷子3\");\n        Chopstick c4 = new Chopstick(\"筷子4\");\n        Chopstick c5 = new Chopstick(\"筷子5\");\n        new Philosopher(\"苏格拉底\", c1, c2).start();\n        new Philosopher(\"柏拉图\", c2, c3).start();\n        new Philosopher(\"亚里士多德\", c3, c4).start();\n        new Philosopher(\"赫拉克利特\", c4, c5).start();\n        new Philosopher(\"阿基米德\", c5, c1).start();\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-dqd8ch6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-dqd8ch6"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "执行不多会，就执行不下去了"
				}
			]
		},
		{
			"ID": "20210707224540-mgxo1z1",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-mgxo1z1"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "22:07:22.593 [亚里士多德] DEBUG Philosopher - eating...\n22:07:23.594 [亚里士多德] DEBUG Philosopher - eating...\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-n5050pe",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-n5050pe"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "jstack"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "检查死锁"
				}
			]
		},
		{
			"ID": "20210707224540-42lnoe4",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-42lnoe4"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "2021-02-23 22:08:26\nFull thread dump OpenJDK 64-Bit Server VM (25.232-b09 mixed mode):\n\n\"Attach Listener\" #17 daemon prio=9 os_prio=31 tid=0x00007fc28d117800 nid=0x9c03 waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n\"DestroyJavaVM\" #16 prio=5 os_prio=31 tid=0x00007fc28c85a000 nid=0x1203 waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n\"阿基米德\" #15 prio=5 os_prio=31 tid=0x00007fc28d81d800 nid=0x9d03 waiting for monitor entry [0x0000700004070000]\n   java.lang.Thread.State: BLOCKED (on object monitor)\n\tat _12_deadlock.Philosopher.run(TestPhilosopher.java:51)\n\t- waiting to lock \u003c0x000000076ac2fd40\u003e (a _12_deadlock.Chopstick)\n\t- locked \u003c0x000000076ac2fe40\u003e (a _12_deadlock.Chopstick)\n\n\"赫拉克��特\" #14 prio=5 os_prio=31 tid=0x00007fc293808800 nid=0x5b03 waiting for monitor entry [0x0000700003f6d000]\n   java.lang.Thread.State: BLOCKED (on object monitor)\n\tat _12_deadlock.Philosopher.run(TestPhilosopher.java:51)\n\t- waiting to lock \u003c0x000000076ac2fe40\u003e (a _12_deadlock.Chopstick)\n\t- locked \u003c0x000000076ac2fe00\u003e (a _12_deadlock.Chopstick)\n\n\"亚里士多德\" #13 prio=5 os_prio=31 tid=0x00007fc292018800 nid=0xa003 waiting for monitor entry [0x0000700003e6a000]\n   java.lang.Thread.State: BLOCKED (on object monitor)\n\tat _12_deadlock.Philosopher.run(TestPhilosopher.java:51)\n\t- waiting to lock \u003c0x000000076ac2fe00\u003e (a _12_deadlock.Chopstick)\n\t- locked \u003c0x000000076ac2fdc0\u003e (a _12_deadlock.Chopstick)\n\n\"柏拉图\" #12 prio=5 os_prio=31 tid=0x00007fc28d113000 nid=0x5a03 waiting for monitor entry [0x0000700003d67000]\n   java.lang.Thread.State: BLOCKED (on object monitor)\n\tat _12_deadlock.Philosopher.run(TestPhilosopher.java:51)\n\t- waiting to lock \u003c0x000000076ac2fdc0\u003e (a _12_deadlock.Chopstick)\n\t- locked \u003c0x000000076ac2fd80\u003e (a _12_deadlock.Chopstick)\n\n\"苏格拉底\" #11 prio=5 os_prio=31 tid=0x00007fc28b86c000 nid=0xa303 waiting for monitor entry [0x0000700003c64000]\n   java.lang.Thread.State: BLOCKED (on object monitor)\n\tat _12_deadlock.Philosopher.run(TestPhilosopher.java:51)\n\t- waiting to lock \u003c0x000000076ac2fd80\u003e (a _12_deadlock.Chopstick)\n\t- locked \u003c0x000000076ac2fd40\u003e (a _12_deadlock.Chopstick)\n\n\"Service Thread\" #10 daemon prio=9 os_prio=31 tid=0x00007fc29282d800 nid=0x5803 runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n\"C1 CompilerThread3\" #9 daemon prio=9 os_prio=31 tid=0x00007fc29281d000 nid=0x5703 waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n\"C2 CompilerThread2\" #8 daemon prio=9 os_prio=31 tid=0x00007fc292814000 nid=0x5603 waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n\"C2 CompilerThread1\" #7 daemon prio=9 os_prio=31 tid=0x00007fc292813800 nid=0xa903 waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n\"C2 CompilerThread0\" #6 daemon prio=9 os_prio=31 tid=0x00007fc28d089800 nid=0x3f03 waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n\"Monitor Ctrl-Break\" #5 daemon prio=5 os_prio=31 tid=0x00007fc28d05a000 nid=0x4003 runnable [0x000070000354f000]\n   java.lang.Thread.State: RUNNABLE\n\tat java.net.SocketInputStream.socketRead0(Native Method)\n\tat java.net.SocketInputStream.socketRead(SocketInputStream.java:116)\n\tat java.net.SocketInputStream.read(SocketInputStream.java:171)\n\tat java.net.SocketInputStream.read(SocketInputStream.java:141)\n\tat sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)\n\tat sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)\n\tat sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)\n\t- locked \u003c0x000000076ac7ac70\u003e (a java.io.InputStreamReader)\n\tat java.io.InputStreamReader.read(InputStreamReader.java:184)\n\tat java.io.BufferedReader.fill(BufferedReader.java:161)\n\tat java.io.BufferedReader.readLine(BufferedReader.java:324)\n\t- locked \u003c0x000000076ac7ac70\u003e (a java.io.InputStreamReader)\n\tat java.io.BufferedReader.readLine(BufferedReader.java:389)\n\tat com.intellij.rt.execution.application.AppMainV2$1.run(AppMainV2.java:61)\n\n\"Signal Dispatcher\" #4 daemon prio=9 os_prio=31 tid=0x00007fc28c80e000 nid=0x4207 runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n\"Finalizer\" #3 daemon prio=8 os_prio=31 tid=0x00007fc291808800 nid=0x3303 in Object.wait() [0x00007000031c0000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on \u003c0x000000076ab08ed8\u003e (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)\n\t- locked \u003c0x000000076ab08ed8\u003e (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:165)\n\tat java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:216)\n\n\"Reference Handler\" #2 daemon prio=10 os_prio=31 tid=0x00007fc28b818800 nid=0x4d03 in Object.wait() [0x00007000030bd000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on \u003c0x000000076ab06c00\u003e (a java.lang.ref.Reference$Lock)\n\tat java.lang.Object.wait(Object.java:502)\n\tat java.lang.ref.Reference.tryHandlePending(Reference.java:191)\n\t- locked \u003c0x000000076ab06c00\u003e (a java.lang.ref.Reference$Lock)\n\tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:153)\n\n\"VM Thread\" os_prio=31 tid=0x00007fc28d04f000 nid=0x4f03 runnable\n\n\"GC task thread#0 (ParallelGC)\" os_prio=31 tid=0x00007fc28b816000 nid=0x2007 runnable\n\n\"GC task thread#1 (ParallelGC)\" os_prio=31 tid=0x00007fc28d808800 nid=0x1b03 runnable\n\n\"GC task thread#2 (ParallelGC)\" os_prio=31 tid=0x00007fc28e008800 nid=0x1c03 runnable\n\n\"GC task thread#3 (ParallelGC)\" os_prio=31 tid=0x00007fc28d809000 nid=0x2a03 runnable\n\n\"GC task thread#4 (ParallelGC)\" os_prio=31 tid=0x00007fc28e009000 nid=0x2b03 runnable\n\n\"GC task thread#5 (ParallelGC)\" os_prio=31 tid=0x00007fc28e808800 nid=0x2c03 runnable\n\n\"GC task thread#6 (ParallelGC)\" os_prio=31 tid=0x00007fc28e009800 nid=0x2e03 runnable\n\n\"GC task thread#7 (ParallelGC)\" os_prio=31 tid=0x00007fc28d809800 nid=0x3003 runnable\n\n\"GC task thread#8 (ParallelGC)\" os_prio=31 tid=0x00007fc28d80a000 nid=0x5103 runnable\n\n\"GC task thread#9 (ParallelGC)\" os_prio=31 tid=0x00007fc28d00b000 nid=0x3203 runnable\n\n\"VM Periodic Task Thread\" os_prio=31 tid=0x00007fc28b820000 nid=0xa403 waiting on condition\n\nJNI global references: 15\n\n\nFound one Java-level deadlock:\n=============================\n\"阿基米德\":\n  waiting to lock monitor 0x00007fc28b8708b8 (object 0x000000076ac2fd40, a _12_deadlock.Chopstick),\n  which is held by \"苏格拉底\"\n\"苏格拉底\":\n  waiting to lock monitor 0x00007fc28b86dc08 (object 0x000000076ac2fd80, a _12_deadlock.Chopstick),\n  which is held by \"��拉图\"\n\"柏拉图\":\n  waiting to lock monitor 0x00007fc28b86db58 (object 0x000000076ac2fdc0, a _12_deadlock.Chopstick),\n  which is held by \"亚里士多德\"\n\"亚里士多德\":\n  waiting to lock monitor 0x00007fc28b870808 (object 0x000000076ac2fe00, a _12_deadlock.Chopstick),\n  which is held by \"赫拉克利特\"\n\"赫拉克利特\":\n  waiting to lock monitor 0x00007fc28b870758 (object 0x000000076ac2fe40, a _12_deadlock.Chopstick),\n  which is held by \"阿基米德\"\n\nJava stack information for the threads listed above:\n===================================================\n\"阿基米德\":\n\tat _12_deadlock.Philosopher.run(TestPhilosopher.java:51)\n\t- waiting to lock \u003c0x000000076ac2fd40\u003e (a _12_deadlock.Chopstick)\n\t- locked \u003c0x000000076ac2fe40\u003e (a _12_deadlock.Chopstick)\n\"苏格拉底\":\n\tat _12_deadlock.Philosopher.run(TestPhilosopher.java:51)\n\t- waiting to lock \u003c0x000000076ac2fd80\u003e (a _12_deadlock.Chopstick)\n\t- locked \u003c0x000000076ac2fd40\u003e (a _12_deadlock.Chopstick)\n\"柏拉图\":\n\tat _12_deadlock.Philosopher.run(TestPhilosopher.java:51)\n\t- waiting to lock \u003c0x000000076ac2fdc0\u003e (a _12_deadlock.Chopstick)\n\t- locked \u003c0x000000076ac2fd80\u003e (a _12_deadlock.Chopstick)\n\"亚里士多德\":\n\tat _12_deadlock.Philosopher.run(TestPhilosopher.java:51)\n\t- waiting to lock \u003c0x000000076ac2fe00\u003e (a _12_deadlock.Chopstick)\n\t- locked \u003c0x000000076ac2fdc0\u003e (a _12_deadlock.Chopstick)\n\"赫拉克利特\":\n\tat _12_deadlock.Philosopher.run(TestPhilosopher.java:51)\n\t- waiting to lock \u003c0x000000076ac2fe40\u003e (a _12_deadlock.Chopstick)\n\t- locked \u003c0x000000076ac2fe00\u003e (a _12_deadlock.Chopstick)\n\nFound 1 deadlock.\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-n7hg1dx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-n7hg1dx"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这种线程没有按预期结束，执行不下去的情况，归类为【活跃性】问题，除了死锁以外，还有活锁和饥饿者两种情况"
				}
			]
		},
		{
			"ID": "20210707224540-f9zpxuc",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-f9zpxuc"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "活锁 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-zk0zyg0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-zk0zyg0"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "活锁出现在两个线程"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "互相改变对方的结束条件"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，最后谁也无法结束，例如"
				}
			]
		},
		{
			"ID": "20210707224540-hgkq7ay",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-hgkq7ay"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@Slf4j(topic = \"LiveLock\")\npublic class LiveLock {\n\n    static volatile int count = 10;\n\n    static final Object lock = new Object();\n\n    public static void main(String[] args) {\n\n        new Thread(() -\u003e {\n            // 期望减到 0 退出循环\n            while (count \u003e 0) {\n                try {\n                    TimeUnit.MILLISECONDS.sleep(200);\n                    count--;\n                    log.debug(\"count: {}\", count);\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n\n            }\n        }, \"t1\").start();\n        new Thread(() -\u003e {\n            // 期望超过 20 退出循环\n            while (count \u003c 20) {\n                try {\n                    TimeUnit.MILLISECONDS.sleep(200);\n                    count++;\n                    log.debug(\"count: {}\", count);\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n            }\n        }, \"t2\").start();\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-8u2owpl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-8u2owpl"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "解决："
				}
			]
		},
		{
			"ID": "20210707224540-bdmqoxs",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-bdmqoxs"
			},
			"Children": [
				{
					"ID": "20210707224540-nocz7ew",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-nocz7ew"
					},
					"Children": [
						{
							"ID": "20210707224540-04c90l5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-04c90l5"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "可以让线程交错开，同步执行；"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-zzjfwg2",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-zzjfwg2"
					},
					"Children": [
						{
							"ID": "20210707224540-vsd2bcs",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-vsd2bcs"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "增加随机睡眠时间来避免"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-sgglwuo",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-sgglwuo"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "饥饿—reentrantlock 解决 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-z6ruvtk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-z6ruvtk"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "很多教程中把饥饿定义为，一个线程由于"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "优先级太低"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "始终得不到 CPU 调度执行"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "也不能够结束"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，饥饿的情况不易演示，讲"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "读写锁"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "时会涉及饥饿问题"
				}
			]
		},
		{
			"ID": "20210707224540-lbc60j8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-lbc60j8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "下面我讲一下我遇到的一个线程饥饿的例子，先来看看使用"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "顺序加锁"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的方式解决之前的死锁问题"
				}
			]
		},
		{
			"ID": "20210707224540-9z7ef2e",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "bWVybWFpZA==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-9z7ef2e"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "bWVybWFpZA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "sequenceDiagram\nparticipant t1 as 线程1\nparticipant t2 as 线程2\nparticipant o1 as 对象1\nparticipant o2 as 对象2\n\tt1 -\u003e\u003e o1: 尝试获取锁\n\tnote over t1,o1: 拥有锁\n\n\tt2 -\u003e\u003e o2: 尝试获取锁\n\tnote over t2,o2: 拥有锁\n\n\tt1 -x o2 : 尝试获取锁，被阻塞（BLOCKED）\n\tt2 -x o1 : 尝试获取锁，被阻塞（BLOCKED）\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-zzdc3y5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-zzdc3y5"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "顺序加锁的解决方案"
				}
			]
		},
		{
			"ID": "20210707224540-5448iic",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "bWVybWFpZA==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-5448iic"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "bWVybWFpZA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "sequenceDiagram\nparticipant t1 as 线程1\nparticipant t2 as 线程2\nparticipant o1 as 对象1\nparticipant o2 as 对象2\n\tt1 -\u003e\u003e o1: 尝试获取锁\n\tnote over t1,o1: 拥有锁\n\n\tt2 -x o1 : 尝试获取锁，被阻塞（BLOCKED）\n\n\tt1 -\u003e\u003e o2: 尝试获取锁\n\tnote over t1,o2: 拥有锁\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-tx206g1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-tx206g1"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "但是顺序加锁容易出现饥饿问题："
				}
			]
		},
		{
			"ID": "20210707224540-w2dhe3u",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-w2dhe3u"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "/**\n * 筷子\n */\nclass Chopstick {\n\n    String name;\n\n    public Chopstick(String name) {\n        this.name = name;\n    }\n\n    @Override\n    public String toString() {\n        return \"筷子{\" + name + '}';\n    }\n}\n\n\n/**\n * 哲学家\n */\n@Slf4j(topic = \"Philosopher\")\nclass Philosopher extends Thread {\n\n    // 筷子充当锁\n    final Chopstick left;\n    final Chopstick right;\n\n    public Philosopher(String name, Chopstick left, Chopstick right) {\n        super(name);\n        this.left = left;\n        this.right = right;\n    }\n\n    @Override\n    public void run() {\n        while (true) {\n            // 获得左手筷子\n            synchronized (left) {\n                // 获得右手筷子\n                synchronized (right) {\n                    try {\n                        // 吃饭\n                        log.debug(\"eating...\");\n                        TimeUnit.SECONDS.sleep(1);\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                }\n                // 放下右手筷子\n            }\n            // 放下左手筷子\n        }\n    }\n}\n\n\npublic class TestPhilosopher {\n\n    public static void main(String[] args) {\n\n        Chopstick c1 = new Chopstick(\"1\");\n        Chopstick c2 = new Chopstick(\"2\");\n        Chopstick c3 = new Chopstick(\"3\");\n        Chopstick c4 = new Chopstick(\"4\");\n        Chopstick c5 = new Chopstick(\"5\");\n        new Philosopher(\"苏格拉底\", c1, c2).start();\n        new Philosopher(\"柏拉图\", c2, c3).start();\n        new Philosopher(\"亚里士多德\", c3, c4).start();\n        new Philosopher(\"赫拉克利特\", c4, c5).start();\n        // 本来 c5, c1 改变顺序，即可发现饥饿问题，阿基米德一直得不到执行，赫拉克利特执行最多\n        new Philosopher(\"阿基米德\", c1, c5).start();\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-op3pv60",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-op3pv60"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "第一轮争夺左筷子时，苏和阿同时争夺 c1，所以只有一个能争到且苏先运行则苏获取到"
				}
			]
		},
		{
			"ID": "20210707224540-cl74muh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-cl74muh"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "第二轮争夺右筷子时，c5 没人和赫争（阿已经阻塞）所以赫执行最多"
				}
			]
		},
		{
			"ID": "20210707224540-02500bg",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707224540-02500bg"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "ReentrantLock 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-wgemwbj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-wgemwbj"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "相对于 synchronized 它具备如下特点"
				}
			]
		},
		{
			"ID": "20210707224540-rbcc6vu",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-rbcc6vu"
			},
			"Children": [
				{
					"ID": "20210707224540-eg8ins7",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-eg8ins7"
					},
					"Children": [
						{
							"ID": "20210707224540-xc7h1b0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-xc7h1b0"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "与 synchronized 一样，"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "都支持可重入"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-a0y1lvc",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-a0y1lvc"
					},
					"Children": [
						{
							"ID": "20210707224540-2au8jxi",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-2au8jxi"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "可中断"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-vhh6uhj",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-vhh6uhj"
					},
					"Children": [
						{
							"ID": "20210707224540-24sg1ub",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-24sg1ub"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "可以设置"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "超时时间"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-f3bndtr",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-f3bndtr"
					},
					"Children": [
						{
							"ID": "20210707224540-o0hd7g4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-o0hd7g4"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "可以设置为"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "公平锁"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "（解决死锁、饥饿）"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-bfv5nt8",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-bfv5nt8"
					},
					"Children": [
						{
							"ID": "20210707224540-n99b80q",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-n99b80q"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "支持多个条件变量（"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "不满足条件调用 wait 可在多个 WaitSet 里等待"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "）"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-tcid703",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-tcid703"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "可重入"
				}
			]
		},
		{
			"ID": "20210707224540-h9xig4p",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707224540-h9xig4p"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "7.4 线程安全和同步"
				}
			]
		},
		{
			"ID": "20210707224540-un18dip",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210707224540-un18dip"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "Lock 锁"
				}
			]
		},
		{
			"ID": "20210707224540-7f8fdcy",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-7f8fdcy"
			},
			"Children": [
				{
					"ID": "20210707224540-grzis8j",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-grzis8j"
					},
					"Children": [
						{
							"ID": "20210707224540-ocxf44t",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-ocxf44t"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "从 JDK 5.0 开始，Java 提供了更强大的线程同步机制——通过"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "显式定义同步锁对象"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "来实现同步。"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "java.util.concurrent.locks.Lock"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " "
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "接口"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "机制提供了比"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "synchronized"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "代码块和"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "synchronized"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "方法更广泛的锁定操作，同步代码块/同步方法具有的功能 Lock 都有，除此之外更强大，更体现面向对象。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-nr0d816",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-nr0d816"
					},
					"Children": [
						{
							"ID": "20210707224540-tuvfva9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-tuvfva9"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "Lock 接口的实现类"
										},
										{
											"Type": "NodeCodeSpan",
											"CodeMarkerLen": 1,
											"Children": [
												{
													"Type": "NodeCodeSpanOpenMarker",
													"Data": "`"
												},
												{
													"Type": "NodeCodeSpanContent",
													"Data": "ReentrantLock"
												},
												{
													"Type": "NodeCodeSpanCloseMarker",
													"Data": "`"
												}
											]
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。可在构造方法中设置是否为"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "公平锁"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "（按 FIFO 队列），但是效率可能会变低。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-m73ggru",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-m73ggru"
					},
					"Children": [
						{
							"ID": "20210707224540-fnztman",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-fnztman"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "Lock 锁也称同步锁"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，加锁与释放锁方法化了，如下："
								}
							]
						},
						{
							"ID": "20210707224540-9u3kh7z",
							"Type": "NodeList",
							"ListData": {
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707224540-9u3kh7z"
							},
							"Children": [
								{
									"ID": "20210707224540-0zoks9c",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707224540-0zoks9c"
									},
									"Children": [
										{
											"ID": "20210707224540-aupu68x",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-aupu68x"
											},
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "void lock()"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "："
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "加同步锁"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20210707224540-k0m930m",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707224540-k0m930m"
									},
									"Children": [
										{
											"ID": "20210707224540-nanf4rl",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-nanf4rl"
											},
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "void unlock()"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "："
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "释放同步锁"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												}
											]
										},
										{
											"ID": "20210707224540-yefi1fe",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"CodeBlockFenceChar": 96,
											"CodeBlockFenceLen": 3,
											"CodeBlockOpenFence": "YGBg",
											"CodeBlockInfo": "amF2YQ==",
											"CodeBlockCloseFence": "YGBg",
											"Properties": {
												"id": "20210707224540-yefi1fe"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```",
													"CodeBlockFenceLen": 3
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "amF2YQ=="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "public class Ticket implements Runnable {\n\n    private int count = 100;\n    private Lock lock = new ReentrantLock();\n\n    @Override\n    public void run() {\n        while (true) {\n            try {\n                // 加同步锁\n                lock.lock();\n                if (count \u003e 0) {\n                    try {\n                        Thread.sleep(10);\n                        System.out.println(Thread.currentThread().getName() + \"--\u003e正在卖第\" + count + \"张票\");\n                        count--;\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                } else {\n                    break;\n                }\n            } finally {\n                // 释放同步锁\n                lock.unlock();\n            }\n        }\n    }\n\n    public static void main(String[] args) {\n        Ticket ticket = new Ticket();\n        new Thread(ticket, \"窗口1\").start();\n        new Thread(ticket, \"窗口2\").start();\n        new Thread(ticket, \"窗口3\").start();\n    }\n}\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```",
													"CodeBlockFenceLen": 3
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-5kcft1e",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210707224540-5kcft1e"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "####\n"
				}
			]
		},
		{
			"ID": "20210707224540-4zpl9hz",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707224540-4zpl9hz"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "习题"
				}
			]
		},
		{
			"ID": "20210707224540-jr6ustf",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-jr6ustf"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "实现 Runnable 接口的好处 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-q3aanvm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-q3aanvm"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "其实 Thread 类也是实现了 Runnable 接口"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。start 启动线程中内部调用 run 方法时，若是 target 有值（Runnable 对象）则调用该 Runnable 对象的 run 方法，无值则调用 Thread 重写的 run 方法。"
				}
			]
		},
		{
			"ID": "20210707224540-84tzhwj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-84tzhwj"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "构造方法初始化时会有"
				}
			]
		},
		{
			"ID": "20210707224540-a61aiwa",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-a61aiwa"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "// Thread.java\nthis.target = target;// 这个即是传入的 Runnable 对象。Thread 匿名内部类对象不会传入构造方法的\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-26dvawc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-26dvawc"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "调用 start 方式时会调用"
				}
			]
		},
		{
			"ID": "20210707224540-uwyhnj7",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-uwyhnj7"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "// Thread.java\n@Override\npublic void run() {\n    if (target != null) {\n        target.run();\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-yrspp0w",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-yrspp0w"
			},
			"Children": [
				{
					"ID": "20210707224540-8mh7y8k",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-8mh7y8k"
					},
					"Children": [
						{
							"ID": "20210707224540-wwladuu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-wwladuu"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "避免了 Java 类"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "单继承的局限性"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-6t3cn40",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-6t3cn40"
					},
					"Children": [
						{
							"ID": "20210707224540-r2igajz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-r2igajz"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "多个线程可以共享同一个接口实现类的对象，非常适合多个相同线程来"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "处理同一个资源"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，增加程序的健壮性，实现"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "解耦"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "操作，"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "任务"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "代码可以被多个线程共享，"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "任务代码和线程独立"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-m5m2lgv",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-m5m2lgv"
					},
					"Children": [
						{
							"ID": "20210707224540-e9ozwrq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-e9ozwrq"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "线程池"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "只能放入实现 Runable 或 Callable 类线程，不能直接放入继承 Thread 类的线程"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-pqhv1kh",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-pqhv1kh"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "run()"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "start()"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的区别 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-a6f0hj5",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-a6f0hj5"
			},
			"Children": [
				{
					"ID": "20210707224540-c64dyjk",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-c64dyjk"
					},
					"Children": [
						{
							"ID": "20210707224540-3umdwll",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-3umdwll"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "run()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：仅仅是封装被线程执行的代码，直接调用是普通方法。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-qcd3xnu",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-qcd3xnu"
					},
					"Children": [
						{
							"ID": "20210707224540-15x5y8t",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-15x5y8t"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "start()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：首先启动了线程，然后再由 jvm 去调用该线程的 run()方法。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-bhnfe0h",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-bhnfe0h"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "synchronized 和 Lock 区别"
				}
			]
		},
		{
			"ID": "20210707224540-1cp784f",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-1cp784f"
			},
			"Children": [
				{
					"ID": "20210707224540-yzfeev0",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-yzfeev0"
					},
					"Children": [
						{
							"ID": "20210707224540-5yi2xv2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-5yi2xv2"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "syn 是关键字属于 "
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "JVM 层面"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "的（在同步中块中才能调用 wait/notify）；Lock 是接口，是 "
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "Api 层面"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "的，JVM 将花费较少的时间来调度线程，性能更好。并且具有更好的扩展性（提供更多的子类）"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-hl3mi5i",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-hl3mi5i"
					},
					"Children": [
						{
							"ID": "20210707224540-s2whgq5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-s2whgq5"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "syn 是"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "隐式锁"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "出了作用域 或 抛异常会自动释放"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "；Lock 是"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "显式锁"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "（"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "手动开启和关闭锁"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，别忘记关闭锁）"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-svyu2mr",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-svyu2mr"
					},
					"Children": [
						{
							"ID": "20210707224540-hwj9xag",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-hwj9xag"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "syn 有代码块锁和方法锁；Lock 只有代码块锁"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-16c1omd",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-16c1omd"
					},
					"Children": [
						{
							"ID": "20210707224540-1a6bmir",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-1a6bmir"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "syn 不可中断"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "；"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "Lock 可中断"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "（tryLock 设置超时方法，lockInterruptibly()方代码块中，用 interrupt()方法中断）"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-uopqziv",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-uopqziv"
					},
					"Children": [
						{
							"ID": "20210707224540-souea05",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-souea05"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "使用 Lock 的 Condition 可以"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "精确唤醒"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-swvw35r",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-swvw35r"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "优先使用顺序：Lock —\u003e 同步代码块(已经进入了方法体，分配了相应资源) —\u003e 同步方法 (在方法体之外)"
				}
			]
		},
		{
			"ID": "20210707224540-uxx6gxv",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-uxx6gxv"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "sleep 和 wait 异同"
				}
			]
		},
		{
			"ID": "20210707224540-ph43qrj",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-ph43qrj"
			},
			"Children": [
				{
					"ID": "20210707224540-11f4e7u",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-11f4e7u"
					},
					"Children": [
						{
							"ID": "20210707224540-5an4u5i",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-5an4u5i"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "sleep 是 Thread 的方法，可以在任何场景下调用；wait 是 Object 的方法，必须在同步中调用（同步代码块、同步方法）"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-dshacev",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-dshacev"
					},
					"Children": [
						{
							"ID": "20210707224540-o45b8js",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-o45b8js"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "若俩方法都在同步中调用，都会使线程进入 TIME/ WAITING 状态。但 sleep "
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "不会释放锁"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，休眠结束回到就绪状态；wait "
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "等待"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "并立即"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "释放锁"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "被唤醒后若获得锁则从这里执行后续代码"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-gb5gwwl",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-gb5gwwl"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "2 个线程向账户存钱并打印"
				}
			]
		},
		{
			"ID": "20210707224540-lvodc5c",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-lvodc5c"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "银行有一个账户，有两个储户分别向同一个账户存 3000 元，每次存 1000，存 3 次。每次存完打印账户余额。"
				}
			]
		},
		{
			"ID": "20210707224540-m25g7z9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-m25g7z9"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "问题:该程序是否有安全问题，如果有，如何解决？此处采用继承 Thread 类来实现（实现 Runnable 接口稍简单）"
				}
			]
		},
		{
			"ID": "20210707224540-yv0n3go",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-yv0n3go"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "class Account {\n    private double balance;\n\n    public Account(double balance) {\n        this.balance = balance;\n    }\n\n    //存钱\n    public synchronized void deposit(double amt) {\n        if (amt \u003e 0) {\n            balance += amt;\n            System.out.println(Thread.currentThread().getName() + \":存钱成功。余额为：\" + balance);\n        }\n    }\n}\n\nclass Customer extends Thread {\n\n    private Account acct;\n\n    public Customer(Account acct, String name) {\n        super(name);\n        this.acct = acct;\n    }\n\n    @Override\n    public void run() {\n\n        for (int i = 0; i \u003c 3; i++) {\n            acct.deposit(1000);\n\n            try {\n                Thread.sleep(100);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}\n\npublic class AccountTest {\n\n    public static void main(String[] args) {\n        Account acct = new Account(0);\n        new Customer(acct, \"甲\").start();\n        new Customer(acct, \"乙\").start();\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-4p73lat",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-4p73lat"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "2 个线程交替打印 1-100"
				}
			]
		},
		{
			"ID": "20210707224540-9b4oy77",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-9b4oy77"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "同步代码块、同步方法"
				}
			]
		},
		{
			"ID": "20210707224540-8zo4r96",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-8zo4r96"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "class PrintThread implements Runnable{\n\n    private int count = 1;\n\n    @Override\n    public void run() {\n        while (true) {\n            // wait、notify 必须在同步中。且调用的对象与锁对象必须相同\n            synchronized (this) {\n                // 唤醒\n                this.notifyAll();\n                if (count \u003c= 100) {\n                    /*try {\n                        // 不加锁时，增加线程安全问题发生的概率\n                        Thread.sleep(100);\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }*/\n                    System.out.println(Thread.currentThread().getName()+\":\"+count++);\n\n                    try {\n                        // 等待并立即释放锁，唤醒后还是从这里继续，但是需要获取到锁，所以外层需要使用 while\n                        this.wait();\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                } else {\n                    break;\n                }\n            }\n        }\n    }\n}\n\npublic class PrintTest {\n\n    public static void main(String[] args) {\n        PrintThread printThread = new PrintThread();\n        // 也可以将 run 方法内容写入普通方法中，采用方法引用来操作\n        new Thread(printThread,\"A\").start();\n        new Thread(printThread,\"B\").start();\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-v9exv84",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-v9exv84"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Lock 方式暂时没想到好点的方法"
				}
			]
		},
		{
			"ID": "20210707224540-9yhs2pj",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-9yhs2pj"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "生产者消费者问题"
				}
			]
		},
		{
			"ID": "20210707224540-zlfko16",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-zlfko16"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "见笔记"
				}
			]
		},
		{
			"ID": "20210707224540-ljdsvb8",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-ljdsvb8"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "创建多线程的 4 种方式"
				}
			]
		},
		{
			"ID": "20210707224540-bb4lz6h",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-bb4lz6h"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "见笔记"
				}
			]
		}
	]
}