{
	"ID": "20210707224540-03cnot0",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20210707224540-03cnot0",
		"type": "doc",
		"updated": "20210707230023"
	},
	"Children": [
		{
			"ID": "20210707224540-my0v2rr",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707224540-my0v2rr",
				"updated": "20210707224540"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "反射简介"
				}
			]
		},
		{
			"ID": "20210707230023-bzo1wrw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707230023-bzo1wrw",
				"updated": "20210707230023"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Reflect—java.lang.reflect"
				}
			]
		},
		{
			"ID": "20210707224540-8tplq2v",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-8tplq2v"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "动态语言 \u0026 静态语言"
				}
			]
		},
		{
			"ID": "20210707224540-tmbuqd4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-tmbuqd4"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Reflection(反射)是被视为动态语言的关键，反射机制允许程序在"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "执行期"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "借助于 Reflection API 取得任何类的内部信息，并能直接操作任意对象的内部属性及方法。"
				}
			]
		},
		{
			"ID": "20210707224540-b825zvp",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-b825zvp"
			},
			"Children": [
				{
					"ID": "20210707224540-5jw6ygn",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-5jw6ygn"
					},
					"Children": [
						{
							"ID": "20210707224540-bfa3oww",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-bfa3oww"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "动态语言：是一类在运行时可以改变其结构的语言。例如新的函数、对象、甚至代码可以被引进，已有的函数可以被删除或是其他结构上的变化。通俗点说就是在运行时代码可以根据某些条件改变自身结构。 主要动态语言有 Object-C、C#、JavaScript、PHP、Python、Erlang"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-9nycset",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-9nycset"
					},
					"Children": [
						{
							"ID": "20210707224540-lgp8339",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-lgp8339"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "静态语言：与动态语言相对应的，运行时结构不可变的语言就是静态语言。如 Java、C、 C++。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-veocv5y",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-veocv5y"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Java 不是动态语言，但 Java 可以称之为“准动态语言”。即 Java 有一定的动 态性，我们可以利用反射机制、字节码操作获得类似动态语言的特性。 Java 的动态性让编程的时候更加灵活!"
				}
			]
		},
		{
			"ID": "20210707224540-lpl3o2r",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-lpl3o2r"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "用处"
				}
			]
		},
		{
			"ID": "20210707224540-0wamkoe",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-0wamkoe"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "反射是框架设计的灵魂。框架：半成品软件。可以在框架的基础上进行软件开发，简化编码"
				}
			]
		},
		{
			"ID": "20210707224540-l15u1l8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-l15u1l8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "通过直接 new 的方式或反射的方式都可以调用公共的结构，开发中到底用那个？"
				}
			]
		},
		{
			"ID": "20210707224540-3u1au18",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-3u1au18"
			},
			"Children": [
				{
					"ID": "20210707224540-cyqr0hm",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-cyqr0hm"
					},
					"Children": [
						{
							"ID": "20210707224540-atqwaky",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-atqwaky"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "推荐 new，除非编译期不确定 new 的对象，如 SpringMVC 中 URL 映射"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-nntx5x4",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707224540-nntx5x4"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "Java 的反射机制"
				}
			]
		},
		{
			"ID": "20210707224540-8bdrvm1",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-8bdrvm1"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "简介 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-4vtokij",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-4vtokij"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Java 反射机制是在"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "运行状态中"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，对于任意一个"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "类"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，都能够"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "获得"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "这个类的"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "所有属性和方法"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "；对于任意一个"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "对象"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，都能够"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "调用"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "它的任意一个"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "属性和方法"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "；"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "能够分析类能力的程序称为反射"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20210707224540-d3h4osl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-d3h4osl"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "加载完类之后，在堆内存的方法区中就产生了一个 Class 类型的对象（一个类只有一个 Class 对象，内部类算多个），这个对象就包含了完整的类的结构信息，我们可以通过这个对象看到原始类的结构，这个对象就像原始类被镜子反射出来一样。"
				}
			]
		},
		{
			"ID": "20210707224540-9lgxo7a",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-9lgxo7a"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "原理 \u0026 过程 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-djht92a",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20210707224540-djht92a"
			},
			"Children": [
				{
					"ID": "20210707224540-e1qkx7m",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20210707224540-e1qkx7m"
					},
					"Children": [
						{
							"ID": "20210707224540-pltl8kg",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-pltl8kg"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "javac"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "命令编译"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": ".java"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "文件，生成一个或多个"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": ".class"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "文件"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-xhwq716",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20210707224540-xhwq716"
					},
					"Children": [
						{
							"ID": "20210707224540-q0y29vb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-q0y29vb"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "JVM 通过类加载器将"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": ".class"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "文件加载到内存中，用"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Class"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "类表示（Java 中万事万物皆对象），可通过 "
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "java"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 命令解释运行"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-tgdr4tv",
					"Type": "NodeListItem",
					"Data": "3",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 3,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mw==",
						"Num": 3
					},
					"Properties": {
						"id": "20210707224540-tgdr4tv"
					},
					"Children": [
						{
							"ID": "20210707224540-jqpay6x",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-jqpay6x"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "得到了这个"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Class"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "类之后，就可以得到"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": ".class"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "文件里面的所有内容"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-u8imbud",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-u8imbud"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "好处"
				}
			]
		},
		{
			"ID": "20210707224540-52mvxck",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-52mvxck"
			},
			"Children": [
				{
					"ID": "20210707224540-lt6pvnj",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-lt6pvnj"
					},
					"Children": [
						{
							"ID": "20210707224540-nm1crfw",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-nm1crfw"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "可以在"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "程序运行过程中，操作这些对象"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。如 IDE 中代码提示"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-2ity0i8",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-2ity0i8"
					},
					"Children": [
						{
							"ID": "20210707224540-n826yxi",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-n826yxi"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "可以"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "解耦，提高程序的可扩展性"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-ifkqklj",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-ifkqklj"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "反射相关的主要 API"
				}
			]
		},
		{
			"ID": "20210707224540-2ykx9zn",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-2ykx9zn"
			},
			"Children": [
				{
					"ID": "20210707224540-3n7mqyo",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-3n7mqyo"
					},
					"Children": [
						{
							"ID": "20210707224540-zewgf5s",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-zewgf5s"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "java.lang.Class"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": ":代表一个类"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-zwhuvr6",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-zwhuvr6"
					},
					"Children": [
						{
							"ID": "20210707224540-rmx8erz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-rmx8erz"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "java.lang.reflect.Field"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": ":代表类的成员变量"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-een44de",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-een44de"
					},
					"Children": [
						{
							"ID": "20210707224540-o8tpbnh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-o8tpbnh"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "java.lang.reflect.Constructor"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": ":代表类的构造器"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-fh5z0ea",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-fh5z0ea"
					},
					"Children": [
						{
							"ID": "20210707224540-5kx2byz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-5kx2byz"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "java.lang.reflect.Method"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": ":代表类的方法"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-8y1i3ni",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707224540-8y1i3ni"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "ClassLoader 类加载器"
				}
			]
		},
		{
			"ID": "20210707224540-bloqees",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-bloqees"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "分类 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-m8fg17m",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-m8fg17m"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "类加载器"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "（负责将"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": ".class"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "文件"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "加载到内存中"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，并为之"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "生成"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "对应的"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Class"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "对象"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "）"
				}
			]
		},
		{
			"ID": "20210707224540-d8712nm",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-d8712nm"
			},
			"Children": [
				{
					"ID": "20210707224540-38txp1e",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-38txp1e"
					},
					"Children": [
						{
							"ID": "20210707224540-rchb2qu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-rchb2qu"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Bootstrap ClassLoader："
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "引导类加载器"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						},
						{
							"ID": "20210707224540-z365ey9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-z365ey9"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "负责 JDK 中"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "jre/lib"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "目录下"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "rt.jar"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "文件中"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "Java 核心类的加载"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，比如 System、String 等"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-3fh3o5o",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-3fh3o5o"
					},
					"Children": [
						{
							"ID": "20210707224540-664po2g",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-664po2g"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Extension ClassLoader："
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "扩展类加载器"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						},
						{
							"ID": "20210707224540-0fk467r",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-0fk467r"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "负责 JDK 中"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "jre/lib/ext"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "目录下或"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "-D java.ext.dirs"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "指定目录下"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "jar 包"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "的加载"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-gn6egv0",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-gn6egv0"
					},
					"Children": [
						{
							"ID": "20210707224540-neaj0sp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-neaj0sp"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "System(Application) ClassLoader："
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "系统类加载器"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						},
						{
							"ID": "20210707224540-u1utbsr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-u1utbsr"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "JVM 启动时，负责"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "java -classpath"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "或"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "-D java.class.path"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "所指目录下的类与 jar 包的加载"
								}
							]
						},
						{
							"ID": "20210707224540-gk1tgpl",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-gk1tgpl"
							},
							"Children": [
								{
									"Type": "NodeImage",
									"Children": [
										{
											"Type": "NodeBang",
											"Data": "!"
										},
										{
											"Type": "NodeOpenBracket",
											"Data": "["
										},
										{
											"Type": "NodeLinkText",
											"Data": "image-20191103231822517"
										},
										{
											"Type": "NodeCloseBracket",
											"Data": "]"
										},
										{
											"Type": "NodeOpenParen",
											"Data": "("
										},
										{
											"Type": "NodeLinkDest",
											"Data": "../assets/image-20191103231822517.png"
										},
										{
											"Type": "NodeCloseParen",
											"Data": ")"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-fjelbk8",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-fjelbk8"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "常用方法"
				}
			]
		},
		{
			"ID": "20210707224540-e3forl8",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-e3forl8"
			},
			"Children": [
				{
					"ID": "20210707224540-5np82s8",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-5np82s8"
					},
					"Children": [
						{
							"ID": "20210707224540-6a1bcub",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-6a1bcub"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "clazz.getClassLoader()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"ID": "20210707224540-57barp2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-57barp2"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "获得类加载器"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-0uvejqo",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-0uvejqo"
					},
					"Children": [
						{
							"ID": "20210707224540-0cafu8l",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-0cafu8l"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "classLoader.getParent()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"ID": "20210707224540-zuvnf48",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-zuvnf48"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "获取类加载器的类加载器"
								}
							]
						},
						{
							"ID": "20210707224540-eec02vn",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "amF2YQ==",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210707224540-eec02vn"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "// 如下在 OpenJDK11 测试\nClassLoader classLoader1 = ReflectTest.class.getClassLoader();\nSystem.out.println(classLoader1);// jdk.internal.loader.ClassLoaders$AppClassLoader@2c13da15\n\nClassLoader classLoader2 = classLoader1.getParent();\nSystem.out.println(classLoader2);// jdk.internal.loader.ClassLoaders$PlatformClassLoader@2d209079\n\nClassLoader classLoader3 = classLoader2.getParent();\nSystem.out.println(classLoader3);// null，Bootstrap ClassLoader 无法获取到\n\n// 在 OpenJDK8 中测试如下\n// sun.misc.Launcher$AppClassLoader@18b4aac2\n// sun.misc.Launcher$ExtClassLoader@6d6f6e28\n// null\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-appwcew",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-appwcew"
					},
					"Children": [
						{
							"ID": "20210707224540-wxma0nv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-wxma0nv"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "classLoader.getResource(name)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"ID": "20210707224540-0y3jy2z",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "amF2YQ==",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210707224540-0y3jy2z"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "URL url = clazz.getResource(\"test.txt\")；\nString path = url.getPath();\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-0al575q",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-0al575q"
					},
					"Children": [
						{
							"ID": "20210707224540-hqvbx9a",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-hqvbx9a"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "InputStream classLoader.getResourceAsStream"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "就是上面的进行了封装简化后的版本"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-fmu9img",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-fmu9img"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "::: tip"
				}
			]
		},
		{
			"ID": "20210707224540-piwjte5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-piwjte5"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "读取配置文件方式："
				}
			]
		},
		{
			"ID": "20210707224540-e0cvdu1",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-e0cvdu1"
			},
			"Children": [
				{
					"ID": "20210707224540-3es7ccr",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-3es7ccr"
					},
					"Children": [
						{
							"ID": "20210707224540-rtihpfj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-rtihpfj"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "IDEA 中"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "@Test"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " "
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "相对于 Module"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，若是 "
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "main"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 方法则"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "相对于 Project"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-u47ssok",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-u47ssok"
					},
					"Children": [
						{
							"ID": "20210707224540-3lzel6n",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-3lzel6n"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "ClassLoader 的 getResource 或 getResourceAsStream 方法获取相对 classes（out 或 src）下的任何 URL 资源，不能以"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "/"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "开头"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-949z2f3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-949z2f3"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": ":::"
				}
			]
		},
		{
			"ID": "20210707224540-h1jyac9",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707224540-h1jyac9"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "类的加载过程 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-ijf3o5f",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-ijf3o5f"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当程序要使用某个类时，如果该类还未被加载到内存中，则系统会通过加载，连接，初始化三步来实现对这个类进行初始化"
				}
			]
		},
		{
			"ID": "20210707224540-x6r09ue",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-x6r09ue"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "加载"
				}
			]
		},
		{
			"ID": "20210707224540-qpekd63",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-qpekd63"
			},
			"Children": [
				{
					"ID": "20210707224540-3xio0ag",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-3xio0ag"
					},
					"Children": [
						{
							"ID": "20210707224540-6ic49ar",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-6ic49ar"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "将"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": ".class"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "文件字节码内容加载到内存中，并将这些静态数据转换成"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "方法区"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "的运行时数据结构，然后生成一个代表这个类的"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "java.lang.Class"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "对象，作为"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "方法区"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "中类数据的访问入口（即引用地址）。所有需要访问和使用类数据只能通过这个"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Class"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "对象。这个加载的过程需要类加载器参与。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-sswrugu",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-sswrugu"
					},
					"Children": [
						{
							"ID": "20210707224540-uhb4ulj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-uhb4ulj"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "类缓存：标准的 JavaSE 类加载器可以按要求查找类，但一旦某个类被加载到类加载器中，它将维持加载(缓存)一段时间。不过 JVM 垃圾回收机制可以回收这些 Class 对象。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-hhcwuic",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-hhcwuic"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "连接"
				}
			]
		},
		{
			"ID": "20210707224540-uz4d8oq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-uz4d8oq"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "将 Java 类的二进制代码合并到 JVM 的运行状态之中的过程"
				}
			]
		},
		{
			"ID": "20210707224540-0l4udwz",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-0l4udwz"
			},
			"Children": [
				{
					"ID": "20210707224540-itjijku",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-itjijku"
					},
					"Children": [
						{
							"ID": "20210707224540-sjm7zzf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-sjm7zzf"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "验证：确保加载的类信息符合 JVM 规范，例如以 cafe 开头，没有安全方面的问题"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-qjwx8gy",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-qjwx8gy"
					},
					"Children": [
						{
							"ID": "20210707224540-49bbqcx",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-49bbqcx"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "准备：正式为类变量(static)分配内存并设置"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "类变量默认初始值"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "的阶段，这些内存 都将在方法区中进行分配。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-ypgiq1x",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-ypgiq1x"
					},
					"Children": [
						{
							"ID": "20210707224540-rdj4sds",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-rdj4sds"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "解析：虚拟机常量池内的符号引用(常量名)替换为直接引用(地址)的过程"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-dj8e3o9",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-dj8e3o9"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "初始化"
				}
			]
		},
		{
			"ID": "20210707224540-8ctioko",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-8ctioko"
			},
			"Children": [
				{
					"ID": "20210707224540-1mf15pr",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-1mf15pr"
					},
					"Children": [
						{
							"ID": "20210707224540-tr41wyu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-tr41wyu"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "执行"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "类构造器"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "\u003cclinit\u003e()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "方法的过程。"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "类构造器"
										},
										{
											"Type": "NodeCodeSpan",
											"CodeMarkerLen": 1,
											"Children": [
												{
													"Type": "NodeCodeSpanOpenMarker",
													"Data": "`"
												},
												{
													"Type": "NodeCodeSpanContent",
													"Data": "\u003cclinit\u003e()"
												},
												{
													"Type": "NodeCodeSpanCloseMarker",
													"Data": "`"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "方法是由编译期自动收集类中所有类变量的赋值动作和静态代码块中的语句合并产生的"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。(类构造器是构造类信息的，不是构造该类对象的构造器)。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-beau0dm",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-beau0dm"
					},
					"Children": [
						{
							"ID": "20210707224540-jr0mrel",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-jr0mrel"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "当初始化一个类的时候，如果发现其父类还没有进行初始化，则需要先触发其父类的初始化。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-bxkyp1n",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-bxkyp1n"
					},
					"Children": [
						{
							"ID": "20210707224540-zmmss1r",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-zmmss1r"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "虚拟机会保证一个类的"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "\u003cclinit\u003e()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "方法在多线程环境中被正确加锁和同步。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-6dyk9qg",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 42,
				"Padding": 2,
				"Marker": "Kg==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-6dyk9qg"
			},
			"Children": [
				{
					"ID": "20210707224540-53fnfhq",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-53fnfhq"
					},
					"Children": [
						{
							"ID": "20210707224540-yhblzsn",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-yhblzsn"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "类初始化时机"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						},
						{
							"ID": "20210707224540-egncgd0",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707224540-egncgd0"
							},
							"Children": [
								{
									"ID": "20210707224540-cqu15c4",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707224540-cqu15c4"
									},
									"Children": [
										{
											"ID": "20210707224540-qs5ire1",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-qs5ire1"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "类的主动引用（一定会发生类的初始化）"
												}
											]
										},
										{
											"ID": "20210707224540-mdg1l4d",
											"Type": "NodeList",
											"ListData": {
												"Tight": true,
												"BulletChar": 45,
												"Padding": 2,
												"Marker": "LQ==",
												"Num": -1
											},
											"Properties": {
												"id": "20210707224540-mdg1l4d"
											},
											"Children": [
												{
													"ID": "20210707224540-3iggl45",
													"Type": "NodeListItem",
													"Data": "-",
													"ListData": {
														"Tight": true,
														"BulletChar": 45,
														"Padding": 2,
														"Marker": "LQ==",
														"Num": -1
													},
													"Properties": {
														"id": "20210707224540-3iggl45"
													},
													"Children": [
														{
															"ID": "20210707224540-cxvi5n7",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20210707224540-cxvi5n7"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "直接使用 java.exe 命令来运行某个主类，当虚拟机启动，先初始化"
																},
																{
																	"Type": "NodeCodeSpan",
																	"CodeMarkerLen": 1,
																	"Children": [
																		{
																			"Type": "NodeCodeSpanOpenMarker",
																			"Data": "`"
																		},
																		{
																			"Type": "NodeCodeSpanContent",
																			"Data": "main"
																		},
																		{
																			"Type": "NodeCodeSpanCloseMarker",
																			"Data": "`"
																		}
																	]
																},
																{
																	"Type": "NodeText",
																	"Data": "方法所在的类"
																}
															]
														}
													]
												},
												{
													"ID": "20210707224540-mbcxc5w",
													"Type": "NodeListItem",
													"Data": "-",
													"ListData": {
														"Tight": true,
														"BulletChar": 45,
														"Padding": 2,
														"Marker": "LQ==",
														"Num": -1
													},
													"Properties": {
														"id": "20210707224540-mbcxc5w"
													},
													"Children": [
														{
															"ID": "20210707224540-nmra4wo",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20210707224540-nmra4wo"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "new 一个类的对象（创建类的实例）"
																}
															]
														}
													]
												},
												{
													"ID": "20210707224540-0nj32jw",
													"Type": "NodeListItem",
													"Data": "-",
													"ListData": {
														"Tight": true,
														"BulletChar": 45,
														"Padding": 2,
														"Marker": "LQ==",
														"Num": -1
													},
													"Properties": {
														"id": "20210707224540-0nj32jw"
													},
													"Children": [
														{
															"ID": "20210707224540-fnj9p95",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20210707224540-fnj9p95"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "调用类的静态成员（除了 final 常量），或者为静态变量赋值"
																}
															]
														}
													]
												},
												{
													"ID": "20210707224540-d15mlue",
													"Type": "NodeListItem",
													"Data": "-",
													"ListData": {
														"Tight": true,
														"BulletChar": 45,
														"Padding": 2,
														"Marker": "LQ==",
														"Num": -1
													},
													"Properties": {
														"id": "20210707224540-d15mlue"
													},
													"Children": [
														{
															"ID": "20210707224540-5ez5nat",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20210707224540-5ez5nat"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "调用类的静态方法"
																}
															]
														}
													]
												},
												{
													"ID": "20210707224540-3vzh510",
													"Type": "NodeListItem",
													"Data": "-",
													"ListData": {
														"Tight": true,
														"BulletChar": 45,
														"Padding": 2,
														"Marker": "LQ==",
														"Num": -1
													},
													"Properties": {
														"id": "20210707224540-3vzh510"
													},
													"Children": [
														{
															"ID": "20210707224540-dtiidgn",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20210707224540-dtiidgn"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "使用"
																},
																{
																	"Type": "NodeCodeSpan",
																	"CodeMarkerLen": 1,
																	"Children": [
																		{
																			"Type": "NodeCodeSpanOpenMarker",
																			"Data": "`"
																		},
																		{
																			"Type": "NodeCodeSpanContent",
																			"Data": "java.lang.reflect"
																		},
																		{
																			"Type": "NodeCodeSpanCloseMarker",
																			"Data": "`"
																		}
																	]
																},
																{
																	"Type": "NodeText",
																	"Data": "包的方法来强制创建某个类或接口对应的"
																},
																{
																	"Type": "NodeCodeSpan",
																	"CodeMarkerLen": 1,
																	"Children": [
																		{
																			"Type": "NodeCodeSpanOpenMarker",
																			"Data": "`"
																		},
																		{
																			"Type": "NodeCodeSpanContent",
																			"Data": "java.lang.Class"
																		},
																		{
																			"Type": "NodeCodeSpanCloseMarker",
																			"Data": "`"
																		}
																	]
																},
																{
																	"Type": "NodeText",
																	"Data": "对象"
																}
															]
														}
													]
												},
												{
													"ID": "20210707224540-dvrm4ep",
													"Type": "NodeListItem",
													"Data": "-",
													"ListData": {
														"Tight": true,
														"BulletChar": 45,
														"Padding": 2,
														"Marker": "LQ==",
														"Num": -1
													},
													"Properties": {
														"id": "20210707224540-dvrm4ep"
													},
													"Children": [
														{
															"ID": "20210707224540-ruaxid9",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20210707224540-ruaxid9"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "当初始化一个类，如果其父类没有被初始化，则先会初始化它的父类"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20210707224540-5b8bc6d",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707224540-5b8bc6d"
									},
									"Children": [
										{
											"ID": "20210707224540-gtz85xc",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-gtz85xc"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "类的被动引用（不会发生类的初始化）"
												}
											]
										},
										{
											"ID": "20210707224540-kglyza6",
											"Type": "NodeList",
											"ListData": {
												"Tight": true,
												"BulletChar": 45,
												"Padding": 2,
												"Marker": "LQ==",
												"Num": -1
											},
											"Properties": {
												"id": "20210707224540-kglyza6"
											},
											"Children": [
												{
													"ID": "20210707224540-7ddf7eq",
													"Type": "NodeListItem",
													"Data": "-",
													"ListData": {
														"Tight": true,
														"BulletChar": 45,
														"Padding": 2,
														"Marker": "LQ==",
														"Num": -1
													},
													"Properties": {
														"id": "20210707224540-7ddf7eq"
													},
													"Children": [
														{
															"ID": "20210707224540-co3327o",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20210707224540-co3327o"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "当访问一个静态域时，"
																},
																{
																	"Type": "NodeStrong",
																	"Children": [
																		{
																			"Type": "NodeStrongA6kOpenMarker",
																			"Data": "**"
																		},
																		{
																			"Type": "NodeText",
																			"Data": "只有真正声明这个域的类才会被初始化"
																		},
																		{
																			"Type": "NodeStrongA6kCloseMarker",
																			"Data": "**"
																		}
																	]
																},
																{
																	"Type": "NodeSoftBreak",
																	"Data": "\n"
																},
																{
																	"Type": "NodeText",
																	"Data": "当通过子类引用父类的静态变量，不会导致子类初始化"
																}
															]
														}
													]
												},
												{
													"ID": "20210707224540-xqihbrw",
													"Type": "NodeListItem",
													"Data": "-",
													"ListData": {
														"Tight": true,
														"BulletChar": 45,
														"Padding": 2,
														"Marker": "LQ==",
														"Num": -1
													},
													"Properties": {
														"id": "20210707224540-xqihbrw"
													},
													"Children": [
														{
															"ID": "20210707224540-2yj3tkx",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20210707224540-2yj3tkx"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "通过数组定义类引用，不会触发此类的初始化"
																}
															]
														}
													]
												},
												{
													"ID": "20210707224540-1ro30sd",
													"Type": "NodeListItem",
													"Data": "-",
													"ListData": {
														"Tight": true,
														"BulletChar": 45,
														"Padding": 2,
														"Marker": "LQ==",
														"Num": -1
													},
													"Properties": {
														"id": "20210707224540-1ro30sd"
													},
													"Children": [
														{
															"ID": "20210707224540-allxsqv",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20210707224540-allxsqv"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "引用常量不会触发此类的初始化（常量在链接阶段就存入调用类的常量池中了）"
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-wg8b4yn",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707224540-wg8b4yn"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "Class 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-lxpc8za",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-lxpc8za"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "获取字节码文件的"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Class"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "对象 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-siy7img",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-siy7img"
			},
			"Children": [
				{
					"ID": "20210707224540-jvxqs6b",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-jvxqs6b"
					},
					"Children": [
						{
							"ID": "20210707224540-23w975m",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-23w975m"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Calss\u003cStudent\u003e c = Student.class"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "通过"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "类名"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "得到。多用于参数传递"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-e4tu7mc",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-e4tu7mc"
					},
					"Children": [
						{
							"ID": "20210707224540-4y9s6he",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-4y9s6he"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Class\u003cStudent\u003e c = stu.getClass()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "通过"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "对象"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "得到，Object 类中的方法。多用于对象获取字节码"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-lfi9q4c",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-lfi9q4c"
					},
					"Children": [
						{
							"ID": "20210707224540-4p1bhp4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-4p1bhp4"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Class\u003cStudent\u003e c = Class.forName(String name)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：包括包名的全类名。多用于配置文件"
								}
							]
						},
						{
							"ID": "20210707224540-9hj59c8",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707224540-9hj59c8"
							},
							"Children": [
								{
									"ID": "20210707224540-qjfjiaj",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707224540-qjfjiaj"
									},
									"Children": [
										{
											"ID": "20210707224540-fmvusit",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-fmvusit"
											},
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "String getName();"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "获取全类名"
												}
											]
										}
									]
								},
								{
									"ID": "20210707224540-ksfje3v",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707224540-ksfje3v"
									},
									"Children": [
										{
											"ID": "20210707224540-x9moj8f",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-x9moj8f"
											},
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "String getPackageName();"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "获取包名"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-nj0rl8l",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-nj0rl8l"
					},
					"Children": [
						{
							"ID": "20210707224540-un0w41o",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-un0w41o"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Class\u003cStudent\u003e c = clazz.getClassLoader().loadClass(String name)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 类加载器"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-pd2tjel",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-pd2tjel"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "同一个字节码文件"
						},
						{
							"Type": "NodeCodeSpan",
							"CodeMarkerLen": 1,
							"Children": [
								{
									"Type": "NodeCodeSpanOpenMarker",
									"Data": "`"
								},
								{
									"Type": "NodeCodeSpanContent",
									"Data": "*.class"
								},
								{
									"Type": "NodeCodeSpanCloseMarker",
									"Data": "`"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": "在一次程序运行过程中只会被加载一次，以上方式获取的"
						},
						{
							"Type": "NodeCodeSpan",
							"CodeMarkerLen": 1,
							"Children": [
								{
									"Type": "NodeCodeSpanOpenMarker",
									"Data": "`"
								},
								{
									"Type": "NodeCodeSpanContent",
									"Data": "Class"
								},
								{
									"Type": "NodeCodeSpanCloseMarker",
									"Data": "`"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": "对象都是同一个。"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-hrq2l0a",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-hrq2l0a"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "哪些类型可以有 "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Class"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 对象 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-4lqua1l",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-4lqua1l"
			},
			"Children": [
				{
					"ID": "20210707224540-gbr8sas",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-gbr8sas"
					},
					"Children": [
						{
							"ID": "20210707224540-1ikl831",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-1ikl831"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "class：外部类，成员（成员内部类，静态内部类），局部内部类，匿名内部类，如"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Object.class"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-zpp4rie",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-zpp4rie"
					},
					"Children": [
						{
							"ID": "20210707224540-kwjlkcp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-kwjlkcp"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "interface：接口，如"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Comparable.class"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-6qyegj6",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-6qyegj6"
					},
					"Children": [
						{
							"ID": "20210707224540-hr2s1ov",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-hr2s1ov"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Array：数组，如"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "int[][].class"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。🔥"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-i8qjmos",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-i8qjmos"
					},
					"Children": [
						{
							"ID": "20210707224540-0qf8tdv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-0qf8tdv"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Enum：枚举，如"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "ElementType.class"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-qfa7smy",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-qfa7smy"
					},
					"Children": [
						{
							"ID": "20210707224540-g5kov91",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-g5kov91"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Annotation：注解@interface，如"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Override.class"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-wwz92br",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-wwz92br"
					},
					"Children": [
						{
							"ID": "20210707224540-6kbgtim",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-6kbgtim"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "primitive type：基本数据类型，如"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "int.class"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-f9lk3k0",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-f9lk3k0"
					},
					"Children": [
						{
							"ID": "20210707224540-feaordm",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-feaordm"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "void：如"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "void.class"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-9gz97zh",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-9gz97zh"
					},
					"Children": [
						{
							"ID": "20210707224540-l4so5mg",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-l4so5mg"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Class：如"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Class.class"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "本身"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-u9j9kcm",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-u9j9kcm"
					},
					"Children": [
						{
							"ID": "20210707224540-uoay0np",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-uoay0np"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "泛型的 Class 对象是什么？"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 🔥"
								}
							]
						},
						{
							"ID": "20210707224540-aq2il6c",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-aq2il6c"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "首先要明确泛型仅存在于编译时期，反射存在于运行时期，在"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "运行时泛型已经被转为 Object 或其他的类型"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						},
						{
							"ID": "20210707224540-tzkf8o9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-tzkf8o9"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "若参数为："
								}
							]
						},
						{
							"ID": "20210707224540-lwfi4n2",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "amF2YQ==",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210707224540-lwfi4n2"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "public static \u003cE extends Comparable\u003cE\u003e\u003e void sort(E[] arr)\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						},
						{
							"ID": "20210707224540-ewo6o9r",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-ewo6o9r"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "则最终转为"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Comparable[].class"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "类型"
								}
							]
						},
						{
							"ID": "20210707224540-t0mnhd5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-t0mnhd5"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "若参数为："
								}
							]
						},
						{
							"ID": "20210707224540-e1av954",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "amF2YQ==",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210707224540-e1av954"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "public static \u003cE\u003e void sort(E[] arr, Comparator\u003cE\u003e comparator)\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						},
						{
							"ID": "20210707224540-7uzn306",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-7uzn306"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "则最终转为"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Object[].class"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "和"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Comparator.class"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "类型（这里是俩参数）"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-jqc30l2",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-jqc30l2"
					},
					"Children": [
						{
							"ID": "20210707224540-s9yox0n",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-s9yox0n"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "看下面代码。结论：只要数组的"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "元素类型"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "和"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "纬度"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "一样，就是同一个 Class"
								}
							]
						},
						{
							"ID": "20210707224540-teb2ir8",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "amF2YQ==",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210707224540-teb2ir8"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "int[] a = new int[10];\nint[] b = new int[100];\n\nSystem.out.println(a.getClass());// class [I\nSystem.out.println(b.getClass());// class [I\n\nSystem.out.println(a.getClass() == b.getClass());// true\nSystem.out.println(a.getClass() == int[].class);// true\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-cfrm70m",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-cfrm70m"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "分析类："
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "域(成员变量)"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "构造器"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "、方法 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-ao27cdk",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-ao27cdk"
			},
			"Children": [
				{
					"ID": "20210707224540-22holv6",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-22holv6"
					},
					"Children": [
						{
							"ID": "20210707224540-la554kf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-la554kf"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "不带 Declare"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "返回类提供的"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "public"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "域、方法和构造器的"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "数组"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，包括"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "超类的公有成员"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-res899t",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-res899t"
					},
					"Children": [
						{
							"ID": "20210707224540-6nvmmbg",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-6nvmmbg"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "带 Declare"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "返回类提供的"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "全部"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "域、方法和构造器，"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "包括私有和保护成员"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，但不包括超类的成员。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-l7tv6nj",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-l7tv6nj"
					},
					"Children": [
						{
							"ID": "20210707224540-l6rwfvd",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-l6rwfvd"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "操作私有成员时"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "setAccessible(flag)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "中设置为 true"
								}
							]
						},
						{
							"ID": "20210707224540-d7klkte",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "amF2YQ==",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210707224540-d7klkte"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "//若类中没有域(成员变量)或者Class对象描述的是基本类型或数组类型，则返回一个长度为0的数组\nField get(Declare)Field(String name)\nField[] get(Declare)Fields()\n\nMethod get(Declare)Method(String name, Class\u003c?\u003e... parameterTypes)\nMethod[] get(Declare)Methods()\n\n//使用Class对象的newInstance()来创建！但该类必须提供空参构造器，且权限必须够，通常为 public。Java9 及之后过时\nPerson o = clazz.getInstance();\n//可以通过Constructor对象的newInstance(可传递参数列表)来创建对象；\nConstructor\u003cT\u003e get(Declare)Construcotr(Class\u003c?\u003e... parameterTypes)//返回一个构造器\nConstructor[] get(Declare)Construcotrs()\n//以上其底层都是调用构造器来创建对象\n\nsetAccessible(boolean b)//为以上三种反射对象设置可访问标志，true为屏蔽java语言访问检查\n\n\n// ============================================\n// 单个构造,无参构造可不带.class;传递参数类型\nConstructor\u003cPerson\u003e con = clazz.getConstructor(String.class, int.class, String.class);\nPerson obj = con.newInstance(\"zhangsan\", 33, \"beijing\");\n//Object o = c.newInstance();//若调用空参构造可以直接使用Class类的newInstance()方法。在Java9开始弃用\nString name = con.getName();//获取构造方法名称\n\n// 单个域、属性\nField field = clazz.getDeclaredField(\"name\");\nfield.setAccessible(true);\nfield.set(obj, \"lisi\");//set\nObject objField = field.get(obj);//get\nString name = field.getName();//获取域名即成员变量名\nSystem.out.println(objField);\n\n// 单个方法,不带参可不写.class;传递参数类型\nMethod method = clazz.getDeclaredMethod(\"add\", int.class, int.class);\nObject objMethod = method.invoke(obj, 10, 20);\n//操作静态方法时，第一个参数为null，不需要实例\nObject objMethod = method.invoke(null, 10, 20);\n//获取方法名\nString name = method.getName();\nSystem.out.println(objMethod);\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-tx5ykpm",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-tx5ykpm"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "获取运行时类的指定结构 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-ux276v5",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210707224540-ux276v5"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "调用指定方法"
				}
			]
		},
		{
			"ID": "20210707224540-2aq2ja3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-2aq2ja3"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "通过反射，调用类中的方法，通过 Method 类完成。步骤:"
				}
			]
		},
		{
			"ID": "20210707224540-ce8d9b7",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20210707224540-ce8d9b7"
			},
			"Children": [
				{
					"ID": "20210707224540-s795qyg",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20210707224540-s795qyg"
					},
					"Children": [
						{
							"ID": "20210707224540-azwnacz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-azwnacz"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "通过"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Class"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "类的"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "getMethod(String name,Class...parameterTypes)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "方法取得 一个"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Method"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "对象，并设置此方法操作时所需要的参数类型。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-y6nac53",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20210707224540-y6nac53"
					},
					"Children": [
						{
							"ID": "20210707224540-38xoya6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-38xoya6"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "之后使用"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Object invoke(Object obj, Object[] args)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "进行调用，并向方法中传递要设置的 obj 对象的参数信息。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-5rvn42j",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-5rvn42j"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Object invoke(Object obj, Object ... args)"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-nwadab7",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-nwadab7"
			},
			"Children": [
				{
					"ID": "20210707224540-xl9bqcp",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-xl9bqcp"
					},
					"Children": [
						{
							"ID": "20210707224540-1hqza2c",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-1hqza2c"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Object"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 对应原方法的返回值，若原方法无返回值，此时返回"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "null"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-a1ioave",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-a1ioave"
					},
					"Children": [
						{
							"ID": "20210707224540-8w0mi69",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-8w0mi69"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "若原方法若为静态方法，此时形参"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Object obj"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "可为"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "null"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，即不需要实例对象"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-b51lhcw",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-b51lhcw"
					},
					"Children": [
						{
							"ID": "20210707224540-ibq3zu8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-ibq3zu8"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "若原方法形参列表为空，则"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Object[] args"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "为"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "null"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-1g1rp8p",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-1g1rp8p"
					},
					"Children": [
						{
							"ID": "20210707224540-vm99rwd",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-vm99rwd"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "若原方法声明为"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "private"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，则需要在调用此"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "invoke()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "方法前，显式调用方法对象的"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "setAccessible(true)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "方法，将可访问"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "private"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "的方法。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-rnlxeyr",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210707224540-rnlxeyr"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "调用指定属性"
				}
			]
		},
		{
			"ID": "20210707224540-kta3ciu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-kta3ciu"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在反射机制中，可以直接通过 Field 类操作类中的属性，通过 Field 类提供的 set()和 get()方法就可以完成设置和取得属性内容的操作。"
				}
			]
		},
		{
			"ID": "20210707224540-csmgkvd",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-csmgkvd"
			},
			"Children": [
				{
					"ID": "20210707224540-wpb999h",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-wpb999h"
					},
					"Children": [
						{
							"ID": "20210707224540-rnwhl2c",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-rnwhl2c"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "public Field getField(String name)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"ID": "20210707224540-z2b7dkh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-z2b7dkh"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "返回此"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Class"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "对象表示的类或接口的指定的"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "public"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "的"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Field"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-zi67w9o",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-zi67w9o"
					},
					"Children": [
						{
							"ID": "20210707224540-6f3v0dl",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-6f3v0dl"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "public Field getDeclaredField(String name)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"ID": "20210707224540-l0ujf08",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-l0ujf08"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "返回此"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Class"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "对象表示的类或接口的指定的"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Field"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-8xaa1aq",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-8xaa1aq"
					},
					"Children": [
						{
							"ID": "20210707224540-xwzo06g",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-xwzo06g"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在 Field 中："
								}
							]
						},
						{
							"ID": "20210707224540-buvtmev",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707224540-buvtmev"
							},
							"Children": [
								{
									"ID": "20210707224540-mb0itu0",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707224540-mb0itu0"
									},
									"Children": [
										{
											"ID": "20210707224540-ippo9xa",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-ippo9xa"
											},
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "public Object get(Object obj)"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": " 取得指定对象"
												},
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "obj"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "上此"
												},
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "Field"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "的属性内容"
												}
											]
										}
									]
								},
								{
									"ID": "20210707224540-6jjsx5k",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707224540-6jjsx5k"
									},
									"Children": [
										{
											"ID": "20210707224540-3ed0euo",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-3ed0euo"
											},
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "public void set(Object obj,Object value)"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": " 设置指定对象"
												},
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "obj"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "上此"
												},
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "Field"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "的属性内容"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-dbam27e",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210707224540-dbam27e"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "关于 setAccessible 方法的使用"
				}
			]
		},
		{
			"ID": "20210707224540-5t0whwn",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-5t0whwn"
			},
			"Children": [
				{
					"ID": "20210707224540-bmcny8b",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-bmcny8b"
					},
					"Children": [
						{
							"ID": "20210707224540-30o2x6y",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-30o2x6y"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Method"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "和"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Field"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "、"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Constructor"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "对象都有"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "setAccessible()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "方法。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-0uazw7o",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-0uazw7o"
					},
					"Children": [
						{
							"ID": "20210707224540-yt4oayi",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-yt4oayi"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "setAccessible"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "启动和禁用访问安全检查的开关。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-idohp6n",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-idohp6n"
					},
					"Children": [
						{
							"ID": "20210707224540-fdl8b6u",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-fdl8b6u"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "参数值为"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "true"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "则指示反射的对象在使用时应该取消 Java 语言访问检查。"
								}
							]
						},
						{
							"ID": "20210707224540-2u46fxf",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707224540-2u46fxf"
							},
							"Children": [
								{
									"ID": "20210707224540-f4mvklm",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707224540-f4mvklm"
									},
									"Children": [
										{
											"ID": "20210707224540-tmj9937",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-tmj9937"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "提高反射的效率。如果代码中必须用反射，而该句代码需要频繁的被调用，那么请设置为 true。"
												}
											]
										}
									]
								},
								{
									"ID": "20210707224540-2l2cvna",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707224540-2l2cvna"
									},
									"Children": [
										{
											"ID": "20210707224540-62edhz3",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-62edhz3"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "使得原本无法访问的私有成员也可以访问"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-qxfe5y7",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-qxfe5y7"
					},
					"Children": [
						{
							"ID": "20210707224540-m0lcipk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-m0lcipk"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "参数值为"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "false"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "则指示反射的对象应该实施 Java 语言访问检查。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-k7879w0",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-k7879w0"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "准备的类"
				}
			]
		},
		{
			"ID": "20210707224540-5epd5x6",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-5epd5x6"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public class Creature\u003cT\u003e implements Serializable {\n    private char gender;\n    public double weight;\n\n    private void breath() {\n        System.out.println(\"生物呼吸\");\n    }\n\n    public void eat() {\n        System.out.println(\"生物吃东西\");\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-fz23z17",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-fz23z17"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@Target({TYPE, FIELD, METHOD, PARAMETER, CONSTRUCTOR, LOCAL_VARIABLE})\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface MyAnnotation {\n    String value() default \"hello\";\n\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-m1uoy5m",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-m1uoy5m"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public interface MyInterface {\n    void info();\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-k52ptrf",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-k52ptrf"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@MyAnnotation(value = \"hi\")\npublic class Person extends Creature\u003cString\u003e implements Comparable\u003cString\u003e, MyInterface {\n\n    private String name;\n    int age;\n    public int id;\n\n    public Person() {\n    }\n\n    Person(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    @MyAnnotation(value = \"abc\")\n    private Person(String name) {\n        this.name = name;\n    }\n\n    @MyAnnotation\n    private String show(String nation) {\n        System.out.println(\"我的国籍是：\" + nation);\n        return nation;\n    }\n\n    public String display(String interests, int age) throws NullPointerException, ClassCastException {\n        return interests + age;\n    }\n\n    @Override\n    public void info() {\n        System.out.println(\"我是一个人\");\n    }\n\n    @Override\n    public int compareTo(String o) {\n        return 0;\n    }\n\n    private static void showDesc() {\n        System.out.println(\"我是一个可爱的人\");\n    }\n\n    @Override\n    public String toString() {\n        return \"Person{\" +\n                \"name='\" + name + '\\'' +\n                \", age=\" + age +\n                \", id=\" + id +\n                '}';\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-gu81mox",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-gu81mox"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "Field"
				}
			]
		},
		{
			"ID": "20210707224540-jfbf3vi",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-jfbf3vi"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public class FieldTest {\n\n    /**\n     * 获取 Field\n     */\n    @Test\n    public void test1(){\n\n        Class\u003cPerson\u003e clazz = Person.class;\n\n        // getFields():获取当前运行时类及其父类中声明为public访问权限的属性\n        Field[] fields = clazz.getFields();\n        System.out.println(Arrays.toString(fields));\n        // [public int pojo.Person.id, public double pojo.Creature.weight]\n\n        // getDeclaredFields():获取当前运行时类中声明的所有属性。（不包含父类中声明的属性）\n        Field[] declaredFields = clazz.getDeclaredFields();\n        System.out.println(Arrays.toString(declaredFields));\n        // [private java.lang.String pojo.Person.name, int pojo.Person.age, protected java.lang.String pojo.Person.sex, public int pojo.Person.id]\n\n    }\n\n    /**\n     * 权限修饰符  数据类型 变量名\n     */\n    @Test\n    public void test2(){\n        Class\u003cPerson\u003e clazz = Person.class;\n\n        Field[] declaredFields = clazz.getDeclaredFields();\n        for(Field f : declaredFields){\n\n            //1.权限修饰符\n            int modifier = f.getModifiers();// 可在 Modifier 类中找到 int 对应的权限修饰符\n            System.out.print(Modifier.toString(modifier) + \"\\t\");// 这样也可以获取权限修饰符名称\n\n            //2.数据类型\n            Class\u003c?\u003e type = f.getType();\n            System.out.print(type.getName() + \"\\t\");\n\n            //3.变量名\n            String fName = f.getName();\n            System.out.print(fName);\n            System.out.println();\n        }\n        // private      java.lang.String\tname\n        //              int\tage\n        // protected    java.lang.String\tsex\n        // public       int                 id\n    }\n\n\n    /**\n     * 操作\n     */\n    @Test\n    public void test3() throws Exception {\n        Class\u003cPerson\u003e clazz = Person.class;\n\n        Constructor\u003cPerson\u003e personConstructor = clazz.getDeclaredConstructor(String.class, int.class);\n        personConstructor.setAccessible(true);\n        Person person = personConstructor.newInstance(\"conanan\", 22);\n\n        Field nameField = clazz.getDeclaredField(\"name\");\n        nameField.setAccessible(true);\n        String name = (String) nameField.get(person);\n        System.out.println(name);// conanan\n\n        nameField.set(person, \"conan\");\n        name = (String) nameField.get(person);\n        System.out.println(name);// conan\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-fm0ci2f",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-fm0ci2f"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "Method"
				}
			]
		},
		{
			"ID": "20210707224540-sxd9lgi",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-sxd9lgi"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public class MethodTest {\n\n    /**\n     * 获取方法\n     */\n    @Test\n    public void test1() {\n\n        Class\u003cPerson\u003e clazz = Person.class;\n\n        // getMethods():获取当前运行时类及其所有父类中声明为public权限的方法\n        Method[] methods = clazz.getMethods();\n        System.out.println(Arrays.toString(methods));\n\n        // getDeclaredMethods():获取当前运行时类中声明的所有方法。（不包含父类中声明的方法）\n        Method[] declaredMethods = clazz.getDeclaredMethods();\n        System.out.println(Arrays.toString(declaredMethods));\n\n    }\n\n\n    /**\n     * @Xxxx 权限修饰符  返回值类型  方法名(参数类型1 形参名1,...) throws XxxException{}\n     */\n    @Test\n    public void test2() {\n        Class\u003cPerson\u003e clazz = Person.class;\n        Method[] declaredMethods = clazz.getDeclaredMethods();\n        for (Method m : declaredMethods) {\n            //1.获取方法声明的注解\n            Annotation[] annos = m.getAnnotations();\n            Arrays.stream(annos).forEach(System.out::println);\n\n            //2.权限修饰符\n            System.out.print(Modifier.toString(m.getModifiers()) + \"\\t\");\n\n            //3.返回值类型\n            System.out.print(m.getReturnType().getName() + \"\\t\");\n\n            //4.方法名\n            System.out.print(m.getName());\n            System.out.print(\"(\");\n\n            //5.形参列表\n            Class\u003c?\u003e[] parameterTypes = m.getParameterTypes();\n            if (parameterTypes.length \u003e 0){\n                for (int i = 0; i \u003c parameterTypes.length; i++) {\n\n                    if (i == parameterTypes.length - 1) {\n                        System.out.print(parameterTypes[i].getName() + \" args_\" + i);\n                        break;\n                    }\n\n                    System.out.print(parameterTypes[i].getName() + \" args_\" + i + \", \");\n                }\n            }\n            System.out.print(\")\");\n\n            //6.抛出的异常\n            Class\u003c?\u003e[] exceptionTypes = m.getExceptionTypes();\n            if (exceptionTypes.length \u003e 0) {\n                System.out.print(\"throws \");\n                for (int i = 0; i \u003c exceptionTypes.length; i++) {\n                    if (i == exceptionTypes.length - 1) {\n                        System.out.print(exceptionTypes[i].getName());\n                        break;\n                    }\n                    System.out.print(exceptionTypes[i].getName() + \", \");\n                }\n            }\n            System.out.println();\n        }\n    }\n\n\n    /**\n     * 操作\n     */\n    @Test\n    public void test3() throws Exception {\n        Class\u003cPerson\u003e clazz = Person.class;\n        Constructor\u003cPerson\u003e personConstructor = clazz.getDeclaredConstructor(String.class, int.class);\n        personConstructor.setAccessible(true);\n        Person person = personConstructor.newInstance(\"conanan\", 22);\n\n        // private 方法\n        // 泛型 和 数组 参数注意怎么写！\n        Method show = clazz.getDeclaredMethod(\"show\", String.class);\n        show.setAccessible(true);\n        String  returnValue = (String) show.invoke(person, \"中国\");\n        System.out.println(returnValue);// 中国\n\n\n        // 静态方法\n        Method showDesc = clazz.getDeclaredMethod(\"showDesc\");\n        showDesc.setAccessible(true);\n        showDesc.invoke(person);// 我是一个可爱的人\n        // 操作静态方法时，第一个参数为null，不需要实例\n        showDesc.invoke(null);// 我是一个可爱的人\n\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-bqm2f58",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-bqm2f58"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "Other"
				}
			]
		},
		{
			"ID": "20210707224540-hple9ur",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-hple9ur"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public class OtherTest {\n\n    /**\n     * 获取构造器结构\n     */\n    @Test\n    public void test1() {\n\n        Class\u003cPerson\u003e clazz = Person.class;\n        // getConstructors():获取当前运行时类中声明为public的构造器\n        Constructor\u003c?\u003e[] constructors = clazz.getConstructors();\n        System.out.println(Arrays.toString(constructors));\n        // [public pojo.Person()]\n\n        System.out.println();\n        // getDeclaredConstructors():获取当前运行时类中声明的所有的构造器\n        Constructor\u003c?\u003e[] declaredConstructors = clazz.getDeclaredConstructors();\n        System.out.println(Arrays.toString(declaredConstructors));\n        // [private pojo.Person(java.lang.String), pojo.Person(java.lang.String,int), public pojo.Person()]\n    }\n\n    /**\n     * 获取运行时类的父类\n     */\n    @Test\n    public void test2() {\n        Class\u003cPerson\u003e clazz = Person.class;\n\n        Class\u003c? super Person\u003e superclass = clazz.getSuperclass();\n        System.out.println(superclass);\n        // class pojo.Creature\n    }\n\n    /**\n     * 获取运行时类的带泛型的父类\n     */\n    @Test\n    public void test3() {\n        Class\u003cPerson\u003e clazz = Person.class;\n\n        Type genericSuperclass = clazz.getGenericSuperclass();\n        System.out.println(genericSuperclass);\n        // pojo.Creature\u003cjava.lang.String\u003e\n    }\n\n    /**\n     * 获取运行时类的带泛型的父类的泛型\n     * 代码：逻辑性代码  vs 功能性代码\n     */\n    @Test\n    public void test4() {\n        Class\u003cPerson\u003e clazz = Person.class;\n\n        Type genericSuperclass = clazz.getGenericSuperclass();\n        ParameterizedType paramType = (ParameterizedType) genericSuperclass;\n        //获取泛型类型\n        Type[] actualTypeArguments = paramType.getActualTypeArguments();\n        //System.out.println(actualTypeArguments[0].getTypeName());\n        System.out.println(((Class) actualTypeArguments[0]).getName());\n        // java.lang.String\n    }\n\n    /**\n     * 获取运行时类实现的接口\n     */\n    @Test\n    public void test5() {\n        Class\u003cPerson\u003e clazz = Person.class;\n\n        Class\u003c?\u003e[] interfaces = clazz.getInterfaces();\n        Arrays.stream(interfaces).forEach(System.out::println);\n        // interface java.lang.Comparable\n        // interface pojo.MyInterface\n        System.out.println();\n\n\n        // 获取运行时类的父类实现的接口\n        Class\u003c?\u003e[] interfaces1 = clazz.getSuperclass().getInterfaces();\n        Arrays.stream(interfaces1).forEach(System.out::println);\n        // interface java.io.Serializable\n\n    }\n\n    /*\n     获取运行时类所在的包\n      */\n    @Test\n    public void test6() {\n        Class\u003cPerson\u003e clazz = Person.class;\n\n        Package pack = clazz.getPackage();\n        System.out.println(pack);\n        // package pojo\n    }\n\n    /*\n      获取运行时类声明的注解\n     */\n    @Test\n    public void test7() {\n        Class\u003cPerson\u003e clazz = Person.class;\n\n        Annotation[] annotations = clazz.getAnnotations();\n        Arrays.stream(annotations).forEach(System.out::println);\n        // @pojo.MyAnnotation(value=hi)\n    }\n\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-i7zanak",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-i7zanak"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "文字版"
				}
			]
		},
		{
			"ID": "20210707224540-jc5rdgp",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210707224540-jc5rdgp"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "获取类实现的全部接口"
				}
			]
		},
		{
			"ID": "20210707224540-u66bmcp",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-u66bmcp"
			},
			"Children": [
				{
					"ID": "20210707224540-v4yhfon",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-v4yhfon"
					},
					"Children": [
						{
							"ID": "20210707224540-yk0dnul",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-yk0dnul"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "public Class\u003c?\u003e[] getInterfaces()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"ID": "20210707224540-abjw5u1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-abjw5u1"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "确定此对象所表示的类或接口实现的接口。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-y50wlm1",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210707224540-y50wlm1"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "获取类所继承的父类"
				}
			]
		},
		{
			"ID": "20210707224540-9eok1hu",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-9eok1hu"
			},
			"Children": [
				{
					"ID": "20210707224540-gneruoh",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-gneruoh"
					},
					"Children": [
						{
							"ID": "20210707224540-aokd4og",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-aokd4og"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "public Class\u003c? Super T\u003e getSuperclass()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"ID": "20210707224540-6503vhf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-6503vhf"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "返回表示此 Class 所表示的实体(类、接口、基本类型)的父类的 Class。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-oryfjan",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210707224540-oryfjan"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "获取类全部的构造器"
				}
			]
		},
		{
			"ID": "20210707224540-f7zbw5h",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-f7zbw5h"
			},
			"Children": [
				{
					"ID": "20210707224540-z6x7z9k",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-z6x7z9k"
					},
					"Children": [
						{
							"ID": "20210707224540-7ms56ds",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-7ms56ds"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "public Constructor\u003cT\u003e[] getConstructors()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"ID": "20210707224540-73ymnz4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-73ymnz4"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "返回此 Class 对象所表示的类的所有 public 构造方法。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-mqxklpl",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-mqxklpl"
					},
					"Children": [
						{
							"ID": "20210707224540-gridyix",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-gridyix"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "public Constructor\u003cT\u003e[] getDeclaredConstructors()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"ID": "20210707224540-nkt8e4n",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-nkt8e4n"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "返回此 Class 对象表示的类声明的所有构造方法。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-iddhfvd",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-iddhfvd"
					},
					"Children": [
						{
							"ID": "20210707224540-qqp3l6a",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-qqp3l6a"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Constructor 类中："
								}
							]
						},
						{
							"ID": "20210707224540-2xp1h9y",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707224540-2xp1h9y"
							},
							"Children": [
								{
									"ID": "20210707224540-zsm5um1",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707224540-zsm5um1"
									},
									"Children": [
										{
											"ID": "20210707224540-qoy90k7",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-qoy90k7"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "取得修饰符："
												},
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "public int getModifiers()"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20210707224540-z8z0tsj",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707224540-z8z0tsj"
									},
									"Children": [
										{
											"ID": "20210707224540-z7orvpf",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-z7orvpf"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "取得方法名称："
												},
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "public String getName()"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20210707224540-pj527wo",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707224540-pj527wo"
									},
									"Children": [
										{
											"ID": "20210707224540-awbtuz3",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-awbtuz3"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "取得参数的类型："
												},
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "public Class\u003c?\u003e[] getParameterTypes()"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-y6f45cj",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-y6f45cj"
					},
					"Children": [
						{
							"ID": "20210707224540-wkf596q",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-wkf596q"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "全部的方法"
								}
							]
						},
						{
							"ID": "20210707224540-crykdtf",
							"Type": "NodeList",
							"ListData": {
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707224540-crykdtf"
							},
							"Children": [
								{
									"ID": "20210707224540-ztcr352",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707224540-ztcr352"
									},
									"Children": [
										{
											"ID": "20210707224540-rsw2coy",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-rsw2coy"
											},
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "public Method[] getMethods()"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"ID": "20210707224540-1clrddp",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-1clrddp"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "返回此 Class 对象所表示的类或接口的 public 的方法"
												}
											]
										}
									]
								},
								{
									"ID": "20210707224540-11uakx7",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707224540-11uakx7"
									},
									"Children": [
										{
											"ID": "20210707224540-toql6u5",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-toql6u5"
											},
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "public Method[] getDeclaredMethods()"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"ID": "20210707224540-a9jxl9s",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-a9jxl9s"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "返回此 Class 对象所表示的类或接口的全部方法"
												}
											]
										}
									]
								},
								{
									"ID": "20210707224540-bsgif1u",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707224540-bsgif1u"
									},
									"Children": [
										{
											"ID": "20210707224540-mwwhary",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-mwwhary"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "Method 类中："
												}
											]
										},
										{
											"ID": "20210707224540-5vwp4qy",
											"Type": "NodeList",
											"ListData": {
												"Tight": true,
												"BulletChar": 45,
												"Padding": 2,
												"Marker": "LQ==",
												"Num": -1
											},
											"Properties": {
												"id": "20210707224540-5vwp4qy"
											},
											"Children": [
												{
													"ID": "20210707224540-29ls6he",
													"Type": "NodeListItem",
													"Data": "-",
													"ListData": {
														"Tight": true,
														"BulletChar": 45,
														"Padding": 2,
														"Marker": "LQ==",
														"Num": -1
													},
													"Properties": {
														"id": "20210707224540-29ls6he"
													},
													"Children": [
														{
															"ID": "20210707224540-0vzkodg",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20210707224540-0vzkodg"
															},
															"Children": [
																{
																	"Type": "NodeCodeSpan",
																	"CodeMarkerLen": 1,
																	"Children": [
																		{
																			"Type": "NodeCodeSpanOpenMarker",
																			"Data": "`"
																		},
																		{
																			"Type": "NodeCodeSpanContent",
																			"Data": "public Class\u003c?\u003e getReturnType()"
																		},
																		{
																			"Type": "NodeCodeSpanCloseMarker",
																			"Data": "`"
																		}
																	]
																},
																{
																	"Type": "NodeText",
																	"Data": "取得全部的返回值"
																}
															]
														}
													]
												},
												{
													"ID": "20210707224540-hn4fzn4",
													"Type": "NodeListItem",
													"Data": "-",
													"ListData": {
														"Tight": true,
														"BulletChar": 45,
														"Padding": 2,
														"Marker": "LQ==",
														"Num": -1
													},
													"Properties": {
														"id": "20210707224540-hn4fzn4"
													},
													"Children": [
														{
															"ID": "20210707224540-xm1anwv",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20210707224540-xm1anwv"
															},
															"Children": [
																{
																	"Type": "NodeCodeSpan",
																	"CodeMarkerLen": 1,
																	"Children": [
																		{
																			"Type": "NodeCodeSpanOpenMarker",
																			"Data": "`"
																		},
																		{
																			"Type": "NodeCodeSpanContent",
																			"Data": "public Class\u003c?\u003e[] getParameterTypes()"
																		},
																		{
																			"Type": "NodeCodeSpanCloseMarker",
																			"Data": "`"
																		}
																	]
																},
																{
																	"Type": "NodeText",
																	"Data": "取得全部的参数"
																}
															]
														}
													]
												},
												{
													"ID": "20210707224540-wzj2zi8",
													"Type": "NodeListItem",
													"Data": "-",
													"ListData": {
														"Tight": true,
														"BulletChar": 45,
														"Padding": 2,
														"Marker": "LQ==",
														"Num": -1
													},
													"Properties": {
														"id": "20210707224540-wzj2zi8"
													},
													"Children": [
														{
															"ID": "20210707224540-plgiyt9",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20210707224540-plgiyt9"
															},
															"Children": [
																{
																	"Type": "NodeCodeSpan",
																	"CodeMarkerLen": 1,
																	"Children": [
																		{
																			"Type": "NodeCodeSpanOpenMarker",
																			"Data": "`"
																		},
																		{
																			"Type": "NodeCodeSpanContent",
																			"Data": "public int getModifiers()"
																		},
																		{
																			"Type": "NodeCodeSpanCloseMarker",
																			"Data": "`"
																		}
																	]
																},
																{
																	"Type": "NodeText",
																	"Data": "取得修饰符"
																}
															]
														}
													]
												},
												{
													"ID": "20210707224540-7nvlxno",
													"Type": "NodeListItem",
													"Data": "-",
													"ListData": {
														"Tight": true,
														"BulletChar": 45,
														"Padding": 2,
														"Marker": "LQ==",
														"Num": -1
													},
													"Properties": {
														"id": "20210707224540-7nvlxno"
													},
													"Children": [
														{
															"ID": "20210707224540-8q5hq9o",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20210707224540-8q5hq9o"
															},
															"Children": [
																{
																	"Type": "NodeCodeSpan",
																	"CodeMarkerLen": 1,
																	"Children": [
																		{
																			"Type": "NodeCodeSpanOpenMarker",
																			"Data": "`"
																		},
																		{
																			"Type": "NodeCodeSpanContent",
																			"Data": "public Class\u003c?\u003e[] getExceptionTypes()"
																		},
																		{
																			"Type": "NodeCodeSpanCloseMarker",
																			"Data": "`"
																		}
																	]
																},
																{
																	"Type": "NodeText",
																	"Data": "取得异常信息"
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-z1w5ar5",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210707224540-z1w5ar5"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "获取类全部的 Field"
				}
			]
		},
		{
			"ID": "20210707224540-t7v5i8o",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-t7v5i8o"
			},
			"Children": [
				{
					"ID": "20210707224540-q32mhfa",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-q32mhfa"
					},
					"Children": [
						{
							"ID": "20210707224540-00brx82",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-00brx82"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "public Field[] getFields()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"ID": "20210707224540-kgtiuke",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-kgtiuke"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "返回此 Class 对象所表示的类或接口的 public 的 Field。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-ko3ceug",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-ko3ceug"
					},
					"Children": [
						{
							"ID": "20210707224540-gr0fe03",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-gr0fe03"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "public Field[] getDeclaredFields()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"ID": "20210707224540-sjaztot",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-sjaztot"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "返回此 Class 对象所表示的类或接口的全部 Field。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-wxjz7wy",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-wxjz7wy"
					},
					"Children": [
						{
							"ID": "20210707224540-f1jklbm",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-f1jklbm"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Field 方法中："
								}
							]
						},
						{
							"ID": "20210707224540-r5hde20",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707224540-r5hde20"
							},
							"Children": [
								{
									"ID": "20210707224540-lwkmx85",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707224540-lwkmx85"
									},
									"Children": [
										{
											"ID": "20210707224540-f7ghjtj",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-f7ghjtj"
											},
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "public int getModifiers()"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": " 以整数形式返回此 Field 的修饰符"
												}
											]
										}
									]
								},
								{
									"ID": "20210707224540-ux9xi5g",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707224540-ux9xi5g"
									},
									"Children": [
										{
											"ID": "20210707224540-gizst4m",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-gizst4m"
											},
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "public Class\u003c?\u003e getType()"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": " 得到 Field 的属性类型"
												}
											]
										}
									]
								},
								{
									"ID": "20210707224540-g3ssea4",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707224540-g3ssea4"
									},
									"Children": [
										{
											"ID": "20210707224540-g65zqdz",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-g65zqdz"
											},
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "public StringgetName()"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": " 返回 Field 的名称。"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-129fat5",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210707224540-129fat5"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "获取类 Annotation 相关"
				}
			]
		},
		{
			"ID": "20210707224540-tuqrx7o",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-tuqrx7o"
			},
			"Children": [
				{
					"ID": "20210707224540-bu4dv82",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-bu4dv82"
					},
					"Children": [
						{
							"ID": "20210707224540-ir1mwpa",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-ir1mwpa"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "get Annotation(Class\u003cT\u003e annotationClass)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-6f1lqbh",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-6f1lqbh"
					},
					"Children": [
						{
							"ID": "20210707224540-6xuue6k",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-6xuue6k"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "getDeclaredAnnotations()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-59g59x5",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210707224540-59g59x5"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "获取类 Generic"
				}
			]
		},
		{
			"ID": "20210707224540-akyy9k2",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-akyy9k2"
			},
			"Children": [
				{
					"ID": "20210707224540-apvxxo2",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-apvxxo2"
					},
					"Children": [
						{
							"ID": "20210707224540-2moc9gy",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-2moc9gy"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "获取父类泛型类型："
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Type getGenericSuperclass()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-qfa6olz",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-qfa6olz"
					},
					"Children": [
						{
							"ID": "20210707224540-8z3egqe",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-8z3egqe"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "泛型类型："
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "ParameterizedType"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，强转"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-wab1vdb",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-wab1vdb"
					},
					"Children": [
						{
							"ID": "20210707224540-8nz4l7c",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-8nz4l7c"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "获取实际的泛型类型参数数组："
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "getActualTypeArguments()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-cgj60x0",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210707224540-cgj60x0"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "获取类所在的包"
				}
			]
		},
		{
			"ID": "20210707224540-ed14ucp",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-ed14ucp"
			},
			"Children": [
				{
					"ID": "20210707224540-h3jbrf5",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-h3jbrf5"
					},
					"Children": [
						{
							"ID": "20210707224540-mkuoz7m",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-mkuoz7m"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Package getPackage()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-hc7o1qs",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-hc7o1qs"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "习题"
				}
			]
		},
		{
			"ID": "20210707224540-2sjyxar",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210707224540-2sjyxar"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "通过配置文件运行类中方法"
				}
			]
		},
		{
			"ID": "20210707224540-f07ff7e",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-f07ff7e"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public class Demo{\n\t//main\n\tpublic static void main(String[] args) throws Exception{\n    \t//之前的方法调用谁的方法创建谁的对象，属于硬编码\n    \t//通过Properties集合来加载class.txt配置文件\n   \t \tProperties properties = new Properties();\n        ClassLoader classLoader = UserTest.class.getClassLoader();\n        InputStream is = classLoader.getResourceAsStream(\"prop.properties\");\n        properties.load(is);\n\n    \t//获取键值对数据\n        String className = properties.getProperty(\"className\");\n        String methodName = properties.getProperty(\"methodName\");\n\n        Class c = Class.forName(className);\n        Constructor con = c.getConstructor();\n        Object o = con.newInstance();\n        Method show = c.getMethod(methodName, String.class);\n        show.invoke(o,\"牛逼\");\n\t}\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-m2mvxxx",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210707224540-m2mvxxx"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "通过反射越过泛型检查"
				}
			]
		},
		{
			"ID": "20210707224540-isqeswi",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-isqeswi"
			},
			"Children": [
				{
					"ID": "20210707224540-y6dtpo4",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-y6dtpo4"
					},
					"Children": [
						{
							"ID": "20210707224540-uphu161",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-uphu161"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "ArrayList"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "\u003cInteger\u003e"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "对象，添加一个字符串数据"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-4w1bvpu",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-4w1bvpu"
					},
					"Children": [
						{
							"ID": "20210707224540-0t2mn0p",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-0t2mn0p"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "泛型机制是给编译器看的，运行时没有"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。通过看 add 底层代码发现传入的是"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "\u003cE\u003e"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "是 Object 型"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-1lqyrhs",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-1lqyrhs"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "ArrayList\u003cInteger\u003e arrayList = new ArrayList\u003c\u003e();\narrayList.add(10);\n\nClass c = arrayList.getClass();//获取对象所属类的字节码文件对象\nMethod method = c.getMethod(\"add\", Object.class);\nmethod.invoke(arrayList, \"hello\");\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-z3whtv6",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210707224540-z3whtv6"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "通过反射给任意的一个对象的任意的属性赋值为指定的值"
				}
			]
		},
		{
			"ID": "20210707224540-wtc1mxn",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-wtc1mxn"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public void setProperty(Object obj, String propertyName, Object value) throws Exception{\n\tClass c= obj.getClass();\n\tField field = c.getDeclaredField(propertyName);\n\tfield.setAccessible(true);\n\tfield.set(obj, value);\n}\n\npublic static void main(String[] args) throws Exception {\n\tTool t = new Tool();\n\tStudent s = new Student();\n\tt.setProperty(s, \"name\", \"张三\");\n\tt.setProperty(s, \"age\", 10);\n\ts.show();\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-1rbkqk2",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707224540-1rbkqk2"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "代理模式"
				}
			]
		},
		{
			"ID": "20210707224540-omgqi9z",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-omgqi9z"
			},
			"Children": [
				{
					"ID": "20210707224540-a7t302k",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-a7t302k"
					},
					"Children": [
						{
							"ID": "20210707224540-1n8y98g",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-1n8y98g"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "代理"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：使用一个代理将对象包装起来，然后用该代理对象取代原始对象。任何对原始对象的调用都要通过代理，代理对象决定是否以及何时将方法调用转到原始对象上。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-8cw8i87",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-8cw8i87"
					},
					"Children": [
						{
							"ID": "20210707224540-nopdgp1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-nopdgp1"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "静态代理和动态代理两者区别在于代理对象的生成模式"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-4t4vmis",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-4t4vmis"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "静态代理"
				}
			]
		},
		{
			"ID": "20210707224540-24l5yvs",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-24l5yvs"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "代理类和目标对象的类（字节码文件）都是在"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "编译期间"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "确定下来，不利于程序的扩展。同时每一个代理类只能为一个接口服务，这样一来程序开发中必然产生过多的代理。最好可以通过一个代理类完成全部的代理功能。 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "装饰者模式"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "就是静态代理的一种体现。"
				}
			]
		},
		{
			"ID": "20210707224540-qge1ujp",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-qge1ujp"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "interface ClothFactory{\n  void produceCloth();\n}\n\n//代理类\nclass ProxyClothFactory implements ClothFactory{\n\n  private ClothFactory factory;//用被代理类对象进行实例化\n\n  public ProxyClothFactory(ClothFactory factory){\n    this.factory = factory;\n  }\n\n  @Override\n  public void produceCloth() {\n    System.out.println(\"代理工厂做一些准备工作\");\n\n    factory.produceCloth();\n\n    System.out.println(\"代理工厂做一些后续的收尾工作\");\n  }\n}\n\n//被代理类\nclass NikeClothFactory implements ClothFactory{\n\n  @Override\n  public void produceCloth() {\n    System.out.println(\"Nike工厂生产一批运动服\");\n  }\n}\n\npublic class StaticProxyTest {\n  public static void main(String[] args) {\n    //创建被代理类的对象\n    ClothFactory nike = new NikeClothFactory();\n    //创建代理类的对象\n    ClothFactory proxyClothFactory = new ProxyClothFactory(nike);\n\n    proxyClothFactory.produceCloth();\n  }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-34h838h",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-34h838h"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "动态代理"
				}
			]
		},
		{
			"ID": "20210707224540-qfrkb4b",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-qfrkb4b"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "程序运行过程"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，在"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "内存中"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "动态的为目标对象"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "创建"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "一个虚拟的代理对象。字节码随用随创建，随用随加载。"
				}
			]
		},
		{
			"ID": "20210707224540-pkh7od5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-pkh7od5"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用场景："
				}
			]
		},
		{
			"ID": "20210707224540-7apb5q0",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-7apb5q0"
			},
			"Children": [
				{
					"ID": "20210707224540-uuvg2ia",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-uuvg2ia"
					},
					"Children": [
						{
							"ID": "20210707224540-rgamkje",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-rgamkje"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "调试"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-4tc642c",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-4tc642c"
					},
					"Children": [
						{
							"ID": "20210707224540-ulu7igs",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-ulu7igs"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "远程方法调用"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-jz6lrvs",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-jz6lrvs"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "相比静态代理的优点：抽象角色中(接口)声明的所有方法都被转移到调用处理器一个集中的方法中处理，这样，我们可以更加灵活和统一的处理众多的方法。"
				}
			]
		},
		{
			"ID": "20210707224540-f24cv3v",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-f24cv3v"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "JDK 中动态代理"
				}
			]
		},
		{
			"ID": "20210707224540-pyipeq6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-pyipeq6"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "java.lang.reflect"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "包下提供了一个"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Proxy"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "类和一个"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "InvocationHandler"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "接口，通过使用这个类和接口就可以生成动态代理对象。JDK 提供的代理要求"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "被代理类最少实现一个接口"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20210707224540-vyytun4",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-vyytun4"
			},
			"Children": [
				{
					"ID": "20210707224540-01v6zsf",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-01v6zsf"
					},
					"Children": [
						{
							"ID": "20210707224540-2o2hyeh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-2o2hyeh"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "实现步骤："
								}
							]
						},
						{
							"ID": "20210707224540-kwzk25s",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1,
								"Tight": true,
								"Start": 1,
								"Delimiter": 46,
								"Padding": 3,
								"Marker": "MQ==",
								"Num": 1
							},
							"Properties": {
								"id": "20210707224540-kwzk25s"
							},
							"Children": [
								{
									"ID": "20210707224540-ppgijrp",
									"Type": "NodeListItem",
									"Data": "1",
									"ListData": {
										"Typ": 1,
										"Tight": true,
										"Start": 1,
										"Delimiter": 46,
										"Padding": 3,
										"Marker": "MQ==",
										"Num": 1
									},
									"Properties": {
										"id": "20210707224540-ppgijrp"
									},
									"Children": [
										{
											"ID": "20210707224540-m7ss56r",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-m7ss56r"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "代理对象和真实对象实现相同接口"
												}
											]
										}
									]
								},
								{
									"ID": "20210707224540-ha9v203",
									"Type": "NodeListItem",
									"Data": "2",
									"ListData": {
										"Typ": 1,
										"Tight": true,
										"Start": 2,
										"Delimiter": 46,
										"Padding": 3,
										"Marker": "Mg==",
										"Num": 2
									},
									"Properties": {
										"id": "20210707224540-ha9v203"
									},
									"Children": [
										{
											"ID": "20210707224540-jpfqse0",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-jpfqse0"
											},
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "代理对象 = Proxy.newProxyInstance();"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20210707224540-6mluup9",
									"Type": "NodeListItem",
									"Data": "3",
									"ListData": {
										"Typ": 1,
										"Tight": true,
										"Start": 3,
										"Delimiter": 46,
										"Padding": 3,
										"Marker": "Mw==",
										"Num": 3
									},
									"Properties": {
										"id": "20210707224540-6mluup9"
									},
									"Children": [
										{
											"ID": "20210707224540-htf66l3",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-htf66l3"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "使用代理对象调用方法"
												}
											]
										}
									]
								},
								{
									"ID": "20210707224540-yxu0i8r",
									"Type": "NodeListItem",
									"Data": "4",
									"ListData": {
										"Typ": 1,
										"Tight": true,
										"Start": 4,
										"Delimiter": 46,
										"Padding": 3,
										"Marker": "NA==",
										"Num": 4
									},
									"Properties": {
										"id": "20210707224540-yxu0i8r"
									},
									"Children": [
										{
											"ID": "20210707224540-glszju4",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-glszju4"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "增强方法"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-1a9brgp",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-1a9brgp"
					},
					"Children": [
						{
							"ID": "20210707224540-xj8zo1u",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-xj8zo1u"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "创建指定接口的代理类对象实例"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "（类加载器，Class 对象数组，调用处理器）"
								}
							]
						},
						{
							"ID": "20210707224540-5ggxcv4",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "amF2YQ==",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210707224540-5ggxcv4"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "static Object newProxyInstance(ClassLoader loader,Class\u003c?\u003e[] interfaces,InvocationHander hander)\n//其中loader是与目标对象相同的类加载器\n//interfaces是接口的字节码对象数组 new Class\u003c?\u003e[]{interface.class}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						},
						{
							"ID": "20210707224540-yqc4x8t",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-yqc4x8t"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "其中第三个参数为"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "调用处理器"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，是实现了"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "InvocationHandler"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "接口的类对象，重写"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "invoke"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "方法"
								}
							]
						},
						{
							"ID": "20210707224540-l2eq81v",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "amF2YQ==",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210707224540-l2eq81v"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "public static void main(String[] args) {\n\n  // 被代理对象\n  /*final*/ Target target = new Target();// Java 8中，只要局部变量事实不变，那么final关键字可以省略\n\n  // 动态创建代理对象\n  TargetInterface proxy = (TargetInterface) Proxy.newProxyInstance(\n    target.getClass().getClassLoader(),\n    target.getClass().getInterfaces(),\n    new InvocationHandler() {\n      /**\n             * 被执行几次？---看代理对象调用方法几次;代理对象调用接口相应方法，都是调用该invoke方法\n             * proxy：是代理对象，一般不用\n             * method：代理对象调用的方法被封装为Method对象\n             * args：代理对象调用方法时传递的实际参数，封装为数组，即参数列表\n             */\n      @Override\n      public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n        // 反射知识点。使用目标对象调用目标方法并传递参数，返回目标方法的返回值。\n        Object value = method.invoke(target, args);\n        // retrun返回的值给代理对象\n        return value;\n      }\n\n    });\n  //调用代理对象\n  int add = proxy.add(1, 2);\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						},
						{
							"ID": "20210707224540-k0cxmc9",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "amF2YQ==",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210707224540-k0cxmc9"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "public interface TargetInterface {\n    int add(int a, int b);\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						},
						{
							"ID": "20210707224540-gumvk7h",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "amF2YQ==",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210707224540-gumvk7h"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "public class Target implements TargetInterface {\n    @Override\n    public int add(int a, int b) { return a + b; }\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-8whi83n",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 42,
				"Padding": 2,
				"Marker": "Kg==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-8whi83n"
			},
			"Children": [
				{
					"ID": "20210707224540-fqgtyfp",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-fqgtyfp"
					},
					"Children": [
						{
							"ID": "20210707224540-9mkl358",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-9mkl358"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "增强方式：（invoke 方法中）"
								}
							]
						},
						{
							"ID": "20210707224540-4mhg8cc",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1,
								"Tight": true,
								"Start": 1,
								"Delimiter": 46,
								"Padding": 3,
								"Marker": "MQ==",
								"Num": 1
							},
							"Properties": {
								"id": "20210707224540-4mhg8cc"
							},
							"Children": [
								{
									"ID": "20210707224540-yagmgva",
									"Type": "NodeListItem",
									"Data": "1",
									"ListData": {
										"Typ": 1,
										"Tight": true,
										"Start": 1,
										"Delimiter": 46,
										"Padding": 3,
										"Marker": "MQ==",
										"Num": 1
									},
									"Properties": {
										"id": "20210707224540-yagmgva"
									},
									"Children": [
										{
											"ID": "20210707224540-cj865u9",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-cj865u9"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "增强"
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "返回值"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "：通过"
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "对"
														},
														{
															"Type": "NodeCodeSpan",
															"CodeMarkerLen": 1,
															"Children": [
																{
																	"Type": "NodeCodeSpanOpenMarker",
																	"Data": "`"
																},
																{
																	"Type": "NodeCodeSpanContent",
																	"Data": "return"
																},
																{
																	"Type": "NodeCodeSpanCloseMarker",
																	"Data": "`"
																}
															]
														},
														{
															"Type": "NodeText",
															"Data": "返回值的修改"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20210707224540-o2eugq9",
									"Type": "NodeListItem",
									"Data": "2",
									"ListData": {
										"Typ": 1,
										"Tight": true,
										"Start": 2,
										"Delimiter": 46,
										"Padding": 3,
										"Marker": "Mg==",
										"Num": 2
									},
									"Properties": {
										"id": "20210707224540-o2eugq9"
									},
									"Children": [
										{
											"ID": "20210707224540-h4nirus",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-h4nirus"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "增强"
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "参数列"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "表：通过"
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeCodeSpan",
															"CodeMarkerLen": 1,
															"Children": [
																{
																	"Type": "NodeCodeSpanOpenMarker",
																	"Data": "`"
																},
																{
																	"Type": "NodeCodeSpanContent",
																	"Data": "method.getName()"
																},
																{
																	"Type": "NodeCodeSpanCloseMarker",
																	"Data": "`"
																}
															]
														},
														{
															"Type": "NodeText",
															"Data": "判断要增强的方法"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "，并对"
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "参数"
														},
														{
															"Type": "NodeCodeSpan",
															"CodeMarkerLen": 1,
															"Children": [
																{
																	"Type": "NodeCodeSpanOpenMarker",
																	"Data": "`"
																},
																{
																	"Type": "NodeCodeSpanContent",
																	"Data": "args[]"
																},
																{
																	"Type": "NodeCodeSpanCloseMarker",
																	"Data": "`"
																}
															]
														},
														{
															"Type": "NodeText",
															"Data": "数组进行修改"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20210707224540-akrkymk",
									"Type": "NodeListItem",
									"Data": "3",
									"ListData": {
										"Typ": 1,
										"Tight": true,
										"Start": 3,
										"Delimiter": 46,
										"Padding": 3,
										"Marker": "Mw==",
										"Num": 3
									},
									"Properties": {
										"id": "20210707224540-akrkymk"
									},
									"Children": [
										{
											"ID": "20210707224540-jhv0vci",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707224540-jhv0vci"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "增强"
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "方法体"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "执行逻辑："
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "反射方法"
														},
														{
															"Type": "NodeCodeSpan",
															"CodeMarkerLen": 1,
															"Children": [
																{
																	"Type": "NodeCodeSpanOpenMarker",
																	"Data": "`"
																},
																{
																	"Type": "NodeCodeSpanContent",
																	"Data": "invoke()"
																},
																{
																	"Type": "NodeCodeSpanCloseMarker",
																	"Data": "`"
																}
															]
														},
														{
															"Type": "NodeText",
															"Data": "执行前后修改"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-8wqvbdg",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-8wqvbdg"
			},
			"Children": [
				{
					"ID": "20210707224540-02gc2ui",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-02gc2ui"
					},
					"Children": [
						{
							"ID": "20210707224540-lzvs4d8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-lzvs4d8"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "示例"
								}
							]
						},
						{
							"ID": "20210707224540-exott3t",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "amF2YQ==",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210707224540-exott3t"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "interface Human{\n  String getBelief();\n  void eat(String food);\n}\n\n//被代理类\nclass SuperMan implements Human{\n\n  @Override\n  public String getBelief() {\n    return \"I believe I can fly!\";\n  }\n\n  @Override\n  public void eat(String food) {\n    System.out.println(\"我喜欢吃\" + food);\n  }\n}\n\n/*\n要想实现动态代理，需要解决的问题？\n问题一：如何根据加载到内存中的被代理类，动态的创建一个代理类及其对象。\n问题二：当通过代理类的对象调用方法a时，如何动态的去调用被代理类中的同名方法a。\n */\n\nclass ProxyFactory{\n  //调用此方法，返回一个代理类的对象。解决问题一\n  public static Object getProxyInstance(Object obj){//obj:被代理类的对象\n    MyInvocationHandler handler = new MyInvocationHandler();\n    handler.bind(obj);\n    return Proxy.newProxyInstance(obj.getClass().getClassLoader(),obj.getClass().getInterfaces(),handler);\n  }\n}\n\nclass MyInvocationHandler implements InvocationHandler{\n\n  private Object obj;//需要使用被代理类的对象进行赋值\n\n  public void bind(Object obj){\n    this.obj = obj;\n  }\n\n  //当我们通过代理类的对象，调用方法a时，就会自动的调用如下的方法：invoke()\n  //将被代理类要执行的方法a的功能就声明在invoke()中\n  @Override\n  public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\n    //method:即为代理类对象调用的方法，此方法也就作为了被代理类对象要调用的方法\n    //obj:被代理类的对象\n    Object returnValue = method.invoke(obj,args);\n\n    util.method2();\n\n    //上述方法的返回值就作为当前类中的invoke()的返回值。\n    return returnValue;\n  }\n}\n\n\npublic class ProxyTest {\n\n  public static void main(String[] args) {\n    SuperMan superMan = new SuperMan();\n    //proxyInstance:代理类的对象\n    Human proxyInstance = (Human) ProxyFactory.getProxyInstance(superMan);\n    //当通过代理类对象调用方法时，会自动的调用被代理类中同名的方法\n    String belief = proxyInstance.getBelief();\n    System.out.println(belief);\n    proxyInstance.eat(\"四川麻辣烫\");\n\n    System.out.println(\"*****************************\");\n\n    NikeClothFactory nikeClothFactory = new NikeClothFactory();\n    ClothFactory proxyClothFactory = (ClothFactory) ProxyFactory.getProxyInstance(nikeClothFactory);\n    proxyClothFactory.produceCloth();\n  }\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-rkj1re2",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-rkj1re2"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "基于子类的动态代理 cglib"
				}
			]
		},
		{
			"ID": "20210707224540-5r2b4qg",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-5r2b4qg"
			},
			"Children": [
				{
					"ID": "20210707224540-l9hkfbk",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-l9hkfbk"
					},
					"Children": [
						{
							"ID": "20210707224540-jj1l492",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-jj1l492"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "提供者：第三方的 CGLib，如果报 asmxxxx 异常，需要导入 "
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "asm.jar"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "或"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "org.springframework.cglib.proxy"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-l70j295",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-l70j295"
					},
					"Children": [
						{
							"ID": "20210707224540-j7so3ar",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-j7so3ar"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "要求：被代理类不能用 final 修饰的类（最终类）。"
								}
							]
						},
						{
							"ID": "20210707224540-s04awsj",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "amF2YQ==",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210707224540-s04awsj"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "public static void  main(String[] args) {\n    final Actor actor = new Actor();\n    Actor cglibActor = (Actor) Enhancer.create(actor.getClass(), new MethodInterceptor() {\n        /**\n\t\t * 执行被代理对象的任何方法，都会经过该方法。在此方法内部就可以对被代理对象的任何 方法进行增强。\n\t\t * 参数：\n\t\t   *  前三个和基于接口的动态代理是一样的。\n\t\t   *  MethodProxy：当前执行方法的代理对象。\n\t\t   *  返回值：当前执行方法的返回值\n\t\t */\n        @Override\n        public Object intercept(Object proxy,\n                                Method method,\n                                Object[] args,\n                                MethodProxy methodProxy) throws Throwable {\n            String name = method.getName();\n            Float money = (Float) args[0];\n            Object rtValue = null;\n            if(\"basicAct\".equals(name)){\n                //基本演出\n                if(money \u003e 2000){\n                    rtValue = method.invoke(actor, money/2);\n                }\n            }\n            if(\"dangerAct\".equals(name)){\n                //危险演出\n                if(money \u003e 5000){\n                    rtValue = method.invoke(actor, money/2);\n                }\n            }\n            return rtValue;\n        }\n    });\n    cglibActor.basicAct(10000);\n    cglibActor.dangerAct(100000);\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-s3of8fr",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-s3of8fr"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "AOP—Aspect Orient Programming"
				}
			]
		},
		{
			"ID": "20210707224540-4dok3ma",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-4dok3ma"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "前面介绍的 Proxy 和 InvocationHandler，很难看出这种动态代理的优势，下面介绍一种更实用的动态代理机制。"
				}
			]
		},
		{
			"ID": "20210707224540-1yhlqj3",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-1yhlqj3"
			},
			"Children": [
				{
					"ID": "20210707224540-lhlkhp4",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-lhlkhp4"
					},
					"Children": [
						{
							"ID": "20210707224540-kftsz8g",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-kftsz8g"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "使用 Proxy 生成一个动态代理时，往往并不会凭空产生一个动态代理，这样没有太大的意义。通常都是为指定的目标对象生成动态代理"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-k17uxh4",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-k17uxh4"
					},
					"Children": [
						{
							"ID": "20210707224540-z3209gy",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-z3209gy"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "这种动态代理在 AOP 中被称为 AOP 代理，AOP 代理可代替目标对象，AOP 代理包含了目标对象的全部方法。但 AOP 代理中的方法与目标对象的方法存在差异 : AOP 代理里的方法可以在执行目标方法之前、之后插入一些通用处理"
								}
							]
						},
						{
							"ID": "20210707224540-srx5spr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-srx5spr"
							},
							"Children": [
								{
									"Type": "NodeImage",
									"Children": [
										{
											"Type": "NodeBang",
											"Data": "!"
										},
										{
											"Type": "NodeOpenBracket",
											"Data": "["
										},
										{
											"Type": "NodeLinkText",
											"Data": "image-20191105004811049"
										},
										{
											"Type": "NodeCloseBracket",
											"Data": "]"
										},
										{
											"Type": "NodeOpenParen",
											"Data": "("
										},
										{
											"Type": "NodeLinkDest",
											"Data": "../assets/image-20191105004811049.png"
										},
										{
											"Type": "NodeCloseParen",
											"Data": ")"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-t5jstx2",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-t5jstx2"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "interface Human{\n  String getBelief();\n  void eat(String food);\n}\n\n//被代理类\nclass SuperMan implements Human{\n\n  @Override\n  public String getBelief() {\n    return \"I believe I can fly!\";\n  }\n\n  @Override\n  public void eat(String food) {\n    System.out.println(\"我喜欢吃\" + food);\n  }\n}\n\nclass HumanUtil{\n\n  public void method1(){\n    System.out.println(\"====================通用方法一====================\");\n  }\n  public void method2(){\n    System.out.println(\"====================通用方法二====================\");\n  }\n}\n\n/*\n要想实现动态代理，需要解决的问题？\n问题一：如何根据加载到内存中的被代理类，动态的创建一个代理类及其对象。\n问题二：当通过代理类的对象调用方法a时，如何动态的去调用被代理类中的同名方法a。\n */\n\nclass ProxyFactory{\n  //调用此方法，返回一个代理类的对象。解决问题一\n  public static Object getProxyInstance(Object obj){//obj:被代理类的对象\n    MyInvocationHandler handler = new MyInvocationHandler();\n    handler.bind(obj);\n    return Proxy.newProxyInstance(obj.getClass().getClassLoader(),obj.getClass().getInterfaces(),handler);\n  }\n}\n\nclass MyInvocationHandler implements InvocationHandler{\n\n  private Object obj;//需要使用被代理类的对象进行赋值\n\n  public void bind(Object obj){\n    this.obj = obj;\n  }\n\n  //当我们通过代理类的对象，调用方法a时，就会自动的调用如下的方法：invoke()\n  //将被代理类要执行的方法a的功能就声明在invoke()中\n  @Override\n  public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\n    HumanUtil util = new HumanUtil();\n    util.method1();\n\n    //method:即为代理类对象调用的方法，此方法也就作为了被代理类对象要调用的方法\n    //obj:被代理类的对象\n    Object returnValue = method.invoke(obj,args);\n\n    util.method2();\n\n    //上述方法的返回值就作为当前类中的invoke()的返回值。\n    return returnValue;\n  }\n}\n\n\npublic class ProxyTest {\n\n  public static void main(String[] args) {\n    SuperMan superMan = new SuperMan();\n    //proxyInstance:代理类的对象\n    Human proxyInstance = (Human) ProxyFactory.getProxyInstance(superMan);\n    //当通过代理类对象调用方法时，会自动的调用被代理类中同名的方法\n    String belief = proxyInstance.getBelief();\n    System.out.println(belief);\n    proxyInstance.eat(\"四川麻辣烫\");\n\n    System.out.println(\"*****************************\");\n\n    NikeClothFactory nikeClothFactory = new NikeClothFactory();\n    ClothFactory proxyClothFactory = (ClothFactory) ProxyFactory.getProxyInstance(nikeClothFactory);\n    proxyClothFactory.produceCloth();\n  }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		}
	]
}