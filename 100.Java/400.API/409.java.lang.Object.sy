{
	"ID": "20210707214420-5je4hey",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20210707214420-5je4hey",
		"type": "doc"
	},
	"Children": [
		{
			"ID": "20210707214420-5fh4nub",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 4,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707214420-5fh4nub"
			},
			"Children": [
				{
					"ID": "20210707214420-jrx3zzl",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 4,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214420-jrx3zzl"
					},
					"Children": [
						{
							"ID": "20210707214420-0r0ehte",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214420-0r0ehte"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Object是Java语言中的根类，所有类的父类（直接或间接继承），所有对象（包括数组）都实现这个类的方法。有且只有一个无参构造方法，在对象实例化的时候，最终找的父类就是Object。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214420-u31s4wx",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 4,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214420-u31s4wx"
					},
					"Children": [
						{
							"ID": "20210707214420-j5zdcqw",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214420-j5zdcqw"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "方法："
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						},
						{
							"ID": "20210707214420-ljw9fy9",
							"Type": "NodeList",
							"ListData": {
								"BulletChar": 45,
								"Padding": 4,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707214420-ljw9fy9"
							},
							"Children": [
								{
									"ID": "20210707214420-fcl4ksc",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"BulletChar": 45,
										"Padding": 4,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214420-fcl4ksc"
									},
									"Children": [
										{
											"ID": "20210707214420-putdjaq",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214420-putdjaq"
											},
											"Children": [
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeCodeSpan",
															"CodeMarkerLen": 1,
															"Children": [
																{
																	"Type": "NodeCodeSpanOpenMarker",
																	"Data": "`"
																},
																{
																	"Type": "NodeCodeSpanContent",
																	"Data": "toString()"
																},
																{
																	"Type": "NodeCodeSpanCloseMarker",
																	"Data": "`"
																}
															]
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "其返回值是String类型，返回类名和它的引用地址。直接输出一个对象引用时，默认调用该方法"
												}
											]
										},
										{
											"ID": "20210707214420-4ypdmxn",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214420-4ypdmxn"
											},
											"Children": [
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "默认打印的值"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "是由类的全名+'@'+哈希值的十六进制表示"
												},
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "getClass().getName() + \"@\" + Integer.toHexString(hashCode());"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "，没意义所以一般由"
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "子类重写"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "。String、Date、File、包装类等都重写了该方法"
												}
											]
										}
									]
								},
								{
									"ID": "20210707214420-qzx68ym",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 4,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214420-qzx68ym"
									},
									"Children": [
										{
											"ID": "20210707214420-ci3vkas",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214420-ci3vkas"
											},
											"Children": [
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeCodeSpan",
															"CodeMarkerLen": 1,
															"Children": [
																{
																	"Type": "NodeCodeSpanOpenMarker",
																	"Data": "`"
																},
																{
																	"Type": "NodeCodeSpanContent",
																	"Data": "equals()"
																},
																{
																	"Type": "NodeCodeSpanCloseMarker",
																	"Data": "`"
																}
															]
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "比较两个对象是否相同，底层用的是"
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeCodeSpan",
															"CodeMarkerLen": 1,
															"Children": [
																{
																	"Type": "NodeCodeSpanOpenMarker",
																	"Data": "`"
																},
																{
																	"Type": "NodeCodeSpanContent",
																	"Data": "=="
																},
																{
																	"Type": "NodeCodeSpanCloseMarker",
																	"Data": "`"
																}
															]
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "。"
												},
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "String"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "重写了该方法"
												},
												{
													"Type": "NodeSoftBreak",
													"Data": "\n"
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "默认"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "情况下"
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "比较的是对象地址值"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "是否相同，没意义所以一般由"
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "子类重写"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "，注意多态向下转型问题。重写原则如下："
												}
											]
										},
										{
											"ID": "20210707214420-5i17jra",
											"Type": "NodeList",
											"ListData": {
												"BulletChar": 45,
												"Padding": 4,
												"Marker": "LQ==",
												"Num": -1
											},
											"Properties": {
												"id": "20210707214420-5i17jra"
											},
											"Children": [
												{
													"ID": "20210707214420-1l27xzf",
													"Type": "NodeListItem",
													"Data": "-",
													"ListData": {
														"BulletChar": 45,
														"Padding": 4,
														"Marker": "LQ==",
														"Num": -1
													},
													"Properties": {
														"id": "20210707214420-1l27xzf"
													},
													"Children": [
														{
															"ID": "20210707214420-x96d25x",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20210707214420-x96d25x"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "对称性:如果x.equals(y)返回是“true”，那么y.equals(x)也应该返回是 “true”"
																}
															]
														}
													]
												},
												{
													"ID": "20210707214420-bn2nzo9",
													"Type": "NodeListItem",
													"Data": "-",
													"ListData": {
														"Tight": true,
														"BulletChar": 45,
														"Padding": 4,
														"Marker": "LQ==",
														"Num": -1
													},
													"Properties": {
														"id": "20210707214420-bn2nzo9"
													},
													"Children": [
														{
															"ID": "20210707214420-gaiynsq",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20210707214420-gaiynsq"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "自反性:x.equals(x)必须返回是“true”"
																}
															]
														}
													]
												},
												{
													"ID": "20210707214420-5axe9uc",
													"Type": "NodeListItem",
													"Data": "-",
													"ListData": {
														"Tight": true,
														"BulletChar": 45,
														"Padding": 4,
														"Marker": "LQ==",
														"Num": -1
													},
													"Properties": {
														"id": "20210707214420-5axe9uc"
													},
													"Children": [
														{
															"ID": "20210707214420-u6h7m6k",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20210707214420-u6h7m6k"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "传递性:如果x.equals(y)返回是“true”，而且y.equals(z)返回是“true”，那么z.equals(x)也应该返回是“true”"
																}
															]
														}
													]
												},
												{
													"ID": "20210707214420-6tkq5l1",
													"Type": "NodeListItem",
													"Data": "-",
													"ListData": {
														"Tight": true,
														"BulletChar": 45,
														"Padding": 4,
														"Marker": "LQ==",
														"Num": -1
													},
													"Properties": {
														"id": "20210707214420-6tkq5l1"
													},
													"Children": [
														{
															"ID": "20210707214420-g035had",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20210707214420-g035had"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "一致性:如果x.equals(y)返回是“true”，只要x和y内容一直不变，不管你重复x.equals(y)多少次，返回都是“true”"
																}
															]
														},
														{
															"ID": "20210707214420-kar5ckd",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20210707214420-kar5ckd"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "任何情况下，x.equals(null)，永远返回是“false”；x.equals(和x不同类型的对象)永远返回是“false”"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20210707214420-szdzqhd",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 4,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214420-szdzqhd"
									},
									"Children": [
										{
											"ID": "20210707214420-2mraf58",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214420-2mraf58"
											},
											"Children": [
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeCodeSpan",
															"CodeMarkerLen": 1,
															"Children": [
																{
																	"Type": "NodeCodeSpanOpenMarker",
																	"Data": "`"
																},
																{
																	"Type": "NodeCodeSpanContent",
																	"Data": "hashCode()"
																},
																{
																	"Type": "NodeCodeSpanCloseMarker",
																	"Data": "`"
																}
															]
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "返回"
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "对象的哈希值"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "，十进制整数，不是实际地址值，是"
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "逻辑地址值"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeSoftBreak",
													"Data": "\n"
												},
												{
													"Type": "NodeText",
													"Data": "使用带Hash的\t"
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "Set、Map中键"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "时需要"
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "给添加的自定义类重写"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "hashCode()"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "和"
												},
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "equals()"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20210707214420-ck21ybl",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 4,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214420-ck21ybl"
									},
									"Children": [
										{
											"ID": "20210707214420-v8qcqc3",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214420-v8qcqc3"
											},
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "getClass()"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "返回对象的字节码文件对象，反射中讲解"
												}
											]
										}
									]
								},
								{
									"ID": "20210707214420-ln4y8dl",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 4,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214420-ln4y8dl"
									},
									"Children": [
										{
											"ID": "20210707214420-zfqrdl9",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214420-zfqrdl9"
											},
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "finalize()"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "未被引用的对象（为null）将被垃圾回收。也可以调用"
												},
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "System.gc()"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "或"
												},
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "Runtime.getRuntime().gc()"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "来通知系统进行垃圾回收，但是系统是否进行垃圾回收依然不确定。在垃圾回收机制回收任何对象之前，总会调用该对象的"
												},
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "finalize()"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "方法。但若重写该方法，则又激活该对象（明白？）。总之不要主动调用该方法，应该交给垃圾回收机制来调用。"
												}
											]
										}
									]
								},
								{
									"ID": "20210707214420-kqep3ll",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 4,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214420-kqep3ll"
									},
									"Children": [
										{
											"ID": "20210707214420-phyuhv0",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214420-phyuhv0"
											},
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "clone()"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "实现对象"
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "克隆"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "，包括成员变量的数据复制，但是它和两个引用指向同一个对象是有区别的"
												}
											]
										}
									]
								},
								{
									"ID": "20210707214420-3u5izx4",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 4,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214420-3u5izx4"
									},
									"Children": [
										{
											"ID": "20210707214420-6qvxw4r",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214420-6qvxw4r"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "wait / notify / notifyAll"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707214420-ofd1ekt",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 4,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214420-ofd1ekt"
					},
					"Children": [
						{
							"ID": "20210707214420-kobebl5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214420-kobebl5"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "只声明了一个空参构造器"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214420-e9kxkv2",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 4,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214420-e9kxkv2"
					},
					"Children": [
						{
							"ID": "20210707214420-4afwlsi",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214420-4afwlsi"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "【面试】"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "==和equals()区别："
								}
							]
						},
						{
							"ID": "20210707214420-gzq7m3k",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1,
								"Tight": true,
								"Start": 1,
								"Delimiter": 46,
								"Padding": 4,
								"Marker": "MQ==",
								"Num": 1
							},
							"Properties": {
								"id": "20210707214420-gzq7m3k"
							},
							"Children": [
								{
									"ID": "20210707214420-jf26gnh",
									"Type": "NodeListItem",
									"Data": "1",
									"ListData": {
										"Typ": 1,
										"Tight": true,
										"Start": 1,
										"Delimiter": 46,
										"Padding": 4,
										"Marker": "MQ==",
										"Num": 1
									},
									"Properties": {
										"id": "20210707214420-jf26gnh"
									},
									"Children": [
										{
											"ID": "20210707214420-5ut5kc8",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214420-5ut5kc8"
											},
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "=="
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "："
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "基本类型"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "：比较值是否相等；"
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "引用类型"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "：比较地址值是否相等；左右两边类型必须一致！"
												}
											]
										}
									]
								},
								{
									"ID": "20210707214420-swn34e9",
									"Type": "NodeListItem",
									"Data": "2",
									"ListData": {
										"Typ": 1,
										"Tight": true,
										"Start": 2,
										"Delimiter": 46,
										"Padding": 4,
										"Marker": "Mg==",
										"Num": 2
									},
									"Properties": {
										"id": "20210707214420-swn34e9"
									},
									"Children": [
										{
											"ID": "20210707214420-mh9w80h",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214420-mh9w80h"
											},
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "equals()"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "：只能比较"
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "引用类型"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "，比较地址值是否相等，底层是"
												},
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "=="
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "，可以根据需要重写。String、Date、File、包装类等都重写了该方法，比较两对象的“内容”是否相同。"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707214420-n3su07n",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214420-n3su07n"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "String重写equals()方法"
				}
			]
		},
		{
			"ID": "20210707214420-eh7ur2o",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707214420-eh7ur2o"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "// JDK8\npublic boolean equals(Object anObject) {\n  if (this == anObject) {\n    return true;\n  }\n  if (anObject instanceof String) {\n    String anotherString = (String)anObject;\n    int n = value.length;\n    if (n == anotherString.value.length) {\n      char v1[] = value;\n      char v2[] = anotherString.value;\n      int i = 0;\n      while (n-- != 0) {\n        if (v1[i] != v2[i])\n          return false;\n        i++;\n      }\n      return true;\n    }\n  }\n  return false;\n}\n\n// JDK11\npublic boolean equals(Object anObject) {\n  if (this == anObject) {\n    return true;\n  }\n  if (anObject instanceof String) {\n    String aString = (String)anObject;\n    if (coder() == aString.coder()) {\n      return isLatin1() ? StringLatin1.equals(value, aString.value)\n        \t\t\t\t\t\t\t\t: StringUTF16.equals(value, aString.value);\n    }\n  }\n  return false;\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707214420-65baz08",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707214420-65baz08"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "Objects（java.util）"
				}
			]
		},
		{
			"ID": "20210707214420-ghgm791",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214420-ghgm791"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "JDK7"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "添加的，它提供了一些静态方法来"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "操作对象"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，这些方法是null-save（空指针安全的）或null-tolerant（容忍空指针的），计算对象的"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "toString"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "hashCode"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "equals"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "requireNonNull"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "等等。"
				}
			]
		},
		{
			"ID": "20210707214420-o5s6na8",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707214420-o5s6na8"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public static String toString(Object o) {  //Objects.toString()源码\n    return String.valueOf(o);\n}\npublic static int hashCode(Object o) {    //Objects.hashCode()源码\n    return o != null ? o.hashCode() : 0;\n}\npublic static boolean equals(Object a, Object b) {  //Objects.equals()源码\n    return (a == b) || (a != null \u0026\u0026 a.equals(b));  \n}\npublic static \u003cT\u003e T requireNonNull(T obj[, String message]) {   //Objects.requireNonNull()源码\n    if (obj == null)\n        throw new NullPointerException([message]);\n    return obj;\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		}
	]
}