{
	"ID": "20210708004513-jl7cji2",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20210708004513-jl7cji2",
		"type": "doc"
	},
	"Children": [
		{
			"ID": "20210708004513-1t0yref",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708004513-1t0yref"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "EXIST 是否存在"
				}
			]
		},
		{
			"ID": "20210708004513-kpemogb",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "YmFzaA==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708004513-kpemogb"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "del key\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708004513-x4pyszn",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708004513-x4pyszn"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "DEL 删除"
				}
			]
		},
		{
			"ID": "20210708004513-garj36t",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "YmFzaA==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708004513-garj36t"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "exists key\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708004513-7zceebk",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708004513-7zceebk"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "TYPE 类型"
				}
			]
		},
		{
			"ID": "20210708004513-qa1dvhu",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "YmFzaA==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708004513-qa1dvhu"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "type key\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708004513-qudyt6p",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708004513-qudyt6p"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "KEYS 获取所有与给定匹配符相匹配的键"
				}
			]
		},
		{
			"ID": "20210708004513-vho6gpd",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708004513-vho6gpd"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "简介"
				}
			]
		},
		{
			"ID": "20210708004513-h5ag8ez",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708004513-h5ag8ez"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "KEYS 命令接受一个全局匹配符作为参数，然后返回数据库中所有与这个匹配符相匹配的键作为结果"
				}
			]
		},
		{
			"ID": "20210708004513-niliytr",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "YmFzaA==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708004513-niliytr"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "keys pattern\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708004513-chq53qg",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210708004513-chq53qg"
			},
			"Children": [
				{
					"ID": "20210708004513-89i141h",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708004513-89i141h"
					},
					"Children": [
						{
							"ID": "20210708004513-tjn1k7u",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708004513-tjn1k7u"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "获取数据库包含的所有键"
								}
							]
						},
						{
							"ID": "20210708004513-g2hvpdd",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "YmFzaA==",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210708004513-g2hvpdd"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YmFzaA=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "keys *\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						}
					]
				},
				{
					"ID": "20210708004513-udj2vkf",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708004513-udj2vkf"
					},
					"Children": [
						{
							"ID": "20210708004513-crev3j4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708004513-crev3j4"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "获取所有以"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "user::"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "为前缀的键"
								}
							]
						},
						{
							"ID": "20210708004513-pnixtq4",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "YmFzaA==",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210708004513-pnixtq4"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YmFzaA=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "keys user::*\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						}
					]
				},
				{
					"ID": "20210708004513-7yltntb",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708004513-7yltntb"
					},
					"Children": [
						{
							"ID": "20210708004513-r2xsau1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708004513-r2xsau1"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果数据库中没有任何键与给定的匹配符相匹配，那么 KEYS 命令将返回一个空值"
								}
							]
						},
						{
							"ID": "20210708004513-ud454by",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "YmFzaA==",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210708004513-ud454by"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YmFzaA=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "127.0.0.1:6379\u003e keys user::*\n(empty array)\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708004513-dp1rfpf",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708004513-dp1rfpf"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "全局匹配符"
				}
			]
		},
		{
			"ID": "20210708004513-fgq5u6r",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708004513-fgq5u6r"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "KEYS 命令允许使用多种不同的全局匹配符作为 pattern 参数的值，如下展示了一些常见的全局匹配符，并举例说明了这些匹配符的作用。或参考 "
				},
				{
					"Type": "NodeLink",
					"Children": [
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "WIKI"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://en.wikipedia.org/wiki/Glob_(programming)"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeLink",
					"Children": [
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "glob 程序手册"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://man7.org/linux/man-pages/man7/glob.7.html"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20210708004513-3giqq2l",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708004513-3giqq2l"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Children": [
						{
							"Type": "NodeBang",
							"Data": "!"
						},
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "image-20210307215512874"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "../assets/image-20210307215512874.png"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20210708004513-ke1nw6r",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708004513-ke1nw6r"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "keys *  查询所有\nkeys it*  查询所有以it开头\nkeys *heima  查询所有以heima结尾\nkeys ??heima  查询所有前面两个字符任意，后面以heima结尾\nkeys user:?  查询所有以user:开头，最后一个字符任意\nkeys u[st]er:1  查询所有以u开头，以er:1结尾，中间包含一个字母，s或t\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708004513-f344hjp",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708004513-f344hjp"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "SCAN 以渐进方式迭代数据库中的键"
				}
			]
		},
		{
			"ID": "20210708004513-fghlult",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708004513-fghlult"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "因为 KEYS 命令需要检查数据库包含的所有键，并一次性将符合条件的所有键全部返回给客户端，所以当数据库包含的键数量比较大时，使用 KEYS 命令可能会导致服务器被阻塞。为了解决这个问题，Redis 从 2.8.0 版本开始提供 SCAN 命令，该命令是一个迭代器，它每次被调用的时候都会从数据库中获取一部分键，用户可以通过重复调用 SCAN 命令来迭代数据库包含的所有键"
				}
			]
		},
		{
			"ID": "20210708004513-gg0dqbc",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "YmFzaA==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708004513-gg0dqbc"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "scan cursor\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708004513-mzrnezl",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210708004513-mzrnezl"
			},
			"Children": [
				{
					"ID": "20210708004513-ti53gxx",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708004513-ti53gxx"
					},
					"Children": [
						{
							"ID": "20210708004513-4mohn83",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708004513-4mohn83"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "cursor 参数用于指定迭代时使用的游标，游标记录了迭代的轨迹和进度。在开始一次新的迭代时，用户需要将游标设置为 0"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708004513-44d5f72",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708004513-44d5f72"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "SCAN 命令的执行结果由两个元素组成"
				}
			]
		},
		{
			"ID": "20210708004513-h6xb1u4",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210708004513-h6xb1u4"
			},
			"Children": [
				{
					"ID": "20210708004513-ve2lfzl",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708004513-ve2lfzl"
					},
					"Children": [
						{
							"ID": "20210708004513-c21p2kx",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708004513-c21p2kx"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "第一个元素是进行下一次迭代所需的游标，如果这个游标为 0，那么说明客户端已经对数据库完成了一次完整的迭代。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708004513-qeeb0fl",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708004513-qeeb0fl"
					},
					"Children": [
						{
							"ID": "20210708004513-8k2horf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708004513-8k2horf"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "第二个元素是一个列表，这个列表包含了本次迭代取得的数据库键；如果 SCAN 命令在某次迭代中没有获取到任何键，那么这个元素将是一个空列表"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708004513-f8c97es",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708004513-f8c97es"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "关于 SCAN 命令返回的键列表，有两点需要注意"
				}
			]
		},
		{
			"ID": "20210708004513-g5okrbe",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210708004513-g5okrbe"
			},
			"Children": [
				{
					"ID": "20210708004513-j2v15o4",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708004513-j2v15o4"
					},
					"Children": [
						{
							"ID": "20210708004513-x9umucl",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708004513-x9umucl"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "SCAN 命令可能会返回重复的键，用户如果不想在结果中包含重复的键，那么就需要自己在客户端中进行检测和过滤。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708004513-ywbh9s0",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708004513-ywbh9s0"
					},
					"Children": [
						{
							"ID": "20210708004513-lxls59q",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708004513-lxls59q"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "SCAN 命令返回的键数量是不确定的，有时甚至会不返回任何键，但只要命令返回的游标不为 0，迭代就没有结束。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708004513-efbfjgj",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708004513-efbfjgj"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "RENAME、RENAMENX 修改键名"
				}
			]
		},
		{
			"ID": "20210708004513-o8en0n8",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "YmFzaA==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708004513-o8en0n8"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "rename key new\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708004513-suw547i",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708004513-suw547i"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "RENAME 命令在执行成功时将返回 OK 作为结果"
				}
			]
		},
		{
			"ID": "20210708004513-myepmnz",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "YmFzaA==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708004513-myepmnz"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e set name conan\nOK\n127.0.0.1:6379\u003e get name\n\"conan\"\n127.0.0.1:6379\u003e rename name username\nOK\n127.0.0.1:6379\u003e get name\n(nil)\n127.0.0.1:6379\u003e get username\n\"conan\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708004513-quwivkx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708004513-quwivkx"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意："
				}
			]
		},
		{
			"ID": "20210708004513-appjmpe",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210708004513-appjmpe"
			},
			"Children": [
				{
					"ID": "20210708004513-tjv1gd5",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708004513-tjv1gd5"
					},
					"Children": [
						{
							"ID": "20210708004513-degumog",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708004513-degumog"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "覆盖已存在的键"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。如果用户指定的新键名已经被占用，那么 RENAME 命令会先移除占用了新键名的那个键，然后再执行改名操作"
								}
							]
						}
					]
				},
				{
					"ID": "20210708004513-0011kq6",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708004513-0011kq6"
					},
					"Children": [
						{
							"ID": "20210708004513-o7102f3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708004513-o7102f3"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "RENAMENX 只在新键名尚未被占用的情况下进行改名。推荐！如果用户指定的新键名已经被占用，那么 RENAMENX 将放弃执行改名操作"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708004513-edyznxq",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708004513-edyznxq"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "SORT 对键的值进行排序"
				}
			]
		},
		{
			"ID": "20210708004513-kg7k5yy",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708004513-kg7k5yy"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "介绍"
				}
			]
		},
		{
			"ID": "20210708004513-5budr1s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708004513-5budr1s"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "通过执行 SORT 命令对 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "list"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 元素、"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "set"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 元素或者 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "sorted_set"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 成员进行排序。为了让用户能够以不同的方式进行排序，Redis 为 SORT 命令提供了非常多的可选项，如果我们以不给定任何可选项的方式直接调用 SORT 命令，那么命令将对指定键存储的元素执行"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "数字值排序"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。默认情况下，SORT 命令将按照"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "从小到大"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的顺序依次返回排序后的各个值"
				}
			]
		},
		{
			"ID": "20210708004513-jqcibfb",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "YmFzaA==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708004513-jqcibfb"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "sort key [asc|desc]\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708004513-s9wut56",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708004513-s9wut56"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "字符串排序"
				}
			]
		},
		{
			"ID": "20210708004513-lm66brs",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708004513-lm66brs"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果我们尝试直接使用 SORT 命令去"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "对字符串元素进行排序"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，那么命令将产生一个"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "错误"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20210708004513-872nrhm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708004513-872nrhm"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "为了让 SORT 命令能够对字符串值进行排序，我们必须让 SORT 命令执行字符串排序操作而不是数字值排序操作，这一点可以通过使用"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "ALPHA 选项"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "来实现"
				}
			]
		},
		{
			"ID": "20210708004513-1qn85n9",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "YmFzaA==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708004513-1qn85n9"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "sort key alpha\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708004513-ejn704a",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708004513-ejn704a"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "LIMIT"
				}
			]
		},
		{
			"ID": "20210708004513-ls2c8q0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708004513-ls2c8q0"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在默认情况下，SORT 命令将返回所有被排序的元素，但如果我们只需要其中一部分排序结果，那么可以使用可选的 LIMIT 选项"
				}
			]
		},
		{
			"ID": "20210708004513-8vjdbcq",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "YmFzaA==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708004513-8vjdbcq"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "sort key [limit offset count]\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708004513-ik5qhsb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708004513-ik5qhsb"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其中 offset 参数用于指定返回结果之前需要跳过的元素数量，而 count 参数则用于指定需要获取的元素数量"
				}
			]
		},
		{
			"ID": "20210708004513-6uw4kju",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708004513-6uw4kju"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "未完..."
				}
			]
		},
		{
			"ID": "20210708004513-gwl8ufr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708004513-gwl8ufr"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在默认情况下，SORT 命令将返回被排序的元素作为结果，但如果用户有需要，也可以使用 GET 选项去获取其他值作为排序结果"
				}
			]
		},
		{
			"ID": "20210708004513-3hyyc3p",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708004513-3hyyc3p"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "HELP @GENERIC"
				}
			]
		},
		{
			"ID": "20210708004513-0j9k2ve",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "YmFzaA==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708004513-0j9k2ve"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "help @generic\nhelp set\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708004513-hpamkgn",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708004513-hpamkgn"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "SELECT 切换至指定的数据库"
				}
			]
		},
		{
			"ID": "20210708004513-di86rw7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708004513-di86rw7"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一个 Redis 服务器可以包含多个数据库。在"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "默认"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "情况下，"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "Redis 服务器在启动时将会创建 16 个数据库"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "：这些数据库都使用号码进行标识，其中第一个数据库为 0 号数据库，第二个数据库为 1 号数据库，而第三个数据库则为 2 号数据库，以此类推。"
				}
			]
		},
		{
			"ID": "20210708004513-sxm67k8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708004513-sxm67k8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Redis 虽然不允许在同一个数据库中使用两个同名的键，但是由于不同数据库拥有不同的命名空间，因此在不同数据库中使用同名的键是完全没有问题的，而用户也可以通过使用不同数据库来存储不同的数据，以此来达到重用键名并且减少键冲突的目的。"
				}
			]
		},
		{
			"ID": "20210708004513-gp72j6n",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708004513-gp72j6n"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "比如，如果我们将用户的个人信息和会话信息都存放在同一个数据库中，那么为了区分这两种信息，程序就需要使用"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "user::\u003cid\u003e::profile"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "格式的键来存储用户信息，并使用"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "user::\u003cid\u003e::session"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "格式的键来存储用户会话；但如果将这两种信息分别存储在 0 号数据库和 1 号数据库中，那么程序就可以在 0 号数据库中使用"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "user::\u003cid\u003e"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "格式的键来存储用户信息，并在 1 号数据库中继续使用"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "user::\u003cid\u003e"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "格式的键来存储用户会话。"
				}
			]
		},
		{
			"ID": "20210708004513-4yejuv0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708004513-4yejuv0"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当用户使用客户端与 Redis 服务器进行连接时，客户端一般默认都会使用 0 号数据库，但是通过使用 SELECT 命令，用户可以从当前正在使用的数据库切换到自己想要使用的数据库"
				}
			]
		},
		{
			"ID": "20210708004513-2jz97uj",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "YmFzaA==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708004513-2jz97uj"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "select 0\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708004513-s1yekpg",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708004513-s1yekpg"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "MOVE 将给定的键移动到另一个数据库"
				}
			]
		},
		{
			"ID": "20210708004513-sdoby6x",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "YmFzaA==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708004513-sdoby6x"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "move key db\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708004513-ryu4k97",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708004513-ryu4k97"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当 MOVE 命令成功将给定键从当前数据库移动至目标数据库时，命令返回 1；"
				}
			]
		},
		{
			"ID": "20210708004513-p4iufyw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708004513-p4iufyw"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果给定键并不存在于当前数据库，或者目标数据库中存在与给定键同名的键，那么 MOVE 命令将不做动作，只返回 0 表示移动失败。"
				}
			]
		},
		{
			"ID": "20210708004513-xccobsi",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708004513-xccobsi"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "DBSIZE 获取数据库包含的键值对数量"
				}
			]
		},
		{
			"ID": "20210708004513-o1dkdch",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708004513-o1dkdch"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "FLUSHDB 清空当前数据库"
				}
			]
		},
		{
			"ID": "20210708004513-85ij9a3",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "YmFzaA==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708004513-85ij9a3"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "flushdb [async]\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708004513-92gqhxp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708004513-92gqhxp"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "FLUSHDB 命令会遍历用户正在使用的数据库，移除其中包含的所有键值对，然后返回 OK 表示数据库已被清空。"
				}
			]
		},
		{
			"ID": "20210708004513-uoqyx5a",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708004513-uoqyx5a"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "与 DEL 命令一样，FLUSHDB 命令也是一个"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "同步移除命令"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，并且因为 FLUSHDB 移除的是整个数据库而不是单个键，所以它常常会引发比 DEL 命令更为严重的服务器阻塞现象"
				}
			]
		},
		{
			"ID": "20210708004513-yx1kaqs",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708004513-yx1kaqs"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果用户在调用 FLUSHDB 命令时使用了 async 选项，那么实际的数据库清空操作将放在后台线程中以"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "异步方式进行"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，这样 FLUSHDB 命令就不会再阻塞服务器了。"
				}
			]
		},
		{
			"ID": "20210708004513-9fq2asu",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708004513-9fq2asu"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "FLUSHALL 清空所有数据库"
				}
			]
		},
		{
			"ID": "20210708004513-uiwna78",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "YmFzaA==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708004513-uiwna78"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "flushall [async]\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708004513-oplthup",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708004513-oplthup"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "FLUSHALL 命令会遍历服务器包含的所有数据库，并移除其中包含的所有键值对，然后返回 OK 表示所有数据库均已被清空。"
				}
			]
		},
		{
			"ID": "20210708004513-h2mf8to",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708004513-h2mf8to"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "通过指定 async 选项，FLUSHALL 命令将以异步方式在后台线程中执行所有实际的数据库清空操作，因此它将不会再阻塞服务器"
				}
			]
		},
		{
			"ID": "20210708004513-o8fsf0j",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708004513-o8fsf0j"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "其他命令"
				}
			]
		},
		{
			"ID": "20210708004513-oo770k1",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "YmFzaA==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708004513-oo770k1"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "quit\nping --测试服务器是否连通\necho message\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		}
	]
}