{
	"ID": "20210708003510-7pj2vhf",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20210708003510-7pj2vhf",
		"type": "doc"
	},
	"Children": [
		{
			"ID": "20210708003510-itudxy1",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708003510-itudxy1"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "准备表"
				}
			]
		},
		{
			"ID": "20210708003510-bwtqmpn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-bwtqmpn"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "学生基本信息表的结构"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-99kitoj",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "c3Fs",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-99kitoj"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "CREATE TABLE student_info (\n    number INT PRIMARY KEY,\n    name VARCHAR(5),\n    sex ENUM('男', '女'),\n    id_number CHAR(18),\n    department VARCHAR(30),\n    major VARCHAR(30),\n    enrollment_time DATE,\n    UNIQUE KEY (id_number)\n);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-x5iolpp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-x5iolpp"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "学生成绩表的结构"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-1jq0kcf",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "c3Fs",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-1jq0kcf"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "CREATE TABLE student_score (\n    number INT,\n    subject VARCHAR(30),\n    score TINYINT,\n    PRIMARY KEY (number, subject),\n    CONSTRAINT FOREIGN KEY(number) REFERENCES student_info(number)\n);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-usqofem",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-usqofem"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "为表填入数据"
				}
			]
		},
		{
			"ID": "20210708003510-1v8keq3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-1v8keq3"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们给这两个表插入一些数据："
				}
			]
		},
		{
			"ID": "20210708003510-gcukstc",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-gcukstc"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "mysql\u003e INSERT INTO student_info(number, name, sex, id_number, department, major, enrollment_time) VALUES\n    -\u003e     (20180101, '杜子腾', '男', '158177199901044792', '计算机学院', '计算机科学与工程', '2018-09-01'),\n    -\u003e     (20180102, '杜琦燕', '女', '151008199801178529', '计算机学院', '计算机科学与工程', '2018-09-01'),\n    -\u003e     (20180103, '范统', '男', '17156319980116959X', '计算机学院', '软件工程', '2018-09-01'),\n    -\u003e     (20180104, '史珍香', '女', '141992199701078600', '计算机学院', '软件工程', '2018-09-01'),\n    -\u003e     (20180105, '范剑', '男', '181048199308156368', '航天学院', '飞行器设计', '2018-09-01'),\n    -\u003e     (20180106, '朱逸群', '男', '197995199501078445', '航天学院', '电子信息', '2018-09-01');\nQuery OK, 6 rows affected (0.01 sec)\nRecords: 6  Duplicates: 0  Warnings: 0\n\nmysql\u003e INSERT INTO student_score (number, subject, score) VALUES\n    -\u003e     (20180101, '母猪的产后护理', 78),\n    -\u003e     (20180101, '论萨达姆的战争准备', 88),\n    -\u003e     (20180102, '母猪的产后护理', 100),\n    -\u003e     (20180102, '论萨达姆的战争准备', 98),\n    -\u003e     (20180103, '母猪的产后护理', 59),\n    -\u003e     (20180103, '论萨达姆的战争准备', 61),\n    -\u003e     (20180104, '母猪的产后护理', 55),\n    -\u003e     (20180104, '论萨达姆的战争准备', 46);\nQuery OK, 8 rows affected (0.00 sec)\nRecords: 8  Duplicates: 0  Warnings: 0\n\nmysql\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-ifazuk3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-ifazuk3"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "现在这两个表中的数据就如下所示了："
				}
			]
		},
		{
			"ID": "20210708003510-es5dye9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-es5dye9"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "student_info表"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-fvywm30",
			"Type": "NodeTable",
			"Data": "| number   | name   | sex  | id_number          | department | major            | enrollment_time |\n| -------- | ------ | ---- | ------------------ | ---------- | ---------------- | --------------- |\n| 20180101 | 杜子腾 | 男   | 158177199901044792 | 计算机学院 | 计算机科学与工程 | 2018-09-01      |\n| 20180102 | 杜琦燕 | 女   | 151008199801178529 | 计算机学院 | 计算机科学与工程 | 2018-09-01      |\n| 20180103 | 范统   | 男   | 17156319980116959X | 计算机学院 | 软件工程         | 2018-09-01      |\n| 20180104 | 史珍香 | 女   | 141992199701078600 | 计算机学院 | 软件工程         | 2018-09-01      |\n| 20180105 | 范剑   | 男   | 181048200008156368 | 航天学院   | 飞行器设计       | 2018-09-01      |\n| 20180106 | 朱逸群 | 男   | 197995199801078445 | 航天学院   | 电子信息         | 2018-09-01      |",
			"TableAligns": [
				0,
				0,
				0,
				0,
				0,
				0,
				0
			],
			"Properties": {
				"id": "20210708003510-fvywm30"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "number"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "name"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "sex"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "id_number"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "department"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "major"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "enrollment_time"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "20180101"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "杜子腾"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "男"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "158177199901044792"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "计算机学院"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "计算机科学与工程"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "2018-09-01"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "20180102"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "杜琦燕"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "女"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "151008199801178529"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "计算机学院"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "计算机科学与工程"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "2018-09-01"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "20180103"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "范统"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "男"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "17156319980116959X"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "计算机学院"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "软件工程"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "2018-09-01"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "20180104"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "史珍香"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "女"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "141992199701078600"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "计算机学院"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "软件工程"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "2018-09-01"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "20180105"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "范剑"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "男"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "181048200008156368"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "航天学院"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "飞行器设计"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "2018-09-01"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "20180106"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "朱逸群"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "男"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "197995199801078445"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "航天学院"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "电子信息"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "2018-09-01"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-m14gvfx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-m14gvfx"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "student_score表"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-rtlweqn",
			"Type": "NodeTable",
			"Data": "| number   | subject            | score |\n| -------- | ------------------ | ----- |\n| 20180101 | 母猪的产后护理     | 78    |\n| 20180101 | 论萨达姆的战争准备 | 88    |\n| 20180102 | 母猪的产后护理     | 100   |\n| 20180102 | 论萨达姆的战争准备 | 98    |\n| 20180103 | 母猪的产后护理     | 59    |\n| 20180103 | 论萨达姆的战争准备 | 61    |\n| 20180104 | 母猪的产后护理     | 55    |\n| 20180104 | 论萨达姆的战争准备 | 46    |",
			"TableAligns": [
				0,
				0,
				0
			],
			"Properties": {
				"id": "20210708003510-rtlweqn"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "number"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "subject"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "score"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "20180101"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "母猪的产后护理"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "78"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "20180101"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "论萨达姆的战争准备"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "88"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "20180102"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "母猪的产后护理"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "100"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "20180102"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "论萨达姆的战争准备"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "98"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "20180103"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "母猪的产后护理"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "59"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "20180103"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "论萨达姆的战争准备"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "61"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "20180104"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "母猪的产后护理"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "55"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "20180104"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "论萨达姆的战争准备"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "46"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-whh5l0f",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-whh5l0f"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "好了，表的填充工作也已经做完了～ 终于可以开始查询数据了！"
				}
			]
		},
		{
			"ID": "20210708003510-anqcewz",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708003510-anqcewz"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "顺序"
				}
			]
		},
		{
			"ID": "20210708003510-bpygz58",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-bpygz58"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "FROM、WHERE、GROUP BY、HAVING、SELECT、ORDER BY、LIMIT"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-9feb3w5",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "c3Fs",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-9feb3w5"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "SELECT [DISTINCT] 查询列表\n[FROM 表名]\n[WHERE 布尔表达式]\n[GROUP BY 分组列表 ]\n[HAVING 分组过滤条件]\n[ORDER BY 排序列表]\n[LIMIT 开始行, 限制条数]\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-tkkkli5",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708003510-tkkkli5"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "基本查询"
				}
			]
		},
		{
			"ID": "20210708003510-8i85rft",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-8i85rft"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "查询列"
				}
			]
		},
		{
			"ID": "20210708003510-hs3akh6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-hs3akh6"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "查看某个表中的某一列的数据的通用格式是这样："
				}
			]
		},
		{
			"ID": "20210708003510-eyim31o",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "c3Fs",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-eyim31o"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "SELECT 列名1 [AS] 列的别名 [, 列名2 [AS] 列的别名, ... 列名n [AS] 列的别名] FROM 表名;\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-pq3wv0m",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-pq3wv0m"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "别名只是在本次查询的到的结果集中展示，而不会改变真实表中的列名"
				}
			]
		},
		{
			"ID": "20210708003510-b4jr2qz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-b4jr2qz"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果需要把记录中的所有列都查出来，"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "MySQL"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "也提供一个省事儿的办法，我们之前也介绍过，就是直接用星号"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "*"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "来表示要查询的东西，就像这样："
				}
			]
		},
		{
			"ID": "20210708003510-0oaq8xp",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "c3Fs",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-0oaq8xp"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "SELECT * FROM 表名;\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-7krxav4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-7krxav4"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这个命令我们之前看过了，就不多唠叨了。不过需要注意的是，除非你确实需要表中的每个列，否则一般最好别使用星号"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "*"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "来查询所有列，虽然星号"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "*"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "看起来很方便，不用明确列出所需的列，但是查询不需要的列通常会降低性能。"
				}
			]
		},
		{
			"ID": "20210708003510-7ybzgn0",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-7ybzgn0"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "列别名注意"
				}
			]
		},
		{
			"ID": "20210708003510-cbv59r7",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 42,
				"Padding": 4,
				"Marker": "Kg==",
				"Num": -1
			},
			"Properties": {
				"id": "20210708003510-cbv59r7"
			},
			"Children": [
				{
					"ID": "20210708003510-w0901ep",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-w0901ep"
					},
					"Children": [
						{
							"ID": "20210708003510-r8ek3y8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-r8ek3y8"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "GROUP BY"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "子句中写了列的别名（MySQL 和 PostgreSQL 可以这样写，对查询做了增强）🔥"
								}
							]
						},
						{
							"ID": "20210708003510-yvqdsrw",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-yvqdsrw"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "由于SQL的执行顺序为SELECT最后，所以 SELECT 的别名不能用做GROUP BY中。但实际上 MySQL 可以！"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-q2pvroa",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-q2pvroa"
					},
					"Children": [
						{
							"ID": "20210708003510-7savsv8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-7savsv8"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "在 HAVING 中使用了列的别名"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，可以使用！！！"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-1de6nvq",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-1de6nvq"
					},
					"Children": [
						{
							"ID": "20210708003510-864t64b",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-864t64b"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "在 ORDER BY 中使用了列的别名"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，可以使用！！！"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-7nzbci7",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-7nzbci7"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "查询结果去重"
				}
			]
		},
		{
			"ID": "20210708003510-fbnw5xg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-fbnw5xg"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "DISTINCT"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "只能放在第一列之前"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-rqft4dm",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210708003510-rqft4dm"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "去除单列的重复结果"
				}
			]
		},
		{
			"ID": "20210708003510-8zgl1tv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-8zgl1tv"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果我们想去除重复结果的话，可以将"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "DISTINCT"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "放在被查询的列前边，就是这样："
				}
			]
		},
		{
			"ID": "20210708003510-oevp1rj",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "c3Fs",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-oevp1rj"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "SELECT DISTINCT 列名 FROM 表名;\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-maees6l",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210708003510-maees6l"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "去除多列的重复结果"
				}
			]
		},
		{
			"ID": "20210708003510-tw7x9iu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-tw7x9iu"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对于查询多列的情况，两条结果重复的意思是："
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "两条结果的每一个列中的值都相同"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。如果我们想对多列查询的结果去重的话，可以直接把"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "DISTINCT"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "放在被查询的列的最前边："
				}
			]
		},
		{
			"ID": "20210708003510-mxvo4xa",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "c3Fs",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-mxvo4xa"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "SELECT DISTINCT 列名1, 列名2, ... 列名n  FROM 表名;\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-zs0o1d1",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210708003510-zs0o1d1"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "注意"
				}
			]
		},
		{
			"ID": "20210708003510-kddwrvw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-kddwrvw"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "NULL 也被视为一类数据。NULL 存在于多行中时，也会被合并为一条 NULL 数据"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-v104ktk",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-v104ktk"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "常数查询"
				}
			]
		},
		{
			"ID": "20210708003510-xdf7mgk",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "c3Fs",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-xdf7mgk"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "SELECT '商品' AS string, 38 AS number, '2009-02-24' AS date, product_id, product_name FROM Product;\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-2rkvx7x",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-2rkvx7x"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "数字类型的列做加、减、乘、除运算 🔥"
				}
			]
		},
		{
			"ID": "20210708003510-adct636",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-adct636"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "记住，"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "列就类似变量"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，变量当然可以做"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "运算"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "了！"
				}
			]
		},
		{
			"ID": "20210708003510-fcdwmjz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-fcdwmjz"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "⚠️ 与NULL运算时，结果都为NULL。甚至NULL / 0 都是NULL。"
				}
			]
		},
		{
			"ID": "20210708003510-9yfd974",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "c3Fs",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-9yfd974"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "SELECT sal*1.5 FROM emp;\nSELECT sal+comm FROM emp;\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-d4yy3t4",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-d4yy3t4"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "FROM子句真的有必要吗？"
				}
			]
		},
		{
			"ID": "20210708003510-jit07pj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-jit07pj"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "实际上，通过执行 SELECT 语句来代替计算器的情况基本上是不存在的。Oracle 必须有！"
				}
			]
		},
		{
			"ID": "20210708003510-4rgoler",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-4rgoler"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "只希望得到一行临时数据的情况，还是可以通过使用没有 FROM 子句的 SELECT 语句来实现某种业务的"
				}
			]
		},
		{
			"ID": "20210708003510-vw9tt09",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "c3Fs",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-vw9tt09"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "SELECT (100 + 200) * 3 AS calculation;\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-ixqzh1m",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708003510-ixqzh1m"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "条件查询"
				}
			]
		},
		{
			"ID": "20210708003510-r1l20op",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-r1l20op"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "算术运算符"
				}
			]
		},
		{
			"ID": "20210708003510-0u83kzz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-0u83kzz"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "运算符：可用于列运算、条件查询"
				}
			]
		},
		{
			"ID": "20210708003510-ehfbi9w",
			"Type": "NodeTable",
			"Data": "| 算术运算符 |\n| ---------- |\n| +          |\n| -          |\n| *          |\n| /          |\n| ()         |",
			"TableAligns": [
				0
			],
			"Properties": {
				"id": "20210708003510-ehfbi9w"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "算术运算符"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "+"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "-"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "*"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "/"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "()"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-ktddiqz",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-ktddiqz"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "比较运算符"
				}
			]
		},
		{
			"ID": "20210708003510-hsomgd6",
			"Type": "NodeTable",
			"Data": "| 比较运算符              | 说明                                                         |\n| ----------------------- | ------------------------------------------------------------ |\n| =、\u003c\u003e、!=、\u003c、\u003e、\u003c=、\u003e= | 对**数字、日期和字符（字符按照字典顺序）**等几乎所有数据类型的列和值进行比较\u003cbr\u003e **\u003c\u003e在 SQL 中表示不等于**，很多RDBMS的方言（仅测试了MySQL、Oracle）可以使用**!=**。 |\n| **[NOT] BETWEEN...AND** | 在一个范围之内，如：a between 100 and 200 相当于条件 a 在 [100 到 200] 之间 |",
			"TableAligns": [
				0,
				0
			],
			"Properties": {
				"id": "20210708003510-hsomgd6"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "比较运算符"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "说明"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "=、\u003c\u003e、!=、\u003c、\u003e、\u003c=、\u003e="
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "对"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "数字、日期和字符（字符按照字典顺序）"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "等几乎所有数据类型的列和值进行比较\u003cbr\u003e "
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "\u003c\u003e在 SQL 中表示不等于"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，很多RDBMS的方言（仅测试了MySQL、Oracle）可以使用"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "!="
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "[NOT] BETWEEN...AND"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在一个范围之内，如：a between 100 and 200 相当于条件 a 在 [100 到 200] 之间"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-zfdhwfo",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-zfdhwfo"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "匹配"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "NULL"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "值"
				}
			]
		},
		{
			"ID": "20210708003510-u6s4wo1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-u6s4wo1"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们前边说过，"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "NULL"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "代表没有值，意味着你并不知道该列应该填入什么数据，在判断某一列是否为"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "NULL"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的时候并不能单纯的使用"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "="
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "操作符，而是需要专业判断值是否是"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "NULL"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的操作符："
				}
			]
		},
		{
			"ID": "20210708003510-z9vd5ol",
			"Type": "NodeTable",
			"Data": "| 操作符        | 示例            | 描述            |\n| ------------- | --------------- | --------------- |\n| `IS NULL`     | `a IS NULL`     | a的值是`NULL`   |\n| `IS NOT NULL` | `a IS NOT NULL` | a的值不是`NULL` |",
			"TableAligns": [
				0,
				0,
				0
			],
			"Properties": {
				"id": "20210708003510-z9vd5ol"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "操作符"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "示例"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "描述"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "IS NULL"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "a IS NULL"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "a的值是"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "NULL"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "IS NOT NULL"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "a IS NOT NULL"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "a的值不是"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "NULL"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-uz3jx7c",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-uz3jx7c"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "再次强调一遍，不能直接使用普通的操作符来与"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "NULL"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "值进行比较，必须使用"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "IS NULL"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "或者"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "IS NOT NULL"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "！"
				}
			]
		},
		{
			"ID": "20210708003510-wytthqk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-wytthqk"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "NULL 运算注意 🔥"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-ry01kxq",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 4,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210708003510-ry01kxq"
			},
			"Children": [
				{
					"ID": "20210708003510-6g0zs5k",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 4,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-6g0zs5k"
					},
					"Children": [
						{
							"ID": "20210708003510-gmeu6k8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-gmeu6k8"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "与 NULL 运算时，结果都为 NULL。甚至 NULL / 0 都是 NULL。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-o6v8pwz",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 4,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-o6v8pwz"
					},
					"Children": [
						{
							"ID": "20210708003510-w2xty0t",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-w2xty0t"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "查询 NULL 时"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "不能使用比较运算符"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "(= 或者 \u003c\u003e、\u003e、\u003c等)，因为结果为空不满足该条件，需使用 IS [ NOT ] NULL。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-idss6n9",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 4,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-idss6n9"
					},
					"Children": [
						{
							"ID": "20210708003510-a10dc53",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-a10dc53"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "查询 NULL 时不能使用逻辑运算符，因为结果不为真也不为假，是"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "不确定"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "（UNKNOWN）"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-bs1m4tk",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 4,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-bs1m4tk"
					},
					"Children": [
						{
							"ID": "20210708003510-lykjrbb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-lykjrbb"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "除了 COALESCE 及其衍生函数"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "！！"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-58gu8z3",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-58gu8z3"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "匹配列表中的元素"
				}
			]
		},
		{
			"ID": "20210708003510-zgaohij",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-zgaohij"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "有时候搜索条件中指定的匹配值并不是单个值，而是一个列表，只要匹配到列表中的某一项就算匹配成功，这种情况可以使用"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "IN"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "操作符："
				}
			]
		},
		{
			"ID": "20210708003510-sols9cs",
			"Type": "NodeTable",
			"Data": "| 操作符   | 示例                     | 描述                          |\n| -------- | ------------------------ | ----------------------------- |\n| `IN`     | `a IN (b1, b2, ...)`     | a是b1, b2, ... 中的某一个     |\n| `NOT IN` | `a NOT IN (b1, b2, ...)` | a不是b1, b2, ... 中的任意一个 |",
			"TableAligns": [
				0,
				0,
				0
			],
			"Properties": {
				"id": "20210708003510-sols9cs"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "操作符"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "示例"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "描述"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "IN"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "a IN (b1, b2, ...)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "a是b1, b2, ... 中的某一个"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "NOT IN"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "a NOT IN (b1, b2, ...)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "a不是b1, b2, ... 中的任意一个"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-rxmu42g",
			"Type": "NodeTable",
			"Data": "| 匹配运算符             | 说明                                                         |\n| ---------------------- | ------------------------------------------------------------ |\n| **[NOT] IN**、ALL、ANY | 集合表示多个值，使用逗号分隔。ALL为所有，ANY为任意一个即可，可用最值替代 |\n| **[NOT] EXIST**        | 通常使用关联子查询作为参数（是否有该条记录，经常会使用 SELECT *） |",
			"TableAligns": [
				0,
				0
			],
			"Properties": {
				"id": "20210708003510-rxmu42g"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "匹配运算符"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "说明"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "[NOT] IN"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "、ALL、ANY"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "集合表示多个值，使用逗号分隔。ALL为所有，ANY为任意一个即可，可用最值替代"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "[NOT] EXIST"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "通常使用关联子查询作为参数（是否有该条记录，经常会使用 SELECT *）"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-m2swjqa",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-m2swjqa"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "实际上即使不使用 EXIST，基本上也都可以使用 IN(或者 NOT IN)来代替"
				}
			]
		},
		{
			"ID": "20210708003510-sa84efz",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "c3Fs",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-sa84efz"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "SELECT product_name, sale_price\nFROM Product AS P 1\nWHERE EXISTS (SELECT *  -- 关联子查询\n                            FROM ShopProduct AS SP 2\n                            WHERE SP.shop_id = '000C'\n                            AND SP.product_id = P.product_id); -- 将 Product 表和 ShopProduct 表进行了联接\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-2av3jrs",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-2av3jrs"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "通配符—模糊查询"
				}
			]
		},
		{
			"ID": "20210708003510-rn3u3a7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-rn3u3a7"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "有时候我们并不能精确的描述我们要查询的哪些结果，比方说我们只是想看看姓"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "'杜'"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的学生信息，而不能精确的描述出这些姓"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "'杜'"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的同学的完整姓名，我们称这种查询为"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "模糊查询"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "MySQL"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "中使用下边这两个操作符来支持"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "模糊查询"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "："
				}
			]
		},
		{
			"ID": "20210708003510-o7ao743",
			"Type": "NodeTable",
			"Data": "| 操作符     | 示例           | 描述     |\n| ---------- | -------------- | -------- |\n| `LIKE`     | `a LIKE b`     | a匹配b   |\n| `NOT LIKE` | `a NOT LIKE b` | a不匹配b |",
			"TableAligns": [
				0,
				0,
				0
			],
			"Properties": {
				"id": "20210708003510-o7ao743"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "操作符"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "示例"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "描述"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "LIKE"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "a LIKE b"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "a匹配b"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "NOT LIKE"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "a NOT LIKE b"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "a不匹配b"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-iarinbc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-iarinbc"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "既然我们不能完整描述要查询的信息，那就用某个符号来替代这些模糊的信息，这个符号就被称为"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "通配符"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "MySQL"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "中支持下边这两个"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "通配符"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "："
				}
			]
		},
		{
			"ID": "20210708003510-gmcbdv5",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 42,
				"Padding": 4,
				"Marker": "Kg==",
				"Num": -1
			},
			"Properties": {
				"id": "20210708003510-gmcbdv5"
			},
			"Children": [
				{
					"ID": "20210708003510-yoijbn7",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-yoijbn7"
					},
					"Children": [
						{
							"ID": "20210708003510-p11w7jk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-p11w7jk"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "%"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：代表任意一个字符串。"
								}
							]
						},
						{
							"ID": "20210708003510-1xywcwk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-1xywcwk"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "比方说我们想查询"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "student_info"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "表中"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "name"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "以"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "'杜'"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "开头的记录，我们可以这样写："
								}
							]
						},
						{
							"ID": "20210708003510-c37uinf",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210708003510-c37uinf"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker"
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "mysql\u003e SELECT number, name, id_number, major FROM student_info WHERE name LIKE '杜%';\n+----------+-----------+--------------------+--------------------------+\n| number   | name      | id_number          | major                    |\n+----------+-----------+--------------------+--------------------------+\n| 20180101 | 杜子腾    | 158177199901044792 | 计算机科学与工程         |\n| 20180102 | 杜琦燕    | 151008199801178529 | 计算机科学与工程         |\n+----------+-----------+--------------------+--------------------------+\n2 rows in set (0.00 sec)\n\nmysql\u003e\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						},
						{
							"ID": "20210708003510-txqtt6m",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-txqtt6m"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "或者我们只知道学生名字里边包含了一个"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "'香'"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "字，那我们可以这么查："
								}
							]
						},
						{
							"ID": "20210708003510-bk9mhig",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210708003510-bk9mhig"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker"
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "mysql\u003e SELECT number, name, id_number, major FROM student_info WHERE name LIKE '%香%';\n+----------+-----------+--------------------+--------------+\n| number   | name      | id_number          | major        |\n+----------+-----------+--------------------+--------------+\n| 20180104 | 史珍香    | 141992199701078600 | 软件工程     |\n+----------+-----------+--------------------+--------------+\n1 row in set (0.00 sec)\n\nmysql\u003e\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-c6b9rkh",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-c6b9rkh"
					},
					"Children": [
						{
							"ID": "20210708003510-6tf71c2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-6tf71c2"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "_"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：代表任意一个字符。"
								}
							]
						},
						{
							"ID": "20210708003510-luyl12m",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-luyl12m"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "有的时候我们知道要查询的字符串中有多少个字符，而使用"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "%"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "时匹配的范围太大，我们就可以用"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "_"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "来做通配符。就像是支付宝的万能福卡，一张万能福卡能且只能代表任意一张福卡(也就是它不能代表多张福卡)。"
								}
							]
						},
						{
							"ID": "20210708003510-kxbl3ma",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-kxbl3ma"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "比方说我们想查询姓"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "'范'"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，并且姓名只有2个字符的记录，可以这么写："
								}
							]
						},
						{
							"ID": "20210708003510-2vc7g1o",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210708003510-2vc7g1o"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker"
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "mysql\u003e SELECT number, name, id_number, major FROM student_info WHERE name LIKE '范_';\n+----------+--------+--------------------+-----------------+\n| number   | name   | id_number          | major           |\n+----------+--------+--------------------+-----------------+\n| 20180103 | 范统   | 17156319980116959X | 软件工程        |\n| 20180105 | 范剑   | 181048199308156368 | 飞行器设计      |\n+----------+--------+--------------------+-----------------+\n2 rows in set (0.00 sec)\n\nmysql\u003e\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						},
						{
							"ID": "20210708003510-jlwoy75",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-jlwoy75"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "不过下边这个查询却什么都没有查到："
								}
							]
						},
						{
							"ID": "20210708003510-nn94zer",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210708003510-nn94zer"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker"
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "mysql\u003e SELECT number, name, id_number, major FROM student_info WHERE name LIKE '杜_';\nEmpty set (0.00 sec)\n\nmysql\u003e\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						},
						{
							"ID": "20210708003510-64s8i4k",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-64s8i4k"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "这是因为一个"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "_"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "只能代表一个字符（"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "%"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "是代表任意一个字符串），并且"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "student_info"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "表中并没有姓"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "'杜'"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "并且姓名长度是2个字符的记录，所以这么写是查不出东西的。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-qb2fdsc",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210708003510-qb2fdsc"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "转义通配符"
				}
			]
		},
		{
			"ID": "20210708003510-87c4m9n",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-87c4m9n"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果待匹配的字符串中本身就包含普通字符"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "'%'"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "或者"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "'_'"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "该咋办，怎么区分它是一个通配符还是一个普通字符呢？"
				}
			]
		},
		{
			"ID": "20210708003510-h9e8dql",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-h9e8dql"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "答：如果匹配字符串中需要普通字符"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "'%'"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "或者"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "'_'"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的话，需要在它们前边加一个反斜杠"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "\\"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "来和通配符区分开来，也就是说："
				}
			]
		},
		{
			"ID": "20210708003510-tsz7bvz",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 4,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210708003510-tsz7bvz"
			},
			"Children": [
				{
					"ID": "20210708003510-2lpkv10",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 4,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-2lpkv10"
					},
					"Children": [
						{
							"ID": "20210708003510-53cc1z4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-53cc1z4"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "'\\%'"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "代表普通字符"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "'%'"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-f072gid",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 4,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-f072gid"
					},
					"Children": [
						{
							"ID": "20210708003510-xxpx9y4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-xxpx9y4"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "'\\_'"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "代表普通字符"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "'_'"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 比方说这样："
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-aj2mb1p",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-aj2mb1p"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "mysql\u003e SELECT number, name, id_number, major FROM student_info WHERE name LIKE '范\\_';\nEmpty set (0.00 sec)\n    \nmysql\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-z9ly30t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-z9ly30t"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "由于"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "student_info"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "表中没有叫"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "范_"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的学生，所以查询结果为空。"
				}
			]
		},
		{
			"ID": "20210708003510-twhzs6k",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-twhzs6k"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "逻辑运算符"
				}
			]
		},
		{
			"ID": "20210708003510-6mnzbak",
			"Type": "NodeTable",
			"Data": "| 逻辑运算符     | 说明                                                         |\n| -------------- | ------------------------------------------------------------ |\n| **AND**或 \u0026\u0026   | 与，后者并不通用；**优先于OR**，**“()”优先级最高**           |\n| **OR** 或 \\|\\| | 或                                                           |\n| **NOT**或 !    | 非；WHERE NOT代表后面的表达式的非运算（但是不要滥用，不清晰） |",
			"TableAligns": [
				0,
				0
			],
			"Properties": {
				"id": "20210708003510-6mnzbak"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "逻辑运算符"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "说明"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "AND"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "或 \u0026\u0026"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "与，后者并不通用；"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "优先于OR"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "“()”优先级最高"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "OR"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 或 "
								},
								{
									"Type": "NodeBackslash",
									"Children": [
										{
											"Type": "NodeBackslashContent",
											"Data": "|"
										}
									]
								},
								{
									"Type": "NodeBackslash",
									"Children": [
										{
											"Type": "NodeBackslashContent",
											"Data": "|"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "或"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "NOT"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "或 !"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "非；WHERE NOT代表后面的表达式的非运算（但是不要滥用，不清晰）"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-4t4027d",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "c3Fs",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-4t4027d"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "  WHERE age \u003e= 18 AND age \u003c= 80;\n  WHERE age BETWEEN 18 AND 80;\n  WHERE name='zhangSan' OR name='liSi';\n  WHERE name IN ('zhangSan', 'liSi');\n  WHERE age IS NULL; -- 不能使用等号\n  WHERE age IS NOT NULL;\n  WHERE sale_price - purchase_price \u003e= 500;\n\n  SELECT * FROM emp WHERE ename LIKE '张_'; -- 姓张，名字由两个字组成的员工\n  SELECT * FROM emp WHERE ename LIKE '___'; -- 姓名由3个字组成的员工\n\n  SELECT * FROM emp WHERE ename LIKE '张%'; -- 查询的是姓张的所有员工\n  SELECT * FROM emp WHERE ename LIKE '%阿%';-- 查询姓名中间带有阿字的员工\n  SELECT * FROM emp WHERE ename LIKE '%'; -- 条件不存在，如果姓名为NULL的查询不出来\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-o1549fm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-o1549fm"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意 0 在 MySQL 中代表 false，非 0 代表 true（如 1，-1都是 true）"
				}
			]
		},
		{
			"ID": "20210708003510-4836ljd",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "c3Fs",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-4836ljd"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "select * from sys_user where -1;\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-147ftjk",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-147ftjk"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "注意"
				}
			]
		},
		{
			"ID": "20210708003510-lcrl7jb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-lcrl7jb"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果我们需要在某个查询中指定很多的搜索条件，比方说我们想从"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "student_score"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "表中找出课程为"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "'论萨达姆的战争准备'"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，并且成绩大于"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "95"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "分或者小于"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "55"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "分的记录，那我们可能会这么写："
				}
			]
		},
		{
			"ID": "20210708003510-0tiobyt",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-0tiobyt"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "mysql\u003e SELECT * FROM student_score WHERE score \u003e 95 OR score \u003c 55 AND subject = '论萨达姆的战争准备';\n+----------+-----------------------------+-------+\n| number   | subject                     | score |\n+----------+-----------------------------+-------+\n| 20180102 | 母猪的产后护理              |   100 |\n| 20180102 | 论萨达姆的战争准备          |    98 |\n| 20180104 | 论萨达姆的战争准备          |    46 |\n+----------+-----------------------------+-------+\n3 rows in set (0.00 sec)\n\nmysql\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-y87ikks",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-y87ikks"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "为什么结果中仍然会有"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "'母猪的产后护理'"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "课程的记录呢？因为：AND操作符的优先级高于OR操作符，也就是说在判断某条记录是否符合条件时会先检测AND操作符两边的搜索条件。所以"
				}
			]
		},
		{
			"ID": "20210708003510-nsjwwxz",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-nsjwwxz"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "score \u003e 95 OR score \u003c 55 AND subject = '论萨达姆的战争准备'\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-2bnzmd2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-2bnzmd2"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可以被看作下边这两个条件中任一条件成立则整个式子成立："
				}
			]
		},
		{
			"ID": "20210708003510-gfuq9su",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20210708003510-gfuq9su"
			},
			"Children": [
				{
					"ID": "20210708003510-ngzu5sx",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20210708003510-ngzu5sx"
					},
					"Children": [
						{
							"ID": "20210708003510-2irjfol",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-2irjfol"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "score \u003e 95"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-vkc4k6t",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20210708003510-vkc4k6t"
					},
					"Children": [
						{
							"ID": "20210708003510-9x9p9do",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-9x9p9do"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "score \u003c 55 AND subject = '论萨达姆的战争准备'"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-4g1wpuu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-4g1wpuu"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "因为结果集中"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "subject"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "是"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "'母猪的产后护理'"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的记录中"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "score"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "值为"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "100"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，符合第1个条件，所以整条记录会被加到结果集中。为了避免这种尴尬，在一个查询中有多个搜索条件时最好使用小括号"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "()"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "来显式的指定各个搜索条件的检测顺序，比如上边的例子可以写成下边这样："
				}
			]
		},
		{
			"ID": "20210708003510-di2c1rm",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-di2c1rm"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "mysql\u003e SELECT * FROM student_score WHERE (score \u003e 95 OR score \u003c 55) AND subject = '论萨达姆的战争准备';\n+----------+-----------------------------+-------+\n| number   | subject                     | score |\n+----------+-----------------------------+-------+\n| 20180102 | 论萨达姆的战争准备          |    98 |\n| 20180104 | 论萨达姆的战争准备          |    46 |\n+----------+-----------------------------+-------+\n2 rows in set (0.00 sec)\n\nmysql\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-8x3cm9p",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708003510-8x3cm9p"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "分组查询"
				}
			]
		},
		{
			"ID": "20210708003510-euagq8u",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-euagq8u"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "何为分组"
				}
			]
		},
		{
			"ID": "20210708003510-xnaxc9i",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-xnaxc9i"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "针对某个列，"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "将该列的值相同的记录分到一个组中"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。在GROUP BY 子句中"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "指定的列称为聚合键"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "或者"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "分组列"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。可以有多个分组！"
				}
			]
		},
		{
			"ID": "20210708003510-klx6phx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-klx6phx"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "聚合键中包含 NULL"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 时，在结果中会以"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "“不确定”行(空行)"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的形式表现出来。"
				}
			]
		},
		{
			"ID": "20210708003510-qz04pi2",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "c3Fs",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-qz04pi2"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "SELECT deptno, COUNT(*) FROM emp GROUP BY deptno; -- deptno分组，查询部门编号和每个部门记录\nSELECT job, MAX(SAL) FROM emp GROUP BY job; -- 使用job分组，查询每种工作的最高工资\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-5qix55v",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-5qix55v"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在使用"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "分组"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的时候必须要意识到，分组的存在仅仅是为了"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "方便我们分别统计各个分组中的信息"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，所以我们只需要把"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "分组列"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "聚合函数"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "放到查询列表处就好！当然，如果"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "非分组列"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "出现在查询列表中会出现什么情况呢？比如下边这个查询："
				}
			]
		},
		{
			"ID": "20210708003510-zx0c6ks",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-zx0c6ks"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "mysql\u003e SELECT number, subject, AVG(score) FROM student_score GROUP BY subject;\nERROR 1055 (42000): Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'xiaohaizi.student_score.number' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by\nmysql\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-yvgm3ck",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-yvgm3ck"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可以看到出现了错误。为啥会错误呢？回想一下我们使用"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "GROUP BY"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "子句的初衷，我们只是想把记录分为若干组，然后再对各个组分别调用聚集函数去做一些统计工作。本例中的查询列表处放置了既非分组列、又非聚集函数的"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "number"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "列，那我们想表达啥意思呢？从各个分组中的记录中取一条记录的"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "number"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "列？该取分组中的哪条记录为好呢？比方说对于"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "'母猪的产后护理'"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "这个分组中的记录来说，该分组中有4条记录，那"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "number"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "列的值应该取"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "20180101"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，还是"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "20180102"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，还是"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "20180103"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，还是"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "20180104"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "呢？这个我们也不知道，也就是说把非分组列放到查询列表中会引起争议，导致结果不确定。基于此，设计MySQL的大叔才会为上述语句报错。"
				}
			]
		},
		{
			"ID": "20210708003510-7pm4b42",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-7pm4b42"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "::: tip"
				}
			]
		},
		{
			"ID": "20210708003510-pzgxsm8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-pzgxsm8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "小贴士： 其实"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "假如分组后的每个分组的所有记录的某个非分组列的值都一样"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，那我把该非分组列加入到查询列表中也没啥问题呀。比方说按照subject列进行分组后，假如在'母猪的产后护理'的分组中各条记录的number列的值都相同，在'论萨达姆的战争准备'的分组中各条记录的number列的值也都相同，那么我们把number列放在查询列表中也没啥问题。可能设计MySQL的大叔觉得这种说法也有点儿道理，他们提出了一个称之为"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "ONLY_FULL_GROUP_BY"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的SQL模式，当我们关闭这个SQL模式时，就允许把非分组列放到查询列表中。当然，什么是SQL模式，怎么开启和关闭这个称之为ONLY_FULL_GROUP_BY的SQL模式，不是我们初学者要考虑的问题，等以后大家变牛的时候可以再到文档中去查看。"
				}
			]
		},
		{
			"ID": "20210708003510-y1banfd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-y1banfd"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": ":::"
				}
			]
		},
		{
			"ID": "20210708003510-4pmaw7n",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-4pmaw7n"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "嵌套分组"
				}
			]
		},
		{
			"ID": "20210708003510-90o86hp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-90o86hp"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "有时候按照某个列进行分组太笼统，一个分组内可以被继续划分成更小的分组。比方说对于"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "student_info"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "表来说，我们可以先按照"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "department"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "来进行分组，所以可以被划分为2个分组。我们觉得这样按照"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "department"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "分组后，各个分组可以再按照"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "major"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "来继续分组，从而划分成更小的分组。"
				}
			]
		},
		{
			"ID": "20210708003510-6qq6mfz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-6qq6mfz"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "所以现在有了2个大分组，4个小分组，我们把这种对大的分组下继续分组的的情形叫做"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "嵌套分组"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。我们只需要在"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "GROUP BY"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "子句中把各个分组列依次写上，用逗号"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": ","
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "分隔开就好了。比如这样："
				}
			]
		},
		{
			"ID": "20210708003510-xf28sro",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-xf28sro"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "mysql\u003e SELECT department, major, COUNT(*) FROM student_info GROUP BY department, major;\n+-----------------+--------------------------+----------+\n| department      | major                    | COUNT(*) |\n+-----------------+--------------------------+----------+\n| 航天学院        | 电子信息                 |        1 |\n| 航天学院        | 飞行器设计               |        1 |\n| 计算机学院      | 计算机科学与工程         |        2 |\n| 计算机学院      | 软件工程                 |        2 |\n+-----------------+--------------------------+----------+\n4 rows in set (0.00 sec)\n\nmysql\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-bpu1n1a",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-bpu1n1a"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可以看到，在"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "嵌套分组"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "中，聚集函数将作用在"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "最后一个分组列"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "上，在这个例子中就是"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "major"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "列"
				}
			]
		},
		{
			"ID": "20210708003510-y8fi99r",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-y8fi99r"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "使用分组注意事项"
				}
			]
		},
		{
			"ID": "20210708003510-08ahpbn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-08ahpbn"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用分组来统计数据给我们带来了非常大的便利，但是要随时提防有坑的地方："
				}
			]
		},
		{
			"ID": "20210708003510-wusg1u4",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 42,
				"Padding": 4,
				"Marker": "Kg==",
				"Num": -1
			},
			"Properties": {
				"id": "20210708003510-wusg1u4"
			},
			"Children": [
				{
					"ID": "20210708003510-toglj6i",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-toglj6i"
					},
					"Children": [
						{
							"ID": "20210708003510-rmbpbiz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-rmbpbiz"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果分组列中含有"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "NULL"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "值，那么"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "NULL"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "也会作为一个独立的分组存在。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-nb4w03e",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-nb4w03e"
					},
					"Children": [
						{
							"ID": "20210708003510-lmjwk7c",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-lmjwk7c"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果存在多个分组列，也就是"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "嵌套分组"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "聚合函数将作用在最后的那个分组列上"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-3lpsgaq",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-3lpsgaq"
					},
					"Children": [
						{
							"ID": "20210708003510-9pzilbn",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-9pzilbn"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果查询语句中存在"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "WHERE"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "子句和"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "ORDER BY"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "子句，那么"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "GROUP BY"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "子句必须出现在"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "WHERE"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "子句之后，"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "ORDER BY"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "子句之前。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-y0q2f38",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-y0q2f38"
					},
					"Children": [
						{
							"ID": "20210708003510-6nx2l2w",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-6nx2l2w"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "GROUP BY"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "子句后也可以跟随"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "表达式"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "(但不能是聚集函数)。"
								}
							]
						},
						{
							"ID": "20210708003510-svg6svn",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-svg6svn"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "上边介绍的"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "GROUP BY"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "后跟随的都是表中的某个列或者某些列，其实一个表达式也可以，比如这样："
								}
							]
						},
						{
							"ID": "20210708003510-2bur4sr",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210708003510-2bur4sr"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker"
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "mysql\u003e SELECT concat('专业：', major), COUNT(*) FROM student_info GROUP BY concat('专业：', major);\n+-----------------------------------+----------+\n| concat('专业：', major)           | COUNT(*) |\n+-----------------------------------+----------+\n| 专业：电子信息                    |        1 |\n| 专业：计算机科学与工程            |        2 |\n| 专业：软件工程                    |        2 |\n| 专业：飞行器设计                  |        1 |\n+-----------------------------------+----------+\n4 rows in set (0.00 sec)\n\nmysql\u003e\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						},
						{
							"ID": "20210708003510-wlbvyyy",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-wlbvyyy"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "MySQL"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "会根据这个表达式的值来对记录进行分组，使用表达式进行分组的时候需要特别注意，查询列表中的表达式和"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "GROUP BY"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "子句中的表达式必须完全一样。不过一般情况下我们也不会用表达式进行分组，所以目前基本没啥用～"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-m3r4pew",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-m3r4pew"
					},
					"Children": [
						{
							"ID": "20210708003510-nuwtzku",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-nuwtzku"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "WHERE"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "子句和"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "HAVING"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "子句的区别。"
								}
							]
						},
						{
							"ID": "20210708003510-q9c57aw",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-q9c57aw"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "WHERE"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "子句在分组前进行过滤，作用于每一条记录，"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "WHERE"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "子句过滤掉的记录将不包括在分组中。而"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "HAVING"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "子句在数据分组后进行过滤，作用于整个分组。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-8dlbp7g",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-8dlbp7g"
					},
					"Children": [
						{
							"ID": "20210708003510-lnvcj7i",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-lnvcj7i"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "GROUP BY"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "子句中写了列的别名（MySQL 和 PostgreSQL 可以这样写，对查询做了增强）🔥"
								}
							]
						},
						{
							"ID": "20210708003510-f5d5k8x",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-f5d5k8x"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "由于SQL的执行顺序为SELECT最后，所以 SELECT 的别名不能用做GROUP BY中。但实际上 MySQL 可以！"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-2nwqmug",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-2nwqmug"
					},
					"Children": [
						{
							"ID": "20210708003510-414a5zp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-414a5zp"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "GROUP BY"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "子句的结果能排序吗？"
								}
							]
						},
						{
							"ID": "20210708003510-x3tws97",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-x3tws97"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "通常 SELECT 语句的执行结果的显示顺序都是"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "随机"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "的，需要排序则需在SELECT中指定"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-b2umegl",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-b2umegl"
					},
					"Children": [
						{
							"ID": "20210708003510-8cebnyp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-8cebnyp"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "DISTINCT"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "和"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "GROUP BY"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "都能够删除后续列中的重复数据。在“想要删除选择结果中的重复记录”时使用DISTINCT，在“想要计算汇总结果”时使用GROUP BY。不使用COUNT等聚合函数，而只使用GROUP BY子句的SELECT语句，会让人觉得奇怪"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-w5jpwxb",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-w5jpwxb"
					},
					"Children": [
						{
							"ID": "20210708003510-vkbx5gq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-vkbx5gq"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "在 SELECT 子句中书写了多余的列"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。使用聚合函数（其实是使用分组函数）时，SELECT 子句中只能存在以下三种元素："
								}
							]
						},
						{
							"ID": "20210708003510-0e27zqi",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 42,
								"Padding": 4,
								"Marker": "Kg==",
								"Num": -1
							},
							"Properties": {
								"id": "20210708003510-0e27zqi"
							},
							"Children": [
								{
									"ID": "20210708003510-rxokmr6",
									"Type": "NodeListItem",
									"Data": "*",
									"ListData": {
										"Tight": true,
										"BulletChar": 42,
										"Padding": 4,
										"Marker": "Kg==",
										"Num": -1
									},
									"Properties": {
										"id": "20210708003510-rxokmr6"
									},
									"Children": [
										{
											"ID": "20210708003510-tq17cay",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210708003510-tq17cay"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "常数：数字 123，或者字符串 '测试'，或日期"
												}
											]
										}
									]
								},
								{
									"ID": "20210708003510-290re0t",
									"Type": "NodeListItem",
									"Data": "*",
									"ListData": {
										"Tight": true,
										"BulletChar": 42,
										"Padding": 4,
										"Marker": "Kg==",
										"Num": -1
									},
									"Properties": {
										"id": "20210708003510-290re0t"
									},
									"Children": [
										{
											"ID": "20210708003510-uyl070g",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210708003510-uyl070g"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "聚合函数。"
												},
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "非分组列"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "不能单独出现在检索列表(SELECT)中(可以被放到聚集函数中)。"
												}
											]
										}
									]
								},
								{
									"ID": "20210708003510-25glkih",
									"Type": "NodeListItem",
									"Data": "*",
									"ListData": {
										"Tight": true,
										"BulletChar": 42,
										"Padding": 4,
										"Marker": "Kg==",
										"Num": -1
									},
									"Properties": {
										"id": "20210708003510-25glkih"
									},
									"Children": [
										{
											"ID": "20210708003510-8zqmpb1",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210708003510-8zqmpb1"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "GROUP BY子句中指定的列名(也就是"
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "聚合键"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": ")，其实应该是每组共有的。"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-jlkna2b",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708003510-jlkna2b"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "HAVING"
				}
			]
		},
		{
			"ID": "20210708003510-j70tn4o",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-j70tn4o"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "作用于分组的过滤条件 🔥"
				}
			]
		},
		{
			"ID": "20210708003510-1ep5kx0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-1ep5kx0"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "有时候某个带有"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "GROUP BY"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "子句的查询中可能会"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "产生非常多的分组"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，假设"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "student_score"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "表中存储了100门学科的成绩，也就是"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "subject"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "列中有100个不重复的值，那就会产生100个分组，也就意味着这个查询的结果集中会产生100条记录。如果我们不想在结果集中得到这么多记录，只想把那些符合某些条件的分组加入到结果集，从而减少结果集中记录的条数，那就需要把针对分组的条件放到"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "HAVING"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "子句了。比方说老师想要查询平均分大于"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "73"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "分的课程，就可以这么写"
				}
			]
		},
		{
			"ID": "20210708003510-diillrx",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-diillrx"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "mysql\u003e SELECT subject, AVG(score) FROM student_score GROUP BY subject HAVING AVG(score) \u003e 73;\n+-----------------------------+------------+\n| subject                     | AVG(score) |\n+-----------------------------+------------+\n| 论萨达姆的战争准备          |    73.2500 |\n+-----------------------------+------------+\n1 row in set (0.00 sec)\n\nmysql\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-cjd9ne1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-cjd9ne1"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其实这里所谓的"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "针对分组的条件"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "一般是指下边这两种："
				}
			]
		},
		{
			"ID": "20210708003510-jzacvvu",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 4,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210708003510-jzacvvu"
			},
			"Children": [
				{
					"ID": "20210708003510-0qms9x3",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 4,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-0qms9x3"
					},
					"Children": [
						{
							"ID": "20210708003510-ocse53w",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-ocse53w"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "分组列"
								}
							]
						},
						{
							"ID": "20210708003510-yr4icds",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-yr4icds"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "也就是说我们可以"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "把用于分组的列放到"
										},
										{
											"Type": "NodeCodeSpan",
											"CodeMarkerLen": 1,
											"Children": [
												{
													"Type": "NodeCodeSpanOpenMarker",
													"Data": "`"
												},
												{
													"Type": "NodeCodeSpanContent",
													"Data": "HAVING"
												},
												{
													"Type": "NodeCodeSpanCloseMarker",
													"Data": "`"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "子句的条件中"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，比如这样："
								}
							]
						},
						{
							"ID": "20210708003510-k4p3lad",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210708003510-k4p3lad"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker"
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "SELECT subject, AVG(score) FROM student_score GROUP BY subject having subject = '母猪的产后护理';\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-sy2gzte",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 4,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-sy2gzte"
					},
					"Children": [
						{
							"ID": "20210708003510-1af4pjg",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-1af4pjg"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "作用于"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "分组的聚集函数"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						},
						{
							"ID": "20210708003510-6duslap",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-6duslap"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "当然，并不是"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "HAVING"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "子句中只能放置在查询列表出现的那些聚集函数，"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "只要是针对这个分组进行统计的聚集函数"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "都可以，比方说老师想查询最高分大于98分的课程的平均分，可以这么写："
								}
							]
						},
						{
							"ID": "20210708003510-ga5b526",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210708003510-ga5b526"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker"
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "mysql\u003e SELECT subject, AVG(score) FROM student_score GROUP BY subject HAVING MAX(score) \u003e 98;\n+-----------------------+------------+\n| subject               | AVG(score) |\n+-----------------------+------------+\n| 母猪的产后护理        |    73.0000 |\n+-----------------------+------------+\n1 row in set (0.00 sec)\n\nmysql\u003e\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						},
						{
							"ID": "20210708003510-6rqvsme",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-6rqvsme"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "其中的"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "MAX(score)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "这个聚集函数并没有出现在查询列表中，但仍然可以作为"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "HAVING"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "子句中表达式的一部分。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-122hw9c",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-122hw9c"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "结果集过滤条件 🔥"
				}
			]
		},
		{
			"ID": "20210708003510-ass8dys",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-ass8dys"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当不使用 GROUP 时，WHERE 和 HAVING 的效果大致一样。不同在于："
				}
			]
		},
		{
			"ID": "20210708003510-a0rlxbb",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 42,
				"Padding": 4,
				"Marker": "Kg==",
				"Num": -1
			},
			"Properties": {
				"id": "20210708003510-a0rlxbb"
			},
			"Children": [
				{
					"ID": "20210708003510-mz23z1z",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-mz23z1z"
					},
					"Children": [
						{
							"ID": "20210708003510-8pedgjk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-8pedgjk"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "WHERE 是过滤磁盘数据"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-s7gvnj3",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-s7gvnj3"
					},
					"Children": [
						{
							"ID": "20210708003510-dkn7wlr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-dkn7wlr"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "HAVING 是过滤"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "内存中结果集"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "数据（如列别名）"
								}
							]
						},
						{
							"ID": "20210708003510-l52jhn8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-l52jhn8"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果在 WHERE 中使用别名则报错（没有该列），这时候就可以使用 HAVING 处理"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-lmz9tl7",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "c3Fs",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-lmz9tl7"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "select (price - outer_price) as a from good where a \u003e 100; -- 报错\nselect (price - outer_price) as a from good having a \u003e 100; -- 在HAVING子句中使用无集合条件可能效率不高。考虑将它们移至WHERE \n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-sdl2sr0",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-sdl2sr0"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "WHERE 和 HAVING 区别"
				}
			]
		},
		{
			"ID": "20210708003510-4j54eho",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 4,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210708003510-4j54eho"
			},
			"Children": [
				{
					"ID": "20210708003510-w5h5isr",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 4,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-w5h5isr"
					},
					"Children": [
						{
							"ID": "20210708003510-wk3fhp1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-wk3fhp1"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "WHERE：分组前过滤数据，指定行对应条件；HAVING：分组后过滤数据，指定组对应条件"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						},
						{
							"ID": "20210708003510-5ymmif6",
							"Type": "NodeList",
							"ListData": {
								"BulletChar": 45,
								"Padding": 4,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210708003510-5ymmif6"
							},
							"Children": [
								{
									"ID": "20210708003510-la55h42",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"BulletChar": 45,
										"Padding": 4,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210708003510-la55h42"
									},
									"Children": [
										{
											"ID": "20210708003510-bap0jr5",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210708003510-bap0jr5"
											},
											"Children": [
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "聚合键所对应的条件不应该书写在 HAVING 子句当中，而应该书写在 WHERE 子句当中"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "。"
												}
											]
										}
									]
								},
								{
									"ID": "20210708003510-52uerw1",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 4,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210708003510-52uerw1"
									},
									"Children": [
										{
											"ID": "20210708003510-uxyp664",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210708003510-uxyp664"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "通常情况下，"
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "将条件写在 WHERE 子句中要比写在 HAVING 子句中的处理速度更快"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "。"
												}
											]
										},
										{
											"ID": "20210708003510-fvoabld",
											"Type": "NodeList",
											"ListData": {
												"Tight": true,
												"BulletChar": 45,
												"Padding": 4,
												"Marker": "LQ==",
												"Num": -1
											},
											"Properties": {
												"id": "20210708003510-fvoabld"
											},
											"Children": [
												{
													"ID": "20210708003510-xreqawy",
													"Type": "NodeListItem",
													"Data": "-",
													"ListData": {
														"Tight": true,
														"BulletChar": 45,
														"Padding": 4,
														"Marker": "LQ==",
														"Num": -1
													},
													"Properties": {
														"id": "20210708003510-xreqawy"
													},
													"Children": [
														{
															"ID": "20210708003510-79fqqks",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20210708003510-79fqqks"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "使用 COUNT 函数等对表中的数据进行"
																},
																{
																	"Type": "NodeStrong",
																	"Children": [
																		{
																			"Type": "NodeStrongA6kOpenMarker",
																			"Data": "**"
																		},
																		{
																			"Type": "NodeText",
																			"Data": "聚合"
																		},
																		{
																			"Type": "NodeStrongA6kCloseMarker",
																			"Data": "**"
																		}
																	]
																},
																{
																	"Type": "NodeText",
																	"Data": "操作时，DBMS 内部就会进行"
																},
																{
																	"Type": "NodeStrong",
																	"Children": [
																		{
																			"Type": "NodeStrongA6kOpenMarker",
																			"Data": "**"
																		},
																		{
																			"Type": "NodeText",
																			"Data": "排序"
																		},
																		{
																			"Type": "NodeStrongA6kCloseMarker",
																			"Data": "**"
																		}
																	]
																},
																{
																	"Type": "NodeText",
																	"Data": "处理。"
																},
																{
																	"Type": "NodeStrong",
																	"Children": [
																		{
																			"Type": "NodeStrongA6kOpenMarker",
																			"Data": "**"
																		},
																		{
																			"Type": "NodeText",
																			"Data": "排序处理是会大大增加机器负担的高负荷的处理"
																		},
																		{
																			"Type": "NodeStrongA6kCloseMarker",
																			"Data": "**"
																		}
																	]
																},
																{
																	"Type": "NodeText",
																	"Data": " 。因此，只有尽可能减少排序的行数，才能提高处理速度。通过 WHERE 子句指定条件时，由于排序之前就对数据进行了过滤，因此能够减少排序的数据量。"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20210708003510-ml8kr36",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 4,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210708003510-ml8kr36"
									},
									"Children": [
										{
											"ID": "20210708003510-vntrd55",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210708003510-vntrd55"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "可以对 WHERE 子句指定条件所对应的列"
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "创建索引"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "，这样也可以大幅提高处理速度。"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-i2en5ez",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 4,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-i2en5ez"
					},
					"Children": [
						{
							"ID": "20210708003510-nqm1eul",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-nqm1eul"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "见结果集过滤条件"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-71wvjas",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 4,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-71wvjas"
					},
					"Children": [
						{
							"ID": "20210708003510-v8duepm",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-v8duepm"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "WHERE后不可以使用聚合函数，HAVING后可以使用聚合函数"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						},
						{
							"ID": "20210708003510-ct6hloo",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "c3Fs",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210708003510-ct6hloo"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "c3Fs"
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "SELECT deptno, COUNT(*) FROM emp GROUP BY deptno HAVING COUNT(*) \u003e 3;-- 以部门分组...。条件为记录数大于3\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-rfiy78c",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 4,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-rfiy78c"
					},
					"Children": [
						{
							"ID": "20210708003510-87n3cs9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-87n3cs9"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "HAVING 子句中能够使用的 3 种要素如下所示："
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-2bcbz9e",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 4,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-2bcbz9e"
					},
					"Children": [
						{
							"ID": "20210708003510-w1doyai",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 45,
								"Padding": 4,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210708003510-w1doyai"
							},
							"Children": [
								{
									"ID": "20210708003510-4t0t2io",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 4,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210708003510-4t0t2io"
									},
									"Children": [
										{
											"ID": "20210708003510-8pcdvq9",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210708003510-8pcdvq9"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "常数：数字 123，或者字符串 '测试'，或日期"
												}
											]
										}
									]
								},
								{
									"ID": "20210708003510-m3euf6r",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 4,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210708003510-m3euf6r"
									},
									"Children": [
										{
											"ID": "20210708003510-alak3l9",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210708003510-alak3l9"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "聚合函数"
												}
											]
										}
									]
								},
								{
									"ID": "20210708003510-7zaaflk",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 4,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210708003510-7zaaflk"
									},
									"Children": [
										{
											"ID": "20210708003510-4kgtplw",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210708003510-4kgtplw"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "GROUP BY子句中指定的列名(也就是"
												},
												{
													"Type": "NodeStrong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "聚合键"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": ")"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-oucqrrq",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708003510-oucqrrq"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "排序"
				}
			]
		},
		{
			"ID": "20210708003510-5lpcfm4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-5lpcfm4"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们之前查询"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "number"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "列的时候得到的记录并不是有序的，这是为什么呢？"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "MySQL"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "其实"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "默认会按照这些数据底层存储的顺序来给我们返回数据"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，但是这些数据"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "可能会经过更新或者删除"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，如果我们不明确指定按照什么顺序来排序返回结果的话，那我们可以认为该结果中记录的顺序是不确定的。换句话说如果我们想让返回结果中的记录按照某种特定的规则排序，那我们必须显式的指定排序规则。"
				}
			]
		},
		{
			"ID": "20210708003510-1dyxsta",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-1dyxsta"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "通常，从表中抽取数据时，如果没有特别指定顺序，最终排列顺序便无从得知"
				}
			]
		},
		{
			"ID": "20210708003510-r22i6t2",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-r22i6t2"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "升序"
				}
			]
		},
		{
			"ID": "20210708003510-y3ff2az",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-y3ff2az"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "ascendent"
				}
			]
		},
		{
			"ID": "20210708003510-n45prke",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "c3Fs",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-n45prke"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "SELECT * FROM student_score ORDER BY score ASC; -- ASC可以省略\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-p8qcg0m",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-p8qcg0m"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "降序"
				}
			]
		},
		{
			"ID": "20210708003510-kwabfnj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-kwabfnj"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "descendent"
				}
			]
		},
		{
			"ID": "20210708003510-l2e8h30",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "c3Fs",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-l2e8h30"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "SELECT * FROM student_score ORDER BY score DESC; -- DESC不能省略\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-dnkl6nz",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-dnkl6nz"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "多字段作为排序条件"
				}
			]
		},
		{
			"ID": "20210708003510-rrl46e2",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "c3Fs",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-rrl46e2"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "SELECT * FROM student_score ORDER BY subject, score DESC; -- 按 subject 升序排，如果 subject 相同，按 score 降序排\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-9snl2hk",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-9snl2hk"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "注意"
				}
			]
		},
		{
			"ID": "20210708003510-0v6rhe9",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 4,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210708003510-0v6rhe9"
			},
			"Children": [
				{
					"ID": "20210708003510-e8su7w7",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 4,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-e8su7w7"
					},
					"Children": [
						{
							"ID": "20210708003510-hgl95pj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-hgl95pj"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "排序键中包含 NULL 时，会在开头或末尾进行汇总。"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-h6ttgzy",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 4,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-h6ttgzy"
					},
					"Children": [
						{
							"ID": "20210708003510-7u8agcp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-7u8agcp"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "在 ORDER BY 子句中可以使用 SELECT 子句中定义的别名。"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "与SQL执行顺序有关！"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-b0mq6wq",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 4,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-b0mq6wq"
					},
					"Children": [
						{
							"ID": "20210708003510-5fx4k6h",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-5fx4k6h"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在 ORDER BY 子句中可以使用 SELECT 子句中未使用的列和聚合函数。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-pxrtz4y",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 4,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-pxrtz4y"
					},
					"Children": [
						{
							"ID": "20210708003510-12oh5uo",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-12oh5uo"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在 ORDER BY 子句中"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "不要使用列编号"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：阅读困难；该功能将会删除"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-9a3rtgy",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 4,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-9a3rtgy"
					},
					"Children": [
						{
							"ID": "20210708003510-j4mxihz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-j4mxihz"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "对于数字的排序还是很好理解的，但是字符串怎么排序呢？"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "大写的A和小写的a哪个大哪个小？这个问题涉及到字符串使用的编码方式以及字符串排序规则"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，我们之后会详细的介绍它们，现在你只需要知道排序的语法就好了。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-erroy8m",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708003510-erroy8m"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "限制查询结果条数—分页"
				}
			]
		},
		{
			"ID": "20210708003510-kwhp6j6",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-kwhp6j6"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "简介"
				}
			]
		},
		{
			"ID": "20210708003510-y0keqjd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-y0keqjd"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "有时候查询结果的条数会很多，都显示出来可能会撑爆屏幕～ 所以"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "MySQL"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "给我们提供了一种限制结果集中的记录条数的方式，就是在查询语句的末尾使用这样的语法："
				}
			]
		},
		{
			"ID": "20210708003510-79h1say",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-79h1say"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "LIMIT 开始行, 限制条数;\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-ady7wlw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-ady7wlw"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "开始行"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "指的是我们想从第几行数据开始查询，"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "限制条数"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "是结果集中最多包含多少条记录。"
				}
			]
		},
		{
			"ID": "20210708003510-gjs1sxu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-gjs1sxu"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "::: tip"
				}
			]
		},
		{
			"ID": "20210708003510-qig3w1h",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-qig3w1h"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "小贴士： 在生活中通常都是从1开始计数的，而在计算机中都是从0开始计数的，所以我们平时所说的第1条记录在计算机中算是第0条。比如"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "student_info"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "表里的6条记录在计算机中依次表示为：第0条、第1条、第2条、第3条、第4条、第5条。"
				}
			]
		},
		{
			"ID": "20210708003510-2afsn2c",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-2afsn2c"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": ":::"
				}
			]
		},
		{
			"ID": "20210708003510-k8nyxtk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-k8nyxtk"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "MySQL、PostgreSQL、MariaDB 和 SQLite方言LIMIT用来限定查询结果的"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "起始索引（从0开始）"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，以及"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "总行数"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "："
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeCodeSpan",
							"CodeMarkerLen": 1,
							"Children": [
								{
									"Type": "NodeCodeSpanOpenMarker",
									"Data": "`"
								},
								{
									"Type": "NodeCodeSpanContent",
									"Data": "开始的索引 = (当前页-1) \\* 每页记录数"
								},
								{
									"Type": "NodeCodeSpanCloseMarker",
									"Data": "`"
								}
							]
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-f4rxnu3",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "c3Fs",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-f4rxnu3"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "/*1. 一页的记录数：10行;2. 查询第3页*/\nselect * from emp limit 20, 10;\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-l34ptrc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-l34ptrc"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "第一个参数是0可以省略"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "；最后不足总行数的话，有多少显示多少。"
				}
			]
		},
		{
			"ID": "20210708003510-8garj6t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-8garj6t"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果是 Oracle，你需要基于 ROWNUM 来统计行数"
				}
			]
		},
		{
			"ID": "20210708003510-et1snmy",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "c3Fs",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-et1snmy"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "SELECT name, hp_max \nFROM (SELECT name, hp_max \n      FROM heros \n      ORDER BY hp_max) \nWHERE ROWNUM \u003c=5\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-554ajmx",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-554ajmx"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "注意"
				}
			]
		},
		{
			"ID": "20210708003510-4v37go2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-4v37go2"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果指定的"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "开始行"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "大于结果中的行数，那查询结果就什么都没有："
				}
			]
		},
		{
			"ID": "20210708003510-hhhjy0i",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-hhhjy0i"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "mysql\u003e SELECT number, name, id_number, major FROM student_info LIMIT 6, 2;\nEmpty set (0.00 sec)\n\nmysql\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-vfewebv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-vfewebv"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果查询的结果条数不超过"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "限制条数"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，那就可以全部显式出来："
				}
			]
		},
		{
			"ID": "20210708003510-iyb9b30",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-iyb9b30"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "mysql\u003e SELECT number, name, id_number, major FROM student_info LIMIT 4, 3;\n+----------+-----------+--------------------+-----------------+\n| number   | name      | id_number          | major           |\n+----------+-----------+--------------------+-----------------+\n| 20180105 | 范剑      | 181048199308156368 | 飞行器设计      |\n| 20180106 | 朱逸群    | 197995199501078445 | 电子信息        |\n+----------+-----------+--------------------+-----------------+\n2 rows in set (0.00 sec)\n\nmysql\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-967btc1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-967btc1"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "从第4条开始的记录有两条，"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "限制条数"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "为3，所以这两条记录都可以被展示在结果集中。"
				}
			]
		},
		{
			"ID": "20210708003510-cmz97ya",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708003510-cmz97ya"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "=========="
				}
			]
		},
		{
			"ID": "20210708003510-74mkqhc",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708003510-74mkqhc"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "表达式"
				}
			]
		},
		{
			"ID": "20210708003510-66aqt24",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-66aqt24"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "操作数"
				}
			]
		},
		{
			"ID": "20210708003510-6nz9osf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-6nz9osf"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "MySQL"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "中"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "操作数"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "可以是下边这几种类型："
				}
			]
		},
		{
			"ID": "20210708003510-lp8bv31",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20210708003510-lp8bv31"
			},
			"Children": [
				{
					"ID": "20210708003510-k5b234m",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20210708003510-k5b234m"
					},
					"Children": [
						{
							"ID": "20210708003510-1ix7mwc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-1ix7mwc"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "常数"
								}
							]
						},
						{
							"ID": "20210708003510-yqxfgp2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-yqxfgp2"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "常数很好理解，我们平时用到的"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "数字、字符串、时间"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "值什么的都可以被称为常数，它是一个确定的值，比如数字"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "1"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，字符串"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "'abc'"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，时间值"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "2019-08-16 17:10:43"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "啥的。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-5r9vwfl",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20210708003510-5r9vwfl"
					},
					"Children": [
						{
							"ID": "20210708003510-76idnlo",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-76idnlo"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "列名"
								}
							]
						},
						{
							"ID": "20210708003510-qb1yw6r",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-qb1yw6r"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "针对某个具体的表，它的列名可以被当作表达式的一部分，比如对于"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "student_info"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "表来说，"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "number"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "、"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "name"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "都可以作为"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "操作数"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-ydnbym2",
					"Type": "NodeListItem",
					"Data": "3",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 3,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mw==",
						"Num": 3
					},
					"Properties": {
						"id": "20210708003510-ydnbym2"
					},
					"Children": [
						{
							"ID": "20210708003510-s90s4nf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-s90s4nf"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "函数调用"
								}
							]
						},
						{
							"ID": "20210708003510-cfhpln4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-cfhpln4"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "MySQL"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "中有"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "函数"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "的概念，比方说获取当前时间的函数"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "NOW"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，而在函数后边加个小括号就算是一个"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "函数调用"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，比如"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "NOW()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						},
						{
							"ID": "20210708003510-4txbcl4",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210708003510-4txbcl4"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker"
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "如果你不清楚函数的概念，我们之后会详细唠叨的，现在不知道也可以～\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-mqngfnr",
					"Type": "NodeListItem",
					"Data": "4",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 4,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "NA==",
						"Num": 4
					},
					"Properties": {
						"id": "20210708003510-mqngfnr"
					},
					"Children": [
						{
							"ID": "20210708003510-oj05d4u",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-oj05d4u"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "标量子查询或者行子查询"
								}
							]
						},
						{
							"ID": "20210708003510-k63ujqx",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-k63ujqx"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "这个子查询我们稍后会详细唠叨的～"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-n14zyt3",
					"Type": "NodeListItem",
					"Data": "5",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 5,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "NQ==",
						"Num": 5
					},
					"Properties": {
						"id": "20210708003510-n14zyt3"
					},
					"Children": [
						{
							"ID": "20210708003510-rfk1b5u",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-rfk1b5u"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "其他表达式"
								}
							]
						},
						{
							"ID": "20210708003510-ccvdwtr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-ccvdwtr"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "一个表达式也可以作为一个操作数与另一个操作数来形成一个更复杂的表达式，比方说（假设"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "col"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "是一个列名）："
								}
							]
						},
						{
							"ID": "20210708003510-w5ks3ef",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 45,
								"Padding": 4,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210708003510-w5ks3ef"
							},
							"Children": [
								{
									"ID": "20210708003510-g2v19g1",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 4,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210708003510-g2v19g1"
									},
									"Children": [
										{
											"ID": "20210708003510-9ub9bvm",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210708003510-9ub9bvm"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "(col - 5) / 3"
												}
											]
										}
									]
								},
								{
									"ID": "20210708003510-eat27ta",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 4,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210708003510-eat27ta"
									},
									"Children": [
										{
											"ID": "20210708003510-259iq87",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210708003510-259iq87"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "(1 + 1) * 2 + col * 3"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-ioiqllw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-ioiqllw"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "::: tip"
				}
			]
		},
		{
			"ID": "20210708003510-pzt8xyh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-pzt8xyh"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "小贴士： 当然，可以作为操作数的东西不止这么几种，不过我们这是一个入门书籍，大家在熟练使用MySQL后再到文档中查看更多的操作数类型吧。"
				}
			]
		},
		{
			"ID": "20210708003510-fq8qqq7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-fq8qqq7"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": ":::"
				}
			]
		},
		{
			"ID": "20210708003510-kbf3cfh",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-kbf3cfh"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "操作符"
				}
			]
		},
		{
			"ID": "20210708003510-s7817hy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-s7817hy"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对于小白的我们来说，目前熟悉掌握下边三种操作符就应该够用了："
				}
			]
		},
		{
			"ID": "20210708003510-5vagsyd",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20210708003510-5vagsyd"
			},
			"Children": [
				{
					"ID": "20210708003510-juykhwj",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20210708003510-juykhwj"
					},
					"Children": [
						{
							"ID": "20210708003510-wlquw53",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-wlquw53"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "算术操作符"
								}
							]
						},
						{
							"ID": "20210708003510-zq2if2z",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-zq2if2z"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "就是加减乘除法那一堆，我们看一下"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "MySQL"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "中都支持哪些："
								}
							]
						},
						{
							"ID": "20210708003510-09iglji",
							"Type": "NodeTable",
							"Data": "| 操作符 | 示例      | 描述                 |\n| ------ | --------- | -------------------- |\n| `+`    | `a + b`   | 加法                 |\n| `-`    | `a - b`   | 减法                 |\n| `*`    | `a * b`   | 乘法                 |\n| `/`    | `a / b`   | 除法                 |\n| `DIV`  | `a DIV b` | 除法，取商的整数部分 |\n| `%`    | `a % b`   | 取余                 |\n| `-`    | `-a`      | 负号                 |",
							"TableAligns": [
								0,
								0,
								0
							],
							"Properties": {
								"id": "20210708003510-09iglji"
							},
							"Children": [
								{
									"Type": "NodeTableHead",
									"Children": [
										{
											"Type": "NodeTableRow",
											"Children": [
												{
													"Type": "NodeTableCell",
													"Children": [
														{
															"Type": "NodeText",
															"Data": "操作符"
														}
													]
												},
												{
													"Type": "NodeTableCell",
													"Children": [
														{
															"Type": "NodeText",
															"Data": "示例"
														}
													]
												},
												{
													"Type": "NodeTableCell",
													"Children": [
														{
															"Type": "NodeText",
															"Data": "描述"
														}
													]
												}
											]
										}
									]
								},
								{
									"Type": "NodeTableRow",
									"TableAligns": [
										0,
										0,
										0
									],
									"Children": [
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "+"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "a + b"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeText",
													"Data": "加法"
												}
											]
										}
									]
								},
								{
									"Type": "NodeTableRow",
									"TableAligns": [
										0,
										0,
										0
									],
									"Children": [
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "-"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "a - b"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeText",
													"Data": "减法"
												}
											]
										}
									]
								},
								{
									"Type": "NodeTableRow",
									"TableAligns": [
										0,
										0,
										0
									],
									"Children": [
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "*"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "a * b"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeText",
													"Data": "乘法"
												}
											]
										}
									]
								},
								{
									"Type": "NodeTableRow",
									"TableAligns": [
										0,
										0,
										0
									],
									"Children": [
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "/"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "a / b"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeText",
													"Data": "除法"
												}
											]
										}
									]
								},
								{
									"Type": "NodeTableRow",
									"TableAligns": [
										0,
										0,
										0
									],
									"Children": [
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "DIV"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "a DIV b"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeText",
													"Data": "除法，取商的整数部分"
												}
											]
										}
									]
								},
								{
									"Type": "NodeTableRow",
									"TableAligns": [
										0,
										0,
										0
									],
									"Children": [
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "%"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "a % b"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeText",
													"Data": "取余"
												}
											]
										}
									]
								},
								{
									"Type": "NodeTableRow",
									"TableAligns": [
										0,
										0,
										0
									],
									"Children": [
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "-"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "-a"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeText",
													"Data": "负号"
												}
											]
										}
									]
								}
							]
						},
						{
							"ID": "20210708003510-20rfz7z",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-20rfz7z"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在使用"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "MySQL"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "中的"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "算术操作符"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "时需要注意，"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "DIV"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "和"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "/"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "都表示除法操作符，但是"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "DIV"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "只会取商的整数部分，"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "/"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "会保留商的小数部分。比如表达式 "
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "2 DIV 3"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "的结果是"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "0"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，而"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "2 / 3"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "的结果是"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "0.6667"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-k3i6clt",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20210708003510-k3i6clt"
					},
					"Children": [
						{
							"ID": "20210708003510-08e6ddu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-08e6ddu"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "比较操作符"
								}
							]
						},
						{
							"ID": "20210708003510-y0q1q38",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-y0q1q38"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "就是在"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "搜索条件"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "中我们已经看过的"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "比较操作符"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，我们把常用的都抄下来看一下："
								}
							]
						},
						{
							"ID": "20210708003510-h6ilix5",
							"Type": "NodeTable",
							"Data": "| 操作符        | 示例                     | 描述                          |\n| ------------- | ------------------------ | ----------------------------- |\n| `=`           | `a = b`                  | a等于b                        |\n| `\u003c\u003e`或者`!=`  | `a \u003c\u003e b`                 | a不等于b                      |\n| `\u003c`           | `a \u003c b`                  | a小于b                        |\n| `\u003c=`          | `a \u003c= b`                 | a小于或等于b                  |\n| `\u003e`           | `a \u003e b`                  | a大于b                        |\n| `\u003e=`          | `a \u003e= b`                 | a大于或等于b                  |\n| `BETWEEN`     | `a BETWEEN b AND c`      | 满足 b \u003c= a \u003c= c              |\n| `NOT BETWEEN` | `a NOT BETWEEN b AND c`  | 不满足 b \u003c= a \u003c= c            |\n| `IN`          | `a IN (b1, b2, ...)`     | a是b1, b2, ... 中的某一个     |\n| `NOT IN`      | `a NOT IN (b1, b2, ...)` | a不是b1, b2, ... 中的任意一个 |\n| `IS NULL`     | `a IS NULL`              | a的值是`NULL`                 |\n| `IS NOT NULL` | `a IS NOT NULL`          | a的值不是`NULL`               |\n| `LIKE`        | `a LIKE b`               | a匹配b                        |\n| `NOT LIKE`    | `a NOT LIKE b`           | a不匹配b                      |",
							"TableAligns": [
								0,
								0,
								0
							],
							"Properties": {
								"id": "20210708003510-h6ilix5"
							},
							"Children": [
								{
									"Type": "NodeTableHead",
									"Children": [
										{
											"Type": "NodeTableRow",
											"Children": [
												{
													"Type": "NodeTableCell",
													"Children": [
														{
															"Type": "NodeText",
															"Data": "操作符"
														}
													]
												},
												{
													"Type": "NodeTableCell",
													"Children": [
														{
															"Type": "NodeText",
															"Data": "示例"
														}
													]
												},
												{
													"Type": "NodeTableCell",
													"Children": [
														{
															"Type": "NodeText",
															"Data": "描述"
														}
													]
												}
											]
										}
									]
								},
								{
									"Type": "NodeTableRow",
									"TableAligns": [
										0,
										0,
										0
									],
									"Children": [
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "="
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "a = b"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeText",
													"Data": "a等于b"
												}
											]
										}
									]
								},
								{
									"Type": "NodeTableRow",
									"TableAligns": [
										0,
										0,
										0
									],
									"Children": [
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "\u003c\u003e"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "或者"
												},
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "!="
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "a \u003c\u003e b"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeText",
													"Data": "a不等于b"
												}
											]
										}
									]
								},
								{
									"Type": "NodeTableRow",
									"TableAligns": [
										0,
										0,
										0
									],
									"Children": [
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "\u003c"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "a \u003c b"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeText",
													"Data": "a小于b"
												}
											]
										}
									]
								},
								{
									"Type": "NodeTableRow",
									"TableAligns": [
										0,
										0,
										0
									],
									"Children": [
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "\u003c="
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "a \u003c= b"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeText",
													"Data": "a小于或等于b"
												}
											]
										}
									]
								},
								{
									"Type": "NodeTableRow",
									"TableAligns": [
										0,
										0,
										0
									],
									"Children": [
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "\u003e"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "a \u003e b"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeText",
													"Data": "a大于b"
												}
											]
										}
									]
								},
								{
									"Type": "NodeTableRow",
									"TableAligns": [
										0,
										0,
										0
									],
									"Children": [
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "\u003e="
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "a \u003e= b"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeText",
													"Data": "a大于或等于b"
												}
											]
										}
									]
								},
								{
									"Type": "NodeTableRow",
									"TableAligns": [
										0,
										0,
										0
									],
									"Children": [
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "BETWEEN"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "a BETWEEN b AND c"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeText",
													"Data": "满足 b \u003c= a \u003c= c"
												}
											]
										}
									]
								},
								{
									"Type": "NodeTableRow",
									"TableAligns": [
										0,
										0,
										0
									],
									"Children": [
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "NOT BETWEEN"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "a NOT BETWEEN b AND c"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeText",
													"Data": "不满足 b \u003c= a \u003c= c"
												}
											]
										}
									]
								},
								{
									"Type": "NodeTableRow",
									"TableAligns": [
										0,
										0,
										0
									],
									"Children": [
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "IN"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "a IN (b1, b2, ...)"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeText",
													"Data": "a是b1, b2, ... 中的某一个"
												}
											]
										}
									]
								},
								{
									"Type": "NodeTableRow",
									"TableAligns": [
										0,
										0,
										0
									],
									"Children": [
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "NOT IN"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "a NOT IN (b1, b2, ...)"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeText",
													"Data": "a不是b1, b2, ... 中的任意一个"
												}
											]
										}
									]
								},
								{
									"Type": "NodeTableRow",
									"TableAligns": [
										0,
										0,
										0
									],
									"Children": [
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "IS NULL"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "a IS NULL"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeText",
													"Data": "a的值是"
												},
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "NULL"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										}
									]
								},
								{
									"Type": "NodeTableRow",
									"TableAligns": [
										0,
										0,
										0
									],
									"Children": [
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "IS NOT NULL"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "a IS NOT NULL"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeText",
													"Data": "a的值不是"
												},
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "NULL"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										}
									]
								},
								{
									"Type": "NodeTableRow",
									"TableAligns": [
										0,
										0,
										0
									],
									"Children": [
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "LIKE"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "a LIKE b"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeText",
													"Data": "a匹配b"
												}
											]
										}
									]
								},
								{
									"Type": "NodeTableRow",
									"TableAligns": [
										0,
										0,
										0
									],
									"Children": [
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "NOT LIKE"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "a NOT LIKE b"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeText",
													"Data": "a不匹配b"
												}
											]
										}
									]
								}
							]
						},
						{
							"ID": "20210708003510-39kjkl2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-39kjkl2"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "由"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "比较操作符"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "连接而成的表达式也称为"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "布尔表达式"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，表示"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "真"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "或者"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "假"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，也可以称为"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "TRUE"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "或者"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "FALSE"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。比如"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "1 \u003e 3"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "就代表"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "FALSE"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "3 != 2"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "就代表"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "TRUE"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-k0jof67",
					"Type": "NodeListItem",
					"Data": "3",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 3,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mw==",
						"Num": 3
					},
					"Properties": {
						"id": "20210708003510-k0jof67"
					},
					"Children": [
						{
							"ID": "20210708003510-gemrpwn",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-gemrpwn"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "逻辑操作符"
								}
							]
						},
						{
							"ID": "20210708003510-f58vbrc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-f58vbrc"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "逻辑操作符是用来将多个"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "布尔表达式"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "连接起来，我们需要了解这几个"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "逻辑操作符"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "："
								}
							]
						},
						{
							"ID": "20210708003510-b34eqc6",
							"Type": "NodeTable",
							"Data": "| 操作符 | 示例      | 描述                                 |\n| ------ | --------- | ------------------------------------ |\n| `AND`  | `a AND b` | 只有a和b同时为真，表达式才为真       |\n| `OR`   | `a OR b`  | 只要a或b有任意一个为真，表达式就为真 |\n| `XOR`  | `a XOR b` | a和b有且只有一个为真，表达式为真     |",
							"TableAligns": [
								0,
								0,
								0
							],
							"Properties": {
								"id": "20210708003510-b34eqc6"
							},
							"Children": [
								{
									"Type": "NodeTableHead",
									"Children": [
										{
											"Type": "NodeTableRow",
											"Children": [
												{
													"Type": "NodeTableCell",
													"Children": [
														{
															"Type": "NodeText",
															"Data": "操作符"
														}
													]
												},
												{
													"Type": "NodeTableCell",
													"Children": [
														{
															"Type": "NodeText",
															"Data": "示例"
														}
													]
												},
												{
													"Type": "NodeTableCell",
													"Children": [
														{
															"Type": "NodeText",
															"Data": "描述"
														}
													]
												}
											]
										}
									]
								},
								{
									"Type": "NodeTableRow",
									"TableAligns": [
										0,
										0,
										0
									],
									"Children": [
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "AND"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "a AND b"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeText",
													"Data": "只有a和b同时为真，表达式才为真"
												}
											]
										}
									]
								},
								{
									"Type": "NodeTableRow",
									"TableAligns": [
										0,
										0,
										0
									],
									"Children": [
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "OR"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "a OR b"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeText",
													"Data": "只要a或b有任意一个为真，表达式就为真"
												}
											]
										}
									]
								},
								{
									"Type": "NodeTableRow",
									"TableAligns": [
										0,
										0,
										0
									],
									"Children": [
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "XOR"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeCodeSpan",
													"CodeMarkerLen": 1,
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker",
															"Data": "`"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "a XOR b"
														},
														{
															"Type": "NodeCodeSpanCloseMarker",
															"Data": "`"
														}
													]
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"Children": [
												{
													"Type": "NodeText",
													"Data": "a和b有且只有一个为真，表达式为真"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-os31atw",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-os31atw"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "表达式的使用"
				}
			]
		},
		{
			"ID": "20210708003510-d4kr643",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-d4kr643"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "只要把这些"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "操作数"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "操作符"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "相互组合起来就可以组成一个"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "表达式"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "表达式"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "主要以下边这两种方式使用："
				}
			]
		},
		{
			"ID": "20210708003510-d2k8oxm",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20210708003510-d2k8oxm"
			},
			"Children": [
				{
					"ID": "20210708003510-v60yexd",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20210708003510-v60yexd"
					},
					"Children": [
						{
							"ID": "20210708003510-rn11bw9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-rn11bw9"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "放在查询列表中"
								}
							]
						},
						{
							"ID": "20210708003510-s02u835",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-s02u835"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "我们前边都是将列名放在查询列表中的("
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "*"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "号代表所有的列名～)。列名只是"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "表达式"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "中超级简单的一种，我们可以将任意一个表达式作为查询列表的一部分来处理，比方说我们可以在查询"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "student_score"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "表时把"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "score"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "字段的数据都加"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "100"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，就像这样："
								}
							]
						},
						{
							"ID": "20210708003510-63t1pwk",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210708003510-63t1pwk"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker"
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "mysql\u003e SELECT  number, subject, score + 100 FROM student_score;\n+----------+-----------------------------+-------------+\n| number   | subject                     | score + 100 |\n+----------+-----------------------------+-------------+\n| 20180101 | 母猪的产后护理              |         178 |\n| 20180101 | 论萨达姆的战争准备          |         188 |\n| 20180102 | 母猪的产后护理              |         200 |\n| 20180102 | 论萨达姆的战争准备          |         198 |\n| 20180103 | 母猪的产后护理              |         159 |\n| 20180103 | 论萨达姆的战争准备          |         161 |\n| 20180104 | 母猪的产后护理              |         155 |\n| 20180104 | 论萨达姆的战争准备          |         146 |\n+----------+-----------------------------+-------------+\n8 rows in set (0.00 sec)\n\nmysql\u003e\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						},
						{
							"ID": "20210708003510-zv3aztd",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-zv3aztd"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "其中的"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "number"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "、"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "subject"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "、"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "score + 100"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "都是表达式，结果集中的列的名称也将默认使用这些表达式的名称，所以如果你觉得原名称不好，我们可以使用别名："
								}
							]
						},
						{
							"ID": "20210708003510-5ptq851",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210708003510-5ptq851"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker"
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "mysql\u003e SELECT  number, subject, score + 100 AS score FROM student_score;\n+----------+-----------------------------+-------+\n| number   | subject                     | score |\n+----------+-----------------------------+-------+\n| 20180101 | 母猪的产后护理              |   178 |\n| 20180101 | 论萨达姆的战争准备          |   188 |\n| 20180102 | 母猪的产后护理              |   200 |\n| 20180102 | 论萨达姆的战争准备          |   198 |\n| 20180103 | 母猪的产后护理              |   159 |\n| 20180103 | 论萨达姆的战争准备          |   161 |\n| 20180104 | 母猪的产后护理              |   155 |\n| 20180104 | 论萨达姆的战争准备          |   146 |\n+----------+-----------------------------+-------+\n8 rows in set (0.00 sec)\n\nmysql\u003e\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						},
						{
							"ID": "20210708003510-eq82hu9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-eq82hu9"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "这样"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "score + 100"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "列就可以按照别名"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "score"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "来展示了！"
								}
							]
						},
						{
							"ID": "20210708003510-r0fxgru",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-r0fxgru"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "需要注意的是，放在查询列表的表达式也可以不涉及列名，就像这样："
								}
							]
						},
						{
							"ID": "20210708003510-aknuwk4",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210708003510-aknuwk4"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker"
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "mysql\u003e SELECT 1 FROM student_info;\n+---+\n| 1 |\n+---+\n| 1 |\n| 1 |\n| 1 |\n| 1 |\n| 1 |\n| 1 |\n+---+\n6 rows in set (0.01 sec)\n\nmysql\u003e\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						},
						{
							"ID": "20210708003510-tfnfc7j",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-tfnfc7j"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "因为"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "student_info"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "中有6条记录，所以结果集中也就展示了6条结果，不过我们的查询列表处只有一个常数"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "1"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，所以所有的结果的值也都是常数"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "1"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。这种查询列表中不涉及列名的情况下，我们甚至可以省略掉"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "FROM"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "子句后边的表名，就像这样："
								}
							]
						},
						{
							"ID": "20210708003510-skt3jxq",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210708003510-skt3jxq"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker"
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "mysql\u003e SELECT 1;\n+---+\n| 1 |\n+---+\n| 1 |\n+---+\n1 row in set (0.00 sec)\n\nmysql\u003e\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						},
						{
							"ID": "20210708003510-zyx0ohp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-zyx0ohp"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "可是这么写有什么现实用处么？好像有的，可以做个计算器[偷笑]～"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-l8oteqp",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20210708003510-l8oteqp"
					},
					"Children": [
						{
							"ID": "20210708003510-n9e99wv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-n9e99wv"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "作为搜索条件"
								}
							]
						},
						{
							"ID": "20210708003510-4m6x7we",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-4m6x7we"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "我们在介绍搜索条件的时候介绍的都是带有列名的表达式，搜索条件也可以不带列名，比如这样："
								}
							]
						},
						{
							"ID": "20210708003510-p9mekop",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210708003510-p9mekop"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker"
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "mysql\u003e SELECT number, name, id_number, major FROM student_info WHERE 2 \u003e 1;\n+----------+-----------+--------------------+--------------------------+\n| number   | name      | id_number          | major                    |\n+----------+-----------+--------------------+--------------------------+\n| 20180101 | 杜子腾    | 158177199901044792 | 计算机科学与工程         |\n| 20180102 | 杜琦燕    | 151008199801178529 | 计算机科学与工程         |\n| 20180103 | 范统      | 17156319980116959X | 软件工程                 |\n| 20180104 | 史珍香    | 141992199701078600 | 软件工程                 |\n| 20180105 | 范剑      | 181048199308156368 | 飞行器设计               |\n| 20180106 | 朱逸群    | 197995199501078445 | 电子信息                 |\n+----------+-----------+--------------------+--------------------------+\n6 rows in set (0.00 sec)\n\nmysql\u003e\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						},
						{
							"ID": "20210708003510-z4xk3an",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-z4xk3an"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "由于我们的搜索条件是"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "2 \u003e 1"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，这个条件对于表中的每一条记录都成立，所以最后的查询结果就是全部的记录。不过这么写有点儿傻哈，没有一毛钱卵用，没一点实际意义～ 所以通常情况下搜索条件中都会包含列名的。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-yy4t2mm",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708003510-yy4t2mm"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "时间处理函数"
				}
			]
		},
		{
			"ID": "20210708003510-rli38ae",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-rli38ae"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "当前日期"
				}
			]
		},
		{
			"ID": "20210708003510-5cxfo58",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210708003510-5cxfo58"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "【标准SQL】CURRENT_DATE"
				}
			]
		},
		{
			"ID": "20210708003510-i7vwfzz",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "c3Fs",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-i7vwfzz"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "-- PostgreSQL 和 MySQL\nSELECT CURRENT_DATE; -- 2021-12-12\n\n-- 在 Oracle 中使用该函数时，需要在 FROM 子句中指定临时表(DUAL)。且返回的有日期和时间！\n-- CURRENT_DATE 取会话的当前日期和时间；SYSDATE 取服务器（主机）的当前日期和时间。一般相同，除非修改会话的时区。\nSELECT CURRENT_DATE FROM dual;\n\n\n-- SQL Server CAST函数将CURRENT_TIMESTAMP转换为日期类型\nSELECT CAST(CURRENT_TIMESTAMP AS DATE) AS CUR_DATE;\n-- 在 DB2 中使用时，需要在CRUUENT和DATE之间添加半角空格，并且还需要指定临时表 SYSIBM.SYSDUMMY1(相当于 Oracle 中的 DUAL)。\nSELECT CURRENT DATE FROM SYSIBM.SYSDUMMY1;\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-3360r49",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210708003510-3360r49"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "【MySQL】CURDATE"
				}
			]
		},
		{
			"ID": "20210708003510-zr5l2we",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "c3Fs",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-zr5l2we"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "SELECT CURDATE(); -- 2021-12-12\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-r0lbjqq",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-r0lbjqq"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "当前时间"
				}
			]
		},
		{
			"ID": "20210708003510-d38bnlj",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210708003510-d38bnlj"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "【标准SQL】CURRENT_TIME"
				}
			]
		},
		{
			"ID": "20210708003510-55f6n4k",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "c3Fs",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-55f6n4k"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "-- PostgreSQL 和 MySQL\nSELECT CURRENT_TIME; -- 18:18:18\n\n-- 在 Oracle 中使用该函数时，需要在 FROM 子句中指定临时表(DUAL)。且返回的有日期和时间！\nSELECT CURRENT_TIMESTAMP FROM dual; -- Oracle\n\n\n--SQL Server CAST函数将CURRENT_TIMESTAMP转换为时间类型\nSELECT CAST(CURRENT_TIMESTAMP AS TIME) AS CUR_TIME; \n--DB2 CURRENT和TIME之间使用了半角空格，指定临时表SYSIBM.SYSDUMMY1\nSELECT CURRENT TIME FROM SYSIBM.SYSDUMMY1; \n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-wu6v1ce",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210708003510-wu6v1ce"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "【MySQL】CURTIME"
				}
			]
		},
		{
			"ID": "20210708003510-bmxds0o",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "c3Fs",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-bmxds0o"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "SELECT CURTIME(); -- 18:18:18\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-nksum98",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-nksum98"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "当前日期和时间"
				}
			]
		},
		{
			"ID": "20210708003510-fgeh0td",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210708003510-fgeh0td"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "【标准SQL】CURRENT_TIMESTAMP"
				}
			]
		},
		{
			"ID": "20210708003510-u302pbx",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "c3Fs",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-u302pbx"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "-- -- PostgreSQL、MySQL 和 SQL Server\nSELECT CURRENT_TIMESTAMP; -- 2021-12-12 18:18:18\n\n-- 在 Oracle 中使用该函数时，需要在 FROM 子句中指定临时表(DUAL)。且返回的有日期和时间！\nSELECT CURRENT_TIMESTAMP FROM dual;\n\n\n-- DB2 CURRENT和TIME之间使用了半角空格，指定临时表SYSIBM.SYSDUMMY1\nSELECT CURRENT TIMESTAMP FROM SYSIBM.SYSDUMMY1;\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-x324qnh",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210708003510-x324qnh"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "【MySQL】NOW"
				}
			]
		},
		{
			"ID": "20210708003510-lw2an7e",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "c3Fs",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-lw2an7e"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "SELECT NOW(); -- 2021-12-12 18:18:18\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-rrea2vl",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-rrea2vl"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "提取"
				}
			]
		},
		{
			"ID": "20210708003510-q0jkpl6",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210708003510-q0jkpl6"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "【标准SQL】EXTRACT——提取日期元素返回数值"
				}
			]
		},
		{
			"ID": "20210708003510-lspjb3d",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "c3Fs",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-lspjb3d"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "-- PostgreSQL 和 MySQL\t\nSELECT CURRENT_TIMESTAMP, EXTRACT( YEAR/MONTH/DAY/HOUR/MINUTE/SECOND FROM CURRENT_TIMESTAMP() )\n\n-- Oracle\nSELECT CURRENT_TIMESTAMP, EXTRACT(YEAR FROM CURRENT_TIMESTAMP) AS year \n\n\n-- SQL Server\nSELECT CURRENT_TIMESTAMP, DATEPART(YEAR , CURRENT_TIMESTAMP) \n/* DB2，CURRENT和TIME之间使用了半角空格，指定临时表SYSIBM.SYSDUMMY1 */\nSELECT CURRENT TIMESTAMP, EXTRACT(YEAR FROM CURRENT TIMESTAMP) AS year\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-xxqzv8l",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-xxqzv8l"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "该函数的返回值并不是日期类型而是"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "数值类型"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20210708003510-xw76dk6",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210708003510-xw76dk6"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "【标准SQL】DATE：提取日期部分返回数值，下同"
				}
			]
		},
		{
			"ID": "20210708003510-tqgat3a",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-tqgat3a"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "DATE 中的参数可以是日期类型、时间类型（就是这么神奇）、日期时间类型、"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "字符串（会隐式类型转换）"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-rs8qxpx",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "c3Fs",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-rs8qxpx"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "SELECT DATE('2020-11-11 12:12:12')\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-bqd8x8w",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210708003510-bqd8x8w"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "YEAR"
				}
			]
		},
		{
			"ID": "20210708003510-120idbw",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210708003510-120idbw"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "MONTH"
				}
			]
		},
		{
			"ID": "20210708003510-tycrsno",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210708003510-tycrsno"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "DAY"
				}
			]
		},
		{
			"ID": "20210708003510-dl7utrw",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210708003510-dl7utrw"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "HOUR"
				}
			]
		},
		{
			"ID": "20210708003510-uwd333f",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210708003510-uwd333f"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "MINUTE"
				}
			]
		},
		{
			"ID": "20210708003510-yn0lgd9",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210708003510-yn0lgd9"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "SECOND"
				}
			]
		},
		{
			"ID": "20210708003510-10d8pwf",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-10d8pwf"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "增删计算"
				}
			]
		},
		{
			"ID": "20210708003510-w2kfh0i",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210708003510-w2kfh0i"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "【MySQL】"
				}
			]
		},
		{
			"ID": "20210708003510-s0o42zg",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "c3Fs",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-s0o42zg"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "SELECT CURRENT_DATE();-- 2021-12-12\nSELECT DATE_ADD(CURRENT_DATE(), INTERVAL 2 DAY);-- 2021-12-14\nSELECT DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY);-- 2021-12-10\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-7hmxjqw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-7hmxjqw"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在使用"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "DATE_ADD"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "DATE_SUB"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "这两个函数时需要注意，增加或减去的时间间隔单位可以自己定义，下边是"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "MySQL"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "支持的一些时间单位："
				}
			]
		},
		{
			"ID": "20210708003510-yjr8kb0",
			"Type": "NodeTable",
			"Data": "| 时间单位      | 描述 |\n| ------------- | ---- |\n| `MICROSECOND` | 毫秒 |\n| `SECOND`      | 秒   |\n| `MINUTE`      | 分钟 |\n| `HOUR`        | 小时 |\n| `DAY`         | 天   |\n| `WEEK`        | 星期 |\n| `MONTH`       | 月   |\n| `QUARTER`     | 季度 |\n| `YEAR`        | 年   |",
			"TableAligns": [
				0,
				0
			],
			"Properties": {
				"id": "20210708003510-yjr8kb0"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "时间单位"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "描述"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "MICROSECOND"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "毫秒"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "SECOND"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "秒"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "MINUTE"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "分钟"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "HOUR"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "小时"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "DAY"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "天"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "WEEK"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "星期"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "MONTH"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "月"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "QUARTER"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "季度"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "YEAR"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "年"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-b8to6t1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-b8to6t1"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果我们相让"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "2021-12-12 18:18:18"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "这个时间值增加2分钟，可以这么写："
				}
			]
		},
		{
			"ID": "20210708003510-3qyi4t9",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "c3Fs",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-3qyi4t9"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "SELECT DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL 2 MINUTE );\nSELECT DATE_ADD(NOW(), INTERVAL 2 MINUTE );\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-t10vt7u",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-t10vt7u"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "比较计算"
				}
			]
		},
		{
			"ID": "20210708003510-nq8nswy",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210708003510-nq8nswy"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "【MySQL】"
				}
			]
		},
		{
			"ID": "20210708003510-219nlyk",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "c3Fs",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-219nlyk"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "-- 返回值是相差的天数，不能定位到小时、分钟和秒\nSELECT DATEDIFF('2021-12-12', '2021-12-14');-- -2\n\n-- 返回值是相差的时间\nSELECT TIMEDIFF('2021-12-12 12:12:12', '2021-12-14 12:12:12');-- -48:00:00\n\n-- 有参数设置，可以精确到天（DAY）、小时（HOUR），分钟（MINUTE）和秒（SECOND）等上述单位\nSELECT TIMESTAMPDIFF(DAY ,'2021-12-12 12:12:12', '2021-12-14 12:12:12');-- 2 这个值和上面的不一样！比较方向不一样\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-23bpvki",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-23bpvki"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "格式化"
				}
			]
		},
		{
			"ID": "20210708003510-g5we2qf",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210708003510-g5we2qf"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "【MySQL】"
				}
			]
		},
		{
			"ID": "20210708003510-d10cln8",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "c3Fs",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-d10cln8"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "SELECT DATE_FORMAT(NOW(),'%m-%d-%Y');-- 12-12-2021\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-8ppplik",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-8ppplik"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在使用"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "DATE_FORMAT"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "函数时需要注意，我们可以通过一些所谓的"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "格式符"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "来自定义日期和时间的显示格式，下边是"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "MySQL"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "中常用的一些日期和时间的格式符以及它们对应的含义："
				}
			]
		},
		{
			"ID": "20210708003510-aihtmf9",
			"Type": "NodeTable",
			"Data": "| 格式符 | 描述                                                    |\n| ------ | ------------------------------------------------------- |\n| `%b`   | 简写的月份名称（Jan、Feb、...、Dec)                     |\n| `%D`   | 带有英文后缀的月份中的日期（0th、1st、2nd、...、31st)） |\n| `%d`   | 数字格式的月份中的日期(00、01、02、...、31)             |\n| `%f`   | 微秒（000000-999999）                                   |\n| `%H`   | 二十四小时制的小时 (00-23)                              |\n| `%h`   | 十二小时制的小时 (01-12)                                |\n| `%i`   | 数值格式的分钟(00-59)                                   |\n| `%M`   | 月份名（January、February、...、December）              |\n| `%m`   | 数值形式的月份(00-12)                                   |\n| `%p`   | 上午或下午（AM代表上午、PM代表下午）                    |\n| `%S`   | 秒(00-59)                                               |\n| `%s`   | 秒(00-59)                                               |\n| `%W`   | 星期名（Sunday、Monday、...、Saturday）                 |\n| `%w`   | 周内第几天 （0=星期日、1=星期一、 6=星期六）            |\n| `%Y`   | 4位数字形式的年（例如2019）                             |\n| `%y`   | 2位数字形式的年（例如19）                               |",
			"TableAligns": [
				0,
				0
			],
			"Properties": {
				"id": "20210708003510-aihtmf9"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "格式符"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "描述"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "%b"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "简写的月份名称（Jan、Feb、...、Dec)"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "%D"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "带有英文后缀的月份中的日期（0th、1st、2nd、...、31st)）"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "%d"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "数字格式的月份中的日期(00、01、02、...、31)"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "%f"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "微秒（000000-999999）"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "%H"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "二十四小时制的小时 (00-23)"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "%h"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "十二小时制的小时 (01-12)"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "%i"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "数值格式的分钟(00-59)"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "%M"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "月份名（January、February、...、December）"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "%m"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "数值形式的月份(00-12)"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "%p"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "上午或下午（AM代表上午、PM代表下午）"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "%S"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "秒(00-59)"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "%s"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "秒(00-59)"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "%W"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "星期名（Sunday、Monday、...、Saturday）"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "%w"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "周内第几天 （0=星期日、1=星期一、 6=星期六）"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "%Y"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "4位数字形式的年（例如2019）"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "%y"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "2位数字形式的年（例如19）"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-398xxa4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-398xxa4"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们可以把我们想要的显示格式用对应的格式符描述出来，就像这样："
				}
			]
		},
		{
			"ID": "20210708003510-xvo5jg2",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-xvo5jg2"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "mysql\u003e SELECT DATE_FORMAT(NOW(),'%b %d %Y %h:%i %p');\n+----------------------------------------+\n| DATE_FORMAT(NOW(),'%b %d %Y %h:%i %p') |\n+----------------------------------------+\n| Aug 16 2019 05:10 PM                   |\n+----------------------------------------+\n1 row in set (0.00 sec)\n\nmysql\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-7nx8bi5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-7nx8bi5"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "'%b %d %Y %h:%i %p'"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "就是一个用格式符描述的显示格式，意味着对应的日期和时间应该以下边描述的方式展示："
				}
			]
		},
		{
			"ID": "20210708003510-fxginn2",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 4,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210708003510-fxginn2"
			},
			"Children": [
				{
					"ID": "20210708003510-hkk0bkf",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 4,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-hkk0bkf"
					},
					"Children": [
						{
							"ID": "20210708003510-id9fzyq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-id9fzyq"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "先输出简写的月份名称（格式符"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "%b"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "），也就是示例中的"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Aug"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，然后输出一个空格。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-wuxlqos",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 4,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-wuxlqos"
					},
					"Children": [
						{
							"ID": "20210708003510-2lrxxf8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-2lrxxf8"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "再输出用数字格式表示的的月份中的日期（格式符"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "%d"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "），也就是示例中的"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "16"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，然后输出一个空格。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-xhkn9bo",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 4,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-xhkn9bo"
					},
					"Children": [
						{
							"ID": "20210708003510-40ugfi4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-40ugfi4"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "再输出4位数字形式的年（格式符"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "%Y"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "），也就是示例中的"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "2019"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，然后输出一个空格。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-oohhyco",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 4,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-oohhyco"
					},
					"Children": [
						{
							"ID": "20210708003510-uoavdh7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-uoavdh7"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "再输出十二小时制的小时（格式符"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "%h"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "），也就是示例中的"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "05"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，然后输出一个冒号"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": ":"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-oa06ymy",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 4,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-oa06ymy"
					},
					"Children": [
						{
							"ID": "20210708003510-3krerr3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-3krerr3"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "再输出数值格式的分钟（格式符"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "%i"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "），也就是示例中的"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "10"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，然后输出一个空格。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-94noz46",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 4,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-94noz46"
					},
					"Children": [
						{
							"ID": "20210708003510-w168dte",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-w168dte"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "最后输出上午或者下午（格式符"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "%p"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "），也就是示例中的"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "PM"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-kdjq0hv",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708003510-kdjq0hv"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "文本处理函数"
				}
			]
		},
		{
			"ID": "20210708003510-xkhv9ez",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-xkhv9ez"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "简介"
				}
			]
		},
		{
			"ID": "20210708003510-psw7uwr",
			"Type": "NodeTable",
			"Data": "| 名称        | 调用示例                            | 示例结果    | 描述                                                      |\n| ----------- | ----------------------------------- | ----------- | --------------------------------------------------------- |\n| `LEFT`      | `LEFT('abc123', 3)`                 | `abc`       | 给定字符串从左边取指定长度的子串                          |\n| `RIGHT`     | `RIGHT('abc123', 3)`                | `123`       | 给定字符串从右边取指定长度的子串                          |\n| `LENGTH`    | `LENGTH('abc')`                     | `3`         | 给定字符串的长度                                          |\n| `LOWER`     | `LOWER('ABC')`                      | `abc`       | 给定字母字符串的小写格式                                  |\n| `UPPER`     | `UPPER('abc')`                      | `ABC`       | 给定字母字符串的大写格式                                  |\n| `LTRIM`     | `LTRIM(' abc')`                     | `abc`       | 给定字符串左边空格去除后的格式                            |\n| `RTRIM`     | `RTRIM('abc ')`                     | `abc`       | 给定字符串右边空格去除后的格式                            |\n| `SUBSTRING` | `SUBSTRING('abc123', 2, 3)`         | `bc1`       | 给定字符串从指定位置截取指定长度的子串。**index 从1开始** |\n| `CONCAT`    | `CONCAT('abc', '123', 'xyz')`       | `abc123xyz` | 将给定的各个字符串拼接成一个新字符串                      |\n| `REPLACE`   | `REPLACE('abcde', 'bc', 'a')`       | `aade`      | 替换字符串                                                |\n| `POSITION`  | `POSITION('@' IN 'conanan@qq.com')` | `8`         | index 从1开始                                             |",
			"TableAligns": [
				0,
				0,
				0,
				0
			],
			"Properties": {
				"id": "20210708003510-psw7uwr"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "名称"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "调用示例"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "示例结果"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "描述"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "LEFT"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "LEFT('abc123', 3)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "abc"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "给定字符串从左边取指定长度的子串"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "RIGHT"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "RIGHT('abc123', 3)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "123"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "给定字符串从右边取指定长度的子串"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "LENGTH"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "LENGTH('abc')"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "3"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "给定字符串的长度"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "LOWER"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "LOWER('ABC')"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "abc"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "给定字母字符串的小写格式"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "UPPER"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "UPPER('abc')"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "ABC"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "给定字母字符串的大写格式"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "LTRIM"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "LTRIM(' abc')"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "abc"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "给定字符串左边空格去除后的格式"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "RTRIM"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "RTRIM('abc ')"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "abc"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "给定字符串右边空格去除后的格式"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "SUBSTRING"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "SUBSTRING('abc123', 2, 3)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "bc1"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "给定字符串从指定位置截取指定长度的子串。"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "index 从1开始"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "CONCAT"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "CONCAT('abc', '123', 'xyz')"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "abc123xyz"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "将给定的各个字符串拼接成一个新字符串"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "REPLACE"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "REPLACE('abcde', 'bc', 'a')"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "aade"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "替换字符串"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "POSITION"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "POSITION('@' IN 'conanan@qq.com')"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "8"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "index 从1开始"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-lyn8v5o",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 42,
				"Padding": 4,
				"Marker": "Kg==",
				"Num": -1
			},
			"Properties": {
				"id": "20210708003510-lyn8v5o"
			},
			"Children": [
				{
					"ID": "20210708003510-uujvx75",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-uujvx75"
					},
					"Children": [
						{
							"ID": "20210708003510-uytu4xh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-uytu4xh"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "进行字符串拼接时，如果其中包含 NULL，那么得到的结果也是NULL。这是因为它也是变了形的函数。多个值拼接也可以。"
								}
							]
						},
						{
							"ID": "20210708003510-pkcejbm",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 42,
								"Padding": 4,
								"Marker": "Kg==",
								"Num": -1
							},
							"Properties": {
								"id": "20210708003510-pkcejbm"
							},
							"Children": [
								{
									"ID": "20210708003510-0peknlv",
									"Type": "NodeListItem",
									"Data": "*",
									"ListData": {
										"Tight": true,
										"BulletChar": 42,
										"Padding": 4,
										"Marker": "Kg==",
										"Num": -1
									},
									"Properties": {
										"id": "20210708003510-0peknlv"
									},
									"Children": [
										{
											"ID": "20210708003510-2dsk1b1",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210708003510-2dsk1b1"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "MySQL使用CONCAT函数（可多个）"
												}
											]
										}
									]
								},
								{
									"ID": "20210708003510-h6f3thw",
									"Type": "NodeListItem",
									"Data": "*",
									"ListData": {
										"Tight": true,
										"BulletChar": 42,
										"Padding": 4,
										"Marker": "Kg==",
										"Num": -1
									},
									"Properties": {
										"id": "20210708003510-h6f3thw"
									},
									"Children": [
										{
											"ID": "20210708003510-oee33ww",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210708003510-oee33ww"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "PG 使用 || （标准SQL语法）"
												}
											]
										}
									]
								},
								{
									"ID": "20210708003510-hjvo4co",
									"Type": "NodeListItem",
									"Data": "*",
									"ListData": {
										"Tight": true,
										"BulletChar": 42,
										"Padding": 4,
										"Marker": "Kg==",
										"Num": -1
									},
									"Properties": {
										"id": "20210708003510-hjvo4co"
									},
									"Children": [
										{
											"ID": "20210708003510-fnhchd3",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210708003510-fnhchd3"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "Oracle 使用 || （标准SQL语法）"
												}
											]
										}
									]
								},
								{
									"ID": "20210708003510-tul30k5",
									"Type": "NodeListItem",
									"Data": "*",
									"ListData": {
										"Tight": true,
										"BulletChar": 42,
										"Padding": 4,
										"Marker": "Kg==",
										"Num": -1
									},
									"Properties": {
										"id": "20210708003510-tul30k5"
									},
									"Children": [
										{
											"ID": "20210708003510-htwcri9",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210708003510-htwcri9"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "SQL Server使用“+” 拼接"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-ixzdwnb",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-ixzdwnb"
					},
					"Children": [
						{
							"ID": "20210708003510-hp0f3gn",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-hp0f3gn"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "MySQL 中的 LENGTH"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 以字节为单位的函数进行计算时，“LENGTH(山田)”的返回结果是 4。MySQL中还存在计算字符串长度的自有函数 CHAR_LENGTH 。该函数也无法在 SQL Server 中使用，可以使用LEN函数来计算。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-73sje1c",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-73sje1c"
					},
					"Children": [
						{
							"ID": "20210708003510-ovy5mxh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-ovy5mxh"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "SUBSTRING"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "函数的语法是标准 SQL 承认的正式语法，但是现在只有 PostgreSQL 和 MySQL 支持该语法。 该函数也存在和LENGTH函数同样的"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "多字节字符的问题（没有这情况。。）"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						},
						{
							"ID": "20210708003510-mutqh9b",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "c3Fs",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210708003510-mutqh9b"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "c3Fs"
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "SUBSTRING(对象字符串 FROM 截取的起始位置 FOR 截取的字符数) -- PostgreSQL 、 MySQL 都可以\nSUBSTRING(对象字符串，截取的起始位置，截取的字符数 ) -- SQL Server、MySQL 都可以\nSUBSTR(对象字符串，截取的起始位置，截取的字符数) -- Oracle/DB2 专用语法;MySQL也可以使用，可以有前2个参数或3个参数\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						},
						{
							"ID": "20210708003510-xp13ju2",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "c3Fs",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210708003510-xp13ju2"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "c3Fs"
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "INSERT INTO demo.sys_user (user_id, age, user_name) VALUES (5, null, 'x小米加步枪111');\nINSERT INTO demo.sys_user (user_id, age, user_name) VALUES (7, null, 'x小米加步枪222');\n\nupdate sys_user set user_name = CONCAT('h红米', SUBSTRING(user_name ,7)) where user_name like 'x小米加步枪%';\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-w49b2ad",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-w49b2ad"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "示例"
				}
			]
		},
		{
			"ID": "20210708003510-6a0y4kd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-6a0y4kd"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们以"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "SUBSTRING"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "函数为例试一下："
				}
			]
		},
		{
			"ID": "20210708003510-3x1yv3p",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-3x1yv3p"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "mysql\u003e SELECT SUBSTRING('abc123', 2, 3);\n+---------------------------+\n| SUBSTRING('abc123', 2, 3) |\n+---------------------------+\n| bc1                       |\n+---------------------------+\n1 row in set (0.00 sec)\n\nmysql\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-xv0lcnp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-xv0lcnp"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们前边在唠叨"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "表达式"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的说过，"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "函数调用"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "也算是一种表达式的"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "操作数"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，它可以和其他操作数用操作符连接起来组成一个表达式来作为查询列表的一部分或者放到搜索条件中。我们来以"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "CONCAT"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "函数为例来看一下："
				}
			]
		},
		{
			"ID": "20210708003510-pa8bzuq",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-pa8bzuq"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "mysql\u003e SELECT CONCAT('学号为', number, '的学生在《', subject, '》课程的成绩是：', score) AS 成绩描述 FROM student_score;\n+---------------------------------------------------------------------------------------+\n| 成绩描述                                                                              |\n+---------------------------------------------------------------------------------------+\n| 学号为20180101的学生在《母猪的产后护理》课程的成绩是：78                              |\n| 学号为20180101的学生在《论萨达姆的战争准备》课程的成绩是：88                          |\n| 学号为20180102的学生在《母猪的产后护理》课程的成绩是：100                             |\n| 学号为20180102的学生在《论萨达姆的战争准备》课程的成绩是：98                          |\n| 学号为20180103的学生在《母猪的产后护理》课程的成绩是：59                              |\n| 学号为20180103的学生在《论萨达姆的战争准备》课程的成绩是：61                          |\n| 学号为20180104的学生在《母猪的产后护理》课程的成绩是：55                              |\n| 学号为20180104的学生在《论萨达姆的战争准备》课程的成绩是：46                          |\n+---------------------------------------------------------------------------------------+\n8 rows in set (0.00 sec)\n\nmysql\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-jtsi15v",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708003510-jtsi15v"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "数值处理函数"
				}
			]
		},
		{
			"ID": "20210708003510-nhu4uzv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-nhu4uzv"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "下边列举一些数学上常用到的函数，在遇到需要数学计算的业务时会很有用："
				}
			]
		},
		{
			"ID": "20210708003510-3i6ewia",
			"Type": "NodeTable",
			"Data": "| 名称    | 调用示例        | 示例结果             | 描述                                      |\n| ------- | --------------- | -------------------- | ----------------------------------------- |\n| `ABS`   | `ABS(-1)`       | `1`                  | 取绝对值                                  |\n| `Pi`    | `PI()`          | `3.141593`           | 返回圆周率                                |\n| `COS`   | `COS(PI())`     | `-1`                 | 返回一个角度的余弦                        |\n| `EXP`   | `EXP(1)`        | `2.718281828459045`  | 返回e的指定次方                           |\n| `MOD`   | `MOD(5,2)`      | `1`                  | 返回除法的余数                            |\n| `RAND`  | `RAND()`        | `0.7537623539136372` | 返回一个随机数                            |\n| `SIN`   | `SIN(PI()/2)`   | `1`                  | 返回一个角度的正弦                        |\n| `SQRT`  | `SQRT(9)`       | `3`                  | 返回一个数的平方根                        |\n| `TAN`   | `TAN(0)`        | `0`                  | 返回一个角度的正切                        |\n| `ROUND` | `ROUND(5.55,1)` | `5.6`                | 四舍五入（保留n位小数，不写则不保留小数） |",
			"TableAligns": [
				0,
				0,
				0,
				0
			],
			"Properties": {
				"id": "20210708003510-3i6ewia"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "名称"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "调用示例"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "示例结果"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "描述"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "ABS"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "ABS(-1)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "1"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "取绝对值"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Pi"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "PI()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "3.141593"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "返回圆周率"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "COS"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "COS(PI())"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "-1"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "返回一个角度的余弦"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "EXP"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "EXP(1)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "2.718281828459045"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "返回e的指定次方"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "MOD"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "MOD(5,2)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "1"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "返回除法的余数"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "RAND"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "RAND()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "0.7537623539136372"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "返回一个随机数"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "SIN"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "SIN(PI()/2)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "1"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "返回一个角度的正弦"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "SQRT"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "SQRT(9)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "3"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "返回一个数的平方根"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "TAN"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "TAN(0)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "0"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "返回一个角度的正切"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "ROUND"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "ROUND(5.55,1)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "5.6"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "四舍五入（保留n位小数，不写则不保留小数）"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-77njz0v",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 42,
				"Padding": 4,
				"Marker": "Kg==",
				"Num": -1
			},
			"Properties": {
				"id": "20210708003510-77njz0v"
			},
			"Children": [
				{
					"ID": "20210708003510-7p4j0sy",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-7p4j0sy"
					},
					"Children": [
						{
							"ID": "20210708003510-h9g8lgq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-h9g8lgq"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "ABS 函数的参数为 NULL 时，结果也是 NULL。"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "绝大多数函数对于 NULL 都返回 NULL，但是转换函数中的COALESCE函数除外"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-7w06jbp",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-7w06jbp"
					},
					"Children": [
						{
							"ID": "20210708003510-87h7w08",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-87h7w08"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "主流的 DBMS 都支持 MOD 函数，只有SQL Server 不支持该函数，使用“%”来计算余数。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-tqy5cq1",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708003510-tqy5cq1"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "聚合（统计）函数—列的纵向运算"
				}
			]
		},
		{
			"ID": "20210708003510-q72pami",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-q72pami"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果将上边介绍的那些函数以函数调用的形式放在查询列表中，那么会为表中符合"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "WHERE"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "条件的每一条记录调用一次该函数。比方说这样："
				}
			]
		},
		{
			"ID": "20210708003510-szfth89",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-szfth89"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "mysql\u003e SELECT number, LEFT(name, 1) FROM student_info WHERE number \u003c 20180106;\n+----------+---------------+\n| number   | LEFT(name, 1) |\n+----------+---------------+\n| 20180101 | 杜            |\n| 20180102 | 杜            |\n| 20180103 | 范            |\n| 20180104 | 史            |\n| 20180105 | 范            |\n+----------+---------------+\n5 rows in set (0.00 sec)\n\nmysql\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-eov1hs8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-eov1hs8"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "student_info"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "表中符合"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "number \u003c 20180106"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "搜索条件的每一条记录的"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "name"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "字段会依次被当作"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "LEFT"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "函数的参数，结果就是把这些人的名字的首个字符给提取出来了。但是有些函数是用来统计数据的，比方说统计一下表中的行数，某一列数据的最大值是什么，我们把这种函数称之为"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "聚集函数"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，下边介绍"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "MySQL"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "中常用的几种"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "聚集函数"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "："
				}
			]
		},
		{
			"ID": "20210708003510-79o0ikg",
			"Type": "NodeTable",
			"Data": "| 函数名  | 描述                                                       |\n| ------- | ---------------------------------------------------------- |\n| `COUNT` | 返回某列的**行数**                                         |\n| `MAX`   | 返回某列的最大值                                           |\n| `MIN`   | 返回某列的最小值                                           |\n| `SUM`   | 返回某列值之**和**，可利用 true 返回 1 false 返回 0 的特性 |\n| `AVG`   | 返回某列的平均值                                           |",
			"TableAligns": [
				0,
				0
			],
			"Properties": {
				"id": "20210708003510-79o0ikg"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "函数名"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "描述"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "COUNT"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "返回某列的"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "行数"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "MAX"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "返回某列的最大值"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "MIN"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "返回某列的最小值"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "SUM"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "返回某列值之"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "和"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，可利用 true 返回 1 false 返回 0 的特性"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "AVG"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "返回某列的平均值"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-9jm7ovh",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-9jm7ovh"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "常见错误注意"
				}
			]
		},
		{
			"ID": "20210708003510-z7n267z",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 4,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210708003510-z7n267z"
			},
			"Children": [
				{
					"ID": "20210708003510-202y93j",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 4,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-202y93j"
					},
					"Children": [
						{
							"ID": "20210708003510-2nqihbr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-2nqihbr"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "聚合函数只能用于 "
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "SELECT"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 子句和 "
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "HAVING"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 子句和 "
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "ORDER BY"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "子句"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-x4eca8x",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 4,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-x4eca8x"
					},
					"Children": [
						{
							"ID": "20210708003510-dd17bvh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-dd17bvh"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在 "
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "WHERE"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 子句中使用聚合函数（不能使用）"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-2atjxs1",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 4,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-2atjxs1"
					},
					"Children": [
						{
							"ID": "20210708003510-ae5yhrb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-ae5yhrb"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "聚合函数的计算，"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "排除了NULL值"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。（解决："
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "选择不包含NULL的列如主键 或"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " "
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "IFNULL"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "函数）。与四则运算中若存在NULL，结果一定为NULL不同"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-d2g1z98",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 4,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-d2g1z98"
					},
					"Children": [
						{
							"ID": "20210708003510-8lorer1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-8lorer1"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "聚合函数的结果为单行单列的值。"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-noaum44",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 4,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-noaum44"
					},
					"Children": [
						{
							"ID": "20210708003510-frvlia1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-frvlia1"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "可以修改聚合函数列别名"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-wno4orr",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 4,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-wno4orr"
					},
					"Children": [
						{
							"ID": "20210708003510-fqoorwk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-fqoorwk"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "聚合函数中使用比较运算符表达式时注意表达式为 true 时结果为1，false 时结果为0。此时count 和 sum 选择一定要注意"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						},
						{
							"ID": "20210708003510-sdyuxq4",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "c3Fs",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210708003510-sdyuxq4"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "c3Fs"
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "select name, avg(score)\nfrom score group by name having sum(score \u003c 60) \u003e= 2;\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-ve8mw0o",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-ve8mw0o"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "COUNT函数"
				}
			]
		},
		{
			"ID": "20210708003510-bma7zpu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-bma7zpu"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "COUNT"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "函数使用来统计行数的，它有下边两种使用方式："
				}
			]
		},
		{
			"ID": "20210708003510-a4p15is",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20210708003510-a4p15is"
			},
			"Children": [
				{
					"ID": "20210708003510-rqxj1zw",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20210708003510-rqxj1zw"
					},
					"Children": [
						{
							"ID": "20210708003510-ikvqz6h",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-ikvqz6h"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "COUNT(*)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：对表中行的数目进行计数，不管列的值是不是"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "NULL"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。只要有一列不为空则记录上！"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-cywrq3p",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20210708003510-cywrq3p"
					},
					"Children": [
						{
							"ID": "20210708003510-ihr1jq8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-ihr1jq8"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "COUNT(列名)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：对特定的列进行计数，会忽略掉该列为"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "NULL"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "的行。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-855eiws",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-855eiws"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "两者的区别是会不会忽略统计列的值为NULL的行！两者的区别是会不会忽略统计列的值为NULL的行！两者的区别是会不会忽略统计列的值为NULL的行！重要的事情说了3遍，希望你能记住。我们来数一下"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "student_info"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "表中有几行记录吧："
				}
			]
		},
		{
			"ID": "20210708003510-mlzjkwb",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-mlzjkwb"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "mysql\u003e SELECT COUNT(*) FROM student_info;\n+----------+\n| COUNT(*) |\n+----------+\n|        6 |\n+----------+\n1 row in set (0.00 sec)\n\nmysql\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-f795rk5",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-f795rk5"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "MAX函数（原则上适用任何数据类型，能排序的，如日期、字符串）"
				}
			]
		},
		{
			"ID": "20210708003510-oydq5pq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-oydq5pq"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "MAX"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "函数是用来查询某列中数据的最大值，以"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "student_score"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "表中的"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "score"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "列为例来看一下："
				}
			]
		},
		{
			"ID": "20210708003510-aa9pcgq",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-aa9pcgq"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "mysql\u003e SELECT MAX(score) FROM student_score;\n+------------+\n| MAX(score) |\n+------------+\n|        100 |\n+------------+\n1 row in set (0.00 sec)\n\nmysql\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-mpshfdu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-mpshfdu"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "score"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "列的最大值"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "100"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "就被查找出来了～"
				}
			]
		},
		{
			"ID": "20210708003510-dldwi8z",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-dldwi8z"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "MIN函数（原则上适用任何数据类型，能排序的，如日期、字符串）"
				}
			]
		},
		{
			"ID": "20210708003510-h3bzkce",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-h3bzkce"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "MIN"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "函数是用来查询某列中数据的最小值，以"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "student_score"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "表中的"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "score"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "列为例来看一下："
				}
			]
		},
		{
			"ID": "20210708003510-ue31bi4",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-ue31bi4"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "mysql\u003e SELECT MIN(score) FROM student_score;\n+------------+\n| MIN(score) |\n+------------+\n|         46 |\n+------------+\n1 row in set (0.00 sec)\n\nmysql\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-uhd1fuu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-uhd1fuu"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "score"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "列的最小值"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "46"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "就被查找出来了～"
				}
			]
		},
		{
			"ID": "20210708003510-tqk8kic",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-tqk8kic"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "SUM函数（适用于数值类型）"
				}
			]
		},
		{
			"ID": "20210708003510-2dpuj46",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-2dpuj46"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "SUM"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "函数是用来计算某列数据的和，还是以"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "student_score"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "表中的"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "score"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "列为例来看一下："
				}
			]
		},
		{
			"ID": "20210708003510-0uokzei",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-0uokzei"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "mysql\u003e SELECT SUM(score) FROM student_score;\n+------------+\n| SUM(score) |\n+------------+\n|        585 |\n+------------+\n1 row in set (0.01 sec)\n\nmysql\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-vzcc2df",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-vzcc2df"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "所有学生的成绩总和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "585"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "就被查询出来了，比我们用自己算快多了哈～"
				}
			]
		},
		{
			"ID": "20210708003510-mqqcg9m",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-mqqcg9m"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "AVG函数（适用于数值类型）"
				}
			]
		},
		{
			"ID": "20210708003510-kidmhjx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-kidmhjx"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "AVG"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "函数是用来计算某列数据的平均数，还是以"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "student_score"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "表中的"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "score"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "列为例来看一下："
				}
			]
		},
		{
			"ID": "20210708003510-mr08i73",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-mr08i73"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "mysql\u003e SELECT AVG(score) FROM student_score;\n+------------+\n| AVG(score) |\n+------------+\n|    73.1250 |\n+------------+\n1 row in set (0.00 sec)\n\nmysql\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-dztmz81",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-dztmz81"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可以看到平均分就是"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "73.1250"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20210708003510-k8cu6ij",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-k8cu6ij"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "给定搜索条件下聚合函数的使用"
				}
			]
		},
		{
			"ID": "20210708003510-ycpe5jy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-ycpe5jy"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "聚合函数并不是一定要统计一个表中的所有记录，我们也可以指定搜索条件来限定这些聚集函数作用的范围。比方说我们只想统计"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "'母猪的产后护理'"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "这门课程的平均分可以这么写："
				}
			]
		},
		{
			"ID": "20210708003510-ok6bz3o",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-ok6bz3o"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "mysql\u003e SELECT AVG(score) FROM student_score WHERE subject = '母猪的产后护理';\n+------------+\n| AVG(score) |\n+------------+\n|    73.0000 |\n+------------+\n1 row in set (0.00 sec)\n\nmysql\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-2as6wa8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-2as6wa8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "换句话说就是：不在搜索条件中的那些记录是不参与统计的。"
				}
			]
		},
		{
			"ID": "20210708003510-qdpu8po",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-qdpu8po"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "聚合函数中DISTINCT的使用"
				}
			]
		},
		{
			"ID": "20210708003510-x3r09m4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-x3r09m4"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "默认情况下，上边介绍的聚合函数将计算指定列的所有非"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "NULL"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "数据，如果我们指定的列中有重复数据的话，可以选择使用"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "DISTINCT"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "来过滤掉这些重复数据。比方说我们想查看一下"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "student_info"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "表中存储了多少个专业的学生信息，就可以这么写："
				}
			]
		},
		{
			"ID": "20210708003510-cxi0yjo",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-cxi0yjo"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "mysql\u003e SELECT COUNT(DISTINCT major) FROM student_info;\n+-----------------------+\n| COUNT(DISTINCT major) |\n+-----------------------+\n|                     4 |\n+-----------------------+\n1 row in set (0.01 sec)\n\nmysql\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-z4ll8py",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-z4ll8py"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可以看到一共有4个专业。"
				}
			]
		},
		{
			"ID": "20210708003510-yllob06",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-yllob06"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "组合聚合函数"
				}
			]
		},
		{
			"ID": "20210708003510-ih26r3k",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-ih26r3k"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这些聚集函数也可以集中在一个查询中使用，比如这样："
				}
			]
		},
		{
			"ID": "20210708003510-vt3xz2s",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-vt3xz2s"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "mysql\u003e SELECT COUNT(*) AS 成绩记录总数, MAX(score) AS 最高成绩, MIN(score) AS 最低成绩, AVG(score) AS 平均成绩 FROM student_score;\n+--------------------+--------------+--------------+--------------+\n| 成绩记录总数       | 最高成绩     | 最低成绩     | 平均成绩     |\n+--------------------+--------------+--------------+--------------+\n|                  8 |          100 |           46 |      73.1250 |\n+--------------------+--------------+--------------+--------------+\n1 row in set (0.00 sec)\n\nmysql\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-dzev3u2",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210708003510-dzev3u2"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "类型转换函数"
				}
			]
		},
		{
			"ID": "20210708003510-y3glsqx",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-y3glsqx"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "类型转换—CAST"
				}
			]
		},
		{
			"ID": "20210708003510-bm7utr9",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210708003510-bm7utr9"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "【标准SQL】CAST"
				}
			]
		},
		{
			"ID": "20210708003510-ma0u6pk",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "c3Fs",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-ma0u6pk"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "-- CAST(转换前的值 AS 想要转换的数据类型);\n\nSELECT CAST('0001' AS INTEGER) AS int_col; -- SQL Server PostgreSQL\nSELECT CAST('0001' AS SIGNED INTEGER) AS int_col; -- MySQL\nSELECT CAST('0001' AS INTEGER) AS int_col FROM DUAL; -- Oracle\nSELECT CAST('0001' AS INTEGER) AS int_col FROM SYSIBM.SYSDUMMY1; -- DB2\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-6h1bsu6",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "c3Fs",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-6h1bsu6"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "SELECT CAST('2009-12-14' AS DATE) AS date_col; -- SQL Server PostgreSQL MySQL\nSELECT CAST('2009-12-14' AS DATE) AS date_col FROM DUAL; -- Oracle\nSELECT CAST('2009-12-14' AS DATE) AS date_col FROM SYSIBM.SYSDUMMY1; -- DB2\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-apitpyi",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-apitpyi"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "将字符串类型转换为整数类型时，前面的 “000”消失了，能够切实感到发生了转换。但是，将字符串转换为日期类型时，从结果上并不能看出数据发生了什么变化。"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "类型转换其实并不是为了方便用户使用而开发的功能，而是为了方便 DBMS 内部处理而开发的功能"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20210708003510-f0rwuvx",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210708003510-f0rwuvx"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "【Oracle】"
				}
			]
		},
		{
			"ID": "20210708003510-hc2ey7c",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 42,
				"Padding": 4,
				"Marker": "Kg==",
				"Num": -1
			},
			"Properties": {
				"id": "20210708003510-hc2ey7c"
			},
			"Children": [
				{
					"ID": "20210708003510-7cyoefn",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-7cyoefn"
					},
					"Children": [
						{
							"ID": "20210708003510-x5kfvys",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-x5kfvys"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "to_char"
								}
							]
						}
					]
				},
				{
					"ID": "20210708003510-mr4ibxj",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20210708003510-mr4ibxj"
					},
					"Children": [
						{
							"ID": "20210708003510-g5v7h1e",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210708003510-g5v7h1e"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "to_date"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210708003510-8ba2sgn",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-8ba2sgn"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "转换NULL值—COALESCE"
				}
			]
		},
		{
			"ID": "20210708003510-m73qi51",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210708003510-m73qi51"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "【标准SQL】COALESCE"
				}
			]
		},
		{
			"ID": "20210708003510-cbr2k6w",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-cbr2k6w"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "将 NULL 转换为其他值，返回第一个非空数值"
				}
			]
		},
		{
			"ID": "20210708003510-lwgqpf9",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "c3Fs",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-lwgqpf9"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "SELECT COALESCE(数据1,数据2,数据3...)\n/* COALESCE 是 SQL 特有的函数。该函数会返回可变参数中左侧开始第1个不是 NULL 的值。*/\nSELECT COALESCE(NULL, NULL, '2009-11-01') ... --SQL Server PostgreSQL MySQL\nSELECT COALESCE(NULL, NULL, '2009-11-01') AS col_1 FROM DUAL; -- Oracle\nSELECT COALESCE(NULL, NULL, '2009-11-01') AS col_1 FROM SYSIBM.SYSDUMMY1; --  DB2\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-jrgdxkh",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210708003510-jrgdxkh"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "【MySQL】IFNULL"
				}
			]
		},
		{
			"ID": "20210708003510-9b81ksc",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "c3Fs",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-9b81ksc"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "SELECT IFNULL(null, 0)+1000; -- 如果存在NULL值，那么当成0来运算\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-zjyjg04",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210708003510-zjyjg04"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "【Oracle】NVL"
				}
			]
		},
		{
			"ID": "20210708003510-biwafxj",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-biwafxj"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-tee4yxf",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-tee4yxf"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "隐式类型转换的场景"
				}
			]
		},
		{
			"ID": "20210708003510-cl22r2y",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-cl22r2y"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "只要某个值的类型与上下文要求的类型不符，"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "MySQL"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "就会根据上下文环境中需要的类型对该值进行类型转换，由于这些类型转换都是"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "MySQL"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "自动完成的，所以也可以被称为"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "隐式类型转换"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。我们列举几种常见的隐式类型转换的场景："
				}
			]
		},
		{
			"ID": "20210708003510-bgsqsxg",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210708003510-bgsqsxg"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "把操作数类型转换为适合操作符计算的相应类型"
				}
			]
		},
		{
			"ID": "20210708003510-67iglqz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-67iglqz"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "比方说对于加法操作符"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "+"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "来说，它要求两个操作数都必须是数字才能进行计算，所以如果某个操作数不是数字的话，会将其隐式转换为数字，比方说下边这几个例子："
				}
			]
		},
		{
			"ID": "20210708003510-7cv38m2",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-7cv38m2"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "1 + 2       →   3\n'1' + 2     →   3\n'1' + '2'   →   3\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-h1t111u",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-h1t111u"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "虽然"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "'1'"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "'2'"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "都是字符串，但是如果它们作为加法操作符"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "+"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的操作数的话，都会被强制转换为数字，所以上边几个表达式其实都会被当作"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "1 + 2"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "去处理的，这些表达式被放在查询列表时的效果如下："
				}
			]
		},
		{
			"ID": "20210708003510-sb0ja3o",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-sb0ja3o"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "mysql\u003e SELECT 1 + 2, '1' + 2, '1' + '2';\n+-------+---------+-----------+\n| 1 + 2 | '1' + 2 | '1' + '2' |\n+-------+---------+-----------+\n|     3 |       3 |         3 |\n+-------+---------+-----------+\n1 row in set (0.00 sec)\n\nmysql\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-pe6p4cx",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210708003510-pe6p4cx"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "将函数参数转换为该函数期望的类型"
				}
			]
		},
		{
			"ID": "20210708003510-m7n7zvy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-m7n7zvy"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们拿用于拼接字符串的"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "CONCAT"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "函数举例，这个函数以字符串类型的值作为参数，如果我们在调用这个函数的时候，传入了别的类型的值作为参数，"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "MySQL"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "会自动把这些值的类型转换为字符串类型的："
				}
			]
		},
		{
			"ID": "20210708003510-ksj77uw",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-ksj77uw"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "CONCAT('1', '2')    →   '12'\nCONCAT('1', 2)      →   '12'\nCONCAT(1, 2)        →   '12'\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-kpkvpfz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-kpkvpfz"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "虽然"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "1"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "2"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "都是数字，但是如果它们作为"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "CONCAT"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "函数的参数的话，都会被强制转换为字符串，所以上边几个表达式其实都会被当作"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "CONCAT('1', '2)"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "去处理的，这些表达式被放到查询列表时的效果如下："
				}
			]
		},
		{
			"ID": "20210708003510-5hzposm",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-5hzposm"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "mysql\u003e SELECT CONCAT('1', '2'), CONCAT('1', 2), CONCAT(1, 2);\n+------------------+----------------+--------------+\n| CONCAT('1', '2') | CONCAT('1', 2) | CONCAT(1, 2) |\n+------------------+----------------+--------------+\n| 12               | 12             | 12           |\n+------------------+----------------+--------------+\n1 row in set (0.00 sec)\n\nmysql\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-for4fqa",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210708003510-for4fqa"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "存储数据时，把某个值转换为某个列需要的类型"
				}
			]
		},
		{
			"ID": "20210708003510-9mvzcpp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-9mvzcpp"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们先新建一个简单的表"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "t"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "："
				}
			]
		},
		{
			"ID": "20210708003510-5evu5z7",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-5evu5z7"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "CREATE TABLE t (\n    i1 TINYINT,\n    i2 TINYINT,\n    s VARCHAR(100)\n);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-vrzwazs",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-vrzwazs"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这个表有三个列，列"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "i1"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "i2"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "是用来存储整数的，列"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "s"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "是用来存储字符串的，如果我们在存储数据的时候填入的不是期望的类型，就像这样："
				}
			]
		},
		{
			"ID": "20210708003510-cs2qzdw",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-cs2qzdw"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "mysql\u003e INSERT INTO t(i1, i2, s) VALUES('100', '100', 200);\nQuery OK, 1 row affected (0.01 sec)\n\nmysql\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-c98to2c",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-c98to2c"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们为列"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "i1"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "i2"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "填入的值是一个字符串值："
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "'100'"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，列"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "s"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "填入的值是一个整数值："
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "200"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，虽然说类型都不对，但是由于隐式类型转换的存在，在插入数据的时候字符串"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "'100'"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "会被转型为整数"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "100"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，整数"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "200"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "会被转型成字符串"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "'200'"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，所以最后插入成功，我们来看一下效果："
				}
			]
		},
		{
			"ID": "20210708003510-rubvw76",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-rubvw76"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "mysql\u003e SELECT * FROM t;\n+------+------+------+\n| i1   | i2   | s    |\n+------+------+------+\n|  100 |  100 | 200  |\n+------+------+------+\n1 row in set (0.00 sec)\n\nmysql\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-5fts8hh",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210708003510-5fts8hh"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "类型转换的注意事项"
				}
			]
		},
		{
			"ID": "20210708003510-iqpoy1o",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210708003510-iqpoy1o"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "MySQL"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "会尽量把值转换为表达式中需要的类型，而不是产生错误"
				}
			]
		},
		{
			"ID": "20210708003510-hagrvqf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-hagrvqf"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "按理说"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "'23sfd'"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "这个字符串无法转换为数字，但是"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "MySQL"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "规定只要字符串的开头部分包含数字，那么就把这个字符串转换为开头的数字，如果开头并没有包含数字，那么将被转换成"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "0"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，比方说这样："
				}
			]
		},
		{
			"ID": "20210708003510-7jgyho2",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-7jgyho2"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "'23sfd'         →   23\n'2019-08-28'    →   2019\n'11:30:32'      →   11\n'sfd'           →   0\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-h5vssvo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-h5vssvo"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "看个例子："
				}
			]
		},
		{
			"ID": "20210708003510-ohoc53z",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-ohoc53z"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "mysql\u003e SELECT '23sfd' + 0, 'sfd' + 0;\n+-------------+-----------+\n| '23sfd' + 0 | 'sfd' + 0 |\n+-------------+-----------+\n|          23 |         0 |\n+-------------+-----------+\n1 row in set, 2 warnings (0.00 sec)\n\nmysql\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-k7qletg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-k7qletg"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "不过需要注意的是，"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "这种强制转换不能用于存储数据中（只能查询）"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，比方说这样："
				}
			]
		},
		{
			"ID": "20210708003510-3nwvwog",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-3nwvwog"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "mysql\u003e INSERT INTO t(i1, i2, s) VALUES('sfd', 'sfd', 'aaa');\nERROR 1366 (HY000): Incorrect integer value: 'sfd' for column 'i1' at row 1\nmysql\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-8totz3r",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-8totz3r"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "由于"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "i1"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "i2"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "列需要整数，而填入的字符串"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "'sfd'"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "并不能顺利的转为整数，所以报错了。"
				}
			]
		},
		{
			"ID": "20210708003510-elawfrf",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210708003510-elawfrf"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "在运算时会自动提升操作数的类型"
				}
			]
		},
		{
			"ID": "20210708003510-pi1hjfd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-pi1hjfd"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们知道不同数据类型能表示的数值范围是不一样的，在小的数据类型经过算数计算后得出的结果可能大于该可以表示的范围。比方说"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "t"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "表中有一条记录如下："
				}
			]
		},
		{
			"ID": "20210708003510-r9j4izq",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-r9j4izq"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "mysql\u003e SELECT * FROM t;\n+------+------+------+\n| i1   | i2   | s    |\n+------+------+------+\n|  100 |  100 | 200  |\n+------+------+------+\n1 row in set (0.00 sec)\n\nmysql\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-39ujkm4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-39ujkm4"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其中的"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "i1"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "列和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "i2"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "列的类型都是"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "TINYINT"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，而"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "TINYINT"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "能表示的最大正整数是"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "127"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，如果我们把"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "i1"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "列的值和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "i2"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "列的值相加会发生什么呢？请看："
				}
			]
		},
		{
			"ID": "20210708003510-8ib79bi",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210708003510-8ib79bi"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "mysql\u003e SELECT i1 + i2 FROM t;\n+---------+\n| i1 + i2 |\n+---------+\n|     200 |\n+---------+\n1 row in set (0.00 sec)\n\nmysql\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210708003510-r6o4bo0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-r6o4bo0"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可以看到最后的结果是"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "200"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，可是它已经超过"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "TINYINT"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "类型的表示范围了。其实在运算的过程中，"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "MySQL"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "自动将整数类型的操作数提升到了"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "BIGINT"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，这样就不会产生运算结果太大超过"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "TINYINT"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "能表示的数值范围的尴尬情况了。类似的，有浮点数的运算过程会把操作数自动转型为"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "DOUBLE"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "类型。"
				}
			]
		},
		{
			"ID": "20210708003510-pxkn0ht",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-pxkn0ht"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "::: tip"
				}
			]
		},
		{
			"ID": "20210708003510-hk34c19",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-hk34c19"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "小贴士： 有隐式类型转换，自然也有显式类型转换。在MySQL中，可以"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "使用CAST函数完成显式地类型转换"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，就是我们明确指定要将特定的数值转换为某种特定类型，一般是 MySQL 底层使用，初衷不是给开发者使用的。"
				}
			]
		},
		{
			"ID": "20210708003510-q9xgk96",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210708003510-q9xgk96"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": ":::"
				}
			]
		}
	]
}