{
	"ID": "20210707224540-3aouv33",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20210707224540-3aouv33",
		"title": "8 synchronized 原理—Monitor",
		"type": "doc",
		"updated": "20210812004704"
	},
	"Children": [
		{
			"ID": "20210808175538-bj49ab1",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210808175538-bj49ab1",
				"updated": "20210808175618"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "类原型头—Prototype Header 🔥"
				}
			]
		},
		{
			"ID": "20210811225910-23riggy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210811225910-23riggy",
				"updated": "20210811225944"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "类似 Object Header，存储 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "class"
				},
				{
					"Type": "NodeText",
					"Data": " 的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "偏向状态"
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "epoch"
				},
				{
					"Type": "NodeText",
					"Data": " 等"
				}
			]
		},
		{
			"ID": "20210808175539-w2uic5z",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210808175539-w2uic5z",
				"updated": "20210808175539"
			}
		},
		{
			"ID": "20210707224540-i7wpq6t",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707224540-i7wpq6t",
				"updated": "20210808175531"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对象头—Object Header 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-y0fm4af",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20210707224540-y0fm4af",
				"updated": "20210714222150"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20210714222150-8mc2hi9",
					"Type": "NodeList",
					"ListData": {},
					"Properties": {
						"id": "20210714222150-8mc2hi9",
						"updated": "20210714222150"
					},
					"Children": [
						{
							"ID": "20210714222150-00p2lmp",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20210714222150-00p2lmp"
							},
							"Children": [
								{
									"ID": "20210714222150-h63z0ih",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20210714222150-h63z0ih"
									},
									"Children": [
										{
											"Type": "NodeTextMark",
											"TextMarkType": "a",
											"TextMarkAHref": "https://www.jianshu.com/p/3d38cba67f8b",
											"TextMarkTextContent": "简书"
										}
									]
								}
							]
						},
						{
							"ID": "20210714222150-ismpkx6",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20210714222150-ismpkx6"
							},
							"Children": [
								{
									"ID": "20210714222150-u70etnn",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20210714222150-u70etnn"
									},
									"Children": [
										{
											"Type": "NodeTextMark",
											"TextMarkType": "a",
											"TextMarkAHref": "https://link.jianshu.com/?t=https%3A%2F%2Fgithub.com%2Fdmlloyd%2Fopenjdk%2Fblob%2Fjdk%2Fjdk%2Fsrc%2Fhotspot%2Fshare%2Foops%2FmarkOop.hpp",
											"TextMarkTextContent": "markOop.hpp"
										}
									]
								}
							]
						},
						{
							"ID": "20210714222150-7i0hfb3",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20210714222150-7i0hfb3"
							},
							"Children": [
								{
									"ID": "20210714222150-0f7aeku",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20210714222150-0f7aeku"
									},
									"Children": [
										{
											"Type": "NodeTextMark",
											"TextMarkType": "a",
											"TextMarkAHref": "https://link.jianshu.com/?t=https%3A%2F%2Fwiki.openjdk.java.net%2Fdisplay%2FHotSpot%2FCompressedOops",
											"TextMarkTextContent": "CompressedOops"
										}
									]
								}
							]
						},
						{
							"ID": "20210714222150-mjtv357",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20210714222150-mjtv357"
							},
							"Children": [
								{
									"ID": "20210714222150-shwyrp5",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20210714222150-shwyrp5"
									},
									"Children": [
										{
											"Type": "NodeTextMark",
											"TextMarkType": "a",
											"TextMarkAHref": "https://link.jianshu.com/?t=http%3A%2F%2Fwww.iteye.com%2Ftopic%2F470404",
											"TextMarkTextContent": "JVM 优化之压缩普通对象指针"
										}
									]
								}
							]
						},
						{
							"ID": "20210714222150-1vqmmae",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20210714222150-1vqmmae",
								"updated": "20210714222150"
							},
							"Children": [
								{
									"ID": "20210714222150-aqi29s4",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20210714222150-aqi29s4",
										"updated": "20210714222150"
									},
									"Children": [
										{
											"Type": "NodeTextMark",
											"TextMarkType": "a",
											"TextMarkAHref": "https://link.jianshu.com/?t=https%3A%2F%2Fstackoverflow.com%2Fquestions%2F26357186%2Fwhat-is-in-java-object-header",
											"TextMarkTextContent": "What is in java object header"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210714230659-cizcajn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210714230659-cizcajn",
				"updated": "20210714230659"
			}
		},
		{
			"ID": "20210714230705-8t8oxdz",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210714230705-8t8oxdz",
				"updated": "20210714230711"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "由来"
				}
			]
		},
		{
			"ID": "20210714230113-x6er232",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210714230113-x6er232",
				"updated": "20210714230302"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在 JVM 中需要大量存储对象，存储时为了实现一些额外的功能，需要在对象中添加一些"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "标记字段"
				},
				{
					"Type": "NodeText",
					"Data": "用于"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "增强对象功能"
				},
				{
					"Type": "NodeText",
					"Data": "，这些标记字段组成了"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "对象头"
				},
				{
					"Type": "NodeText",
					"Data": "。"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "synchronized 使用的锁也是存在 Java 对象头中"
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20210714230840-p2fufcv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210714230840-p2fufcv",
				"updated": "20210714230840"
			}
		},
		{
			"ID": "20210714230840-tfgxjjz",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210714230840-tfgxjjz",
				"updated": "20210714230841"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "字宽"
				}
			]
		},
		{
			"ID": "20210714230843-1zusqrf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210714230843-1zusqrf",
				"updated": "20210716002011"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "32 位 JVM，1字宽等于32bit，即4字节"
				},
				{
					"Type": "NodeText",
					"Data": "。"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "64位 JVM，1字宽等于64bit，即8字节"
				}
			]
		},
		{
			"ID": "20210714230326-740sgci",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20210714230326-740sgci",
				"updated": "20210714230433"
			},
			"Children": [
				{
					"ID": "20210714230326-fldoxpp",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20210714230326-fldoxpp"
					},
					"Children": [
						{
							"ID": "20210714230326-enzqqgy",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210714230326-enzqqgy",
								"updated": "20210714230430"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "若对象"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "不是数组"
								},
								{
									"Type": "NodeText",
									"Data": "，则 JVM 使用"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "2字宽"
								},
								{
									"Type": "NodeText",
									"Data": "存储对象头"
								}
							]
						}
					]
				},
				{
					"ID": "20210714230405-fcxwkrx",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20210714230405-fcxwkrx",
						"updated": "20210714230433"
					},
					"Children": [
						{
							"ID": "20210714230405-r681ec9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210714230405-r681ec9",
								"updated": "20210715223406"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "若对象"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "是数组"
								},
								{
									"Type": "NodeText",
									"Data": "，则 JVM 使用"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "3字宽"
								},
								{
									"Type": "NodeText",
									"Data": "存储对象头"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210714230751-zvify6n",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210714230751-zvify6n",
				"updated": "20210714230751"
			}
		},
		{
			"ID": "20210707224540-rs4u9yt",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-rs4u9yt",
				"updated": "20210714231052"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "普通对象—非数组"
				}
			]
		},
		{
			"ID": "20210716002026-q9p1vq8",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"fold": "1",
				"id": "20210716002026-q9p1vq8",
				"updated": "20210716002218"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "32位JVM"
				}
			]
		},
		{
			"ID": "20210716003033-4xj9ebo",
			"Type": "NodeParagraph",
			"Properties": {
				"heading-fold": "1",
				"id": "20210716003033-4xj9ebo",
				"updated": "20210716003040"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "由如下可得出，int 占用 4 字节，Integer 占用 4+8 = 12 字节"
				}
			]
		},
		{
			"ID": "20210707224540-bi3w6gf",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"heading-fold": "1",
				"id": "20210707224540-bi3w6gf",
				"updated": "20210715230729"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "|---------------------------------------------------------------|\n|                     Object Header (64 bits)                   |\n|------------------------------------|--------------------------|\n|        Mark Word (32 bits)         |    Klass Point (32 bits) |\n|------------------------------------|--------------------------|\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20210707224540-oirrqoi",
			"Type": "NodeParagraph",
			"Properties": {
				"heading-fold": "1",
				"id": "20210707224540-oirrqoi",
				"updated": "20210716003032"
			}
		},
		{
			"ID": "20210714231128-djq1rsu",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210714231128-djq1rsu",
				"updated": "20210716002217"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "64位JVM"
				}
			]
		},
		{
			"ID": "20210716003155-hlhrdkj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210716003155-hlhrdkj",
				"updated": "20210716003220"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "按照32位JVM可推倒出64位JVM如下："
				}
			]
		},
		{
			"ID": "20210716002112-vubd32y",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20210716002112-vubd32y",
				"updated": "20210716002204"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "|---------------------------------------------------------------|\n|                     Object Header (128 bits)                  |\n|------------------------------------|--------------------------|\n|        Mark Word (64 bits)         |    Klass Point (64 bits) |\n|------------------------------------|--------------------------|\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20210716003149-4669g3c",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210716003149-4669g3c",
				"updated": "20210716003224"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可得出，int 占用 4 字节，Integer 占用 4+16 = 20 字节"
				}
			]
		},
		{
			"ID": "20210716002303-m20op0p",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210716002303-m20op0p",
				"updated": "20210716004213"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "但是由于 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "Java8 默认开启指针压缩"
				},
				{
					"Type": "NodeText",
					"Data": "，即默认配置了"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "vm"
				},
				{
					"Type": "NodeText",
					"Data": "参数"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "-XX:+UseCompressedOops"
				},
				{
					"Type": "NodeText",
					"Data": "。同样可配置"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "-XX:-UseCompressedOops"
				},
				{
					"Type": "NodeText",
					"Data": " 关闭指针压缩。"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "对 Klass Point 进行压缩"
				},
				{
					"Type": "NodeText",
					"Data": "后的对象头如下："
				}
			]
		},
		{
			"ID": "20210716002744-su98z1g",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20210716002744-su98z1g",
				"updated": "20210716002829"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "|---------------------------------------------------------------|\n|                     Object Header (96 bits)                  |\n|------------------------------------|--------------------------|\n|        Mark Word (64 bits)         |    Klass Point (32 bits) |\n|------------------------------------|--------------------------|\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20210716002040-k6y1m7b",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210716002040-k6y1m7b",
				"updated": "20210716003118"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "此时可得出，int 占用 4 字节，Integer 占用 4+12 = 16 字节"
				}
			]
		},
		{
			"ID": "20210716002846-gkcpgm9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210716002846-gkcpgm9",
				"updated": "20210716002846"
			}
		},
		{
			"ID": "20210716002846-mufh50v",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210716002846-mufh50v",
				"updated": "20210716002846"
			}
		},
		{
			"ID": "20210716002040-ww53xtm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210716002040-ww53xtm",
				"updated": "20210716002040"
			}
		},
		{
			"ID": "20210707224540-r7bsjim",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-r7bsjim",
				"updated": "20210714231122"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "数组对象"
				}
			]
		},
		{
			"ID": "20210716003715-ssbg7ug",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"fold": "1",
				"id": "20210716003715-ssbg7ug",
				"updated": "20210716003725"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "32位JVM"
				}
			]
		},
		{
			"ID": "20210707224540-wslg5ka",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"heading-fold": "1",
				"id": "20210707224540-wslg5ka",
				"updated": "20210715230950"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "|----------------------------------------------------------------------------------|\n|                                 Object Header (96 bits)                          |\n|--------------------------------|------------------------|------------------------|\n|        Mark Word(32bits)       |    Klass Point(32bits) |  array length(32bits)  |\n|--------------------------------|------------------------|------------------------|\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20210714231137-fj3jjkr",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210714231137-fj3jjkr",
				"updated": "20210716004349"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "64位JVM"
				}
			]
		},
		{
			"ID": "20210716004356-vp1fjpd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210716004356-vp1fjpd",
				"updated": "20210716004406"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "未开启指针压缩"
				}
			]
		},
		{
			"ID": "20210716004407-7yj6ao7",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20210716004407-7yj6ao7",
				"updated": "20210716004511"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "|----------------------------------------------------------------------------------|\n|                                 Object Header (192 bits)                         |\n|--------------------------------|------------------------|------------------------|\n|        Mark Word(64bits)       |    Klass Point(64bits) |  array length(64bits)  |\n|--------------------------------|------------------------|------------------------|\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20210716003729-gh1zuej",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210716003729-gh1zuej",
				"updated": "20210716004448"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "开启指针压缩"
				}
			]
		},
		{
			"ID": "20210716004449-dlc7ohu",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20210716004449-dlc7ohu",
				"updated": "20210716004531"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "|----------------------------------------------------------------------------------|\n|                                 Object Header (128 bits)                         |\n|--------------------------------|------------------------|------------------------|\n|        Mark Word(64bits)       |    Klass Point(32bits) |  array length(32bits)  |\n|--------------------------------|------------------------|------------------------|\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20210716004450-xizhyyt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210716004450-xizhyyt",
				"updated": "20210716004450"
			}
		},
		{
			"ID": "20210707224540-4f6nzvj",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-4f6nzvj",
				"updated": "20210707224540"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Mark Word 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-7su974c",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-7su974c",
				"updated": "20210716003901"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这部分主要用来存储对象自身的运行时数据，如 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "hashcode"
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "GC 分代年龄"
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "锁标记"
				},
				{
					"Type": "NodeText",
					"Data": "等\n"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "mark word"
				},
				{
					"Type": "NodeText",
					"Data": "的位长度为 JVM 的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "一个字宽"
				},
				{
					"Type": "NodeText",
					"Data": "大小，也就是说 32 位 JVM 的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Mark word"
				},
				{
					"Type": "NodeText",
					"Data": "为 32 位，64 位 JVM 为 64 位\n"
				}
			]
		},
		{
			"ID": "20210716003903-uoqv1pa",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"fold": "1",
				"id": "20210716003903-uoqv1pa",
				"updated": "20210729001520"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "32 位"
				},
				{
					"Type": "NodeText",
					"Data": "下的 Mark Word"
				}
			]
		},
		{
			"ID": "20210716000623-minev08",
			"Type": "NodeParagraph",
			"Properties": {
				"heading-fold": "1",
				"id": "20210716000623-minev08",
				"updated": "20210716000643"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"style": "width: 907px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "../assets/image-20210716000643-9i9a7py.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 907px;\"}"
				}
			]
		},
		{
			"ID": "20210707224540-0t4dfah",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"heading-fold": "1",
				"id": "20210707224540-0t4dfah",
				"updated": "20210707224540"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "|-------------------------------------------------------|--------------------|\n|                  Mark Word (32 bits)                  |       State        |\n|-------------------------------------------------------|--------------------|\n| identity_hashcode:25 | age:4 | biased_lock:1 | lock:2 |       Normal       |\n|-------------------------------------------------------|--------------------|\n|  thread:23 | epoch:2 | age:4 | biased_lock:1 | lock:2 |       Biased       |\n|-------------------------------------------------------|--------------------|\n|               ptr_to_lock_record:30          | lock:2 | Lightweight Locked |\n|-------------------------------------------------------|--------------------|\n|               ptr_to_heavyweight_monitor:30  | lock:2 | Heavyweight Locked |\n|-------------------------------------------------------|--------------------|\n|                                              | lock:2 |    Marked for GC   |\n|-------------------------------------------------------|--------------------|\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20210707224540-i08g9mx",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210707224540-i08g9mx",
				"updated": "20210729001533"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "64 位"
				},
				{
					"Type": "NodeText",
					"Data": "下的 Mark Word"
				}
			]
		},
		{
			"ID": "20210729001616-niy4pug",
			"Type": "NodeSuperBlock",
			"Properties": {
				"id": "20210729001616-niy4pug",
				"updated": "20210801161731"
			},
			"Children": [
				{
					"Type": "NodeSuperBlockOpenMarker"
				},
				{
					"Type": "NodeSuperBlockLayoutMarker",
					"Data": "row"
				},
				{
					"ID": "20210716001732-ixth7g8",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20210716001732-ixth7g8",
						"updated": "20210716001759"
					},
					"Children": [
						{
							"Type": "NodeImage",
							"Data": "span",
							"Properties": {
								"style": "width: 891px;"
							},
							"Children": [
								{
									"Type": "NodeBang"
								},
								{
									"Type": "NodeOpenBracket"
								},
								{
									"Type": "NodeLinkText",
									"Data": "image.png"
								},
								{
									"Type": "NodeCloseBracket"
								},
								{
									"Type": "NodeOpenParen"
								},
								{
									"Type": "NodeLinkDest",
									"Data": "../assets/image-20210716001759-26semd6.png"
								},
								{
									"Type": "NodeCloseParen"
								}
							]
						},
						{
							"Type": "NodeKramdownSpanIAL",
							"Data": "{: style=\"width: 891px;\"}"
						}
					]
				},
				{
					"ID": "20210707224540-x70f9vq",
					"Type": "NodeCodeBlock",
					"IsFencedCodeBlock": true,
					"Properties": {
						"id": "20210707224540-x70f9vq",
						"updated": "20210801161731"
					},
					"Children": [
						{
							"Type": "NodeCodeBlockFenceOpenMarker",
							"Data": "```"
						},
						{
							"Type": "NodeCodeBlockFenceInfoMarker",
							"CodeBlockInfo": "YmFzaA=="
						},
						{
							"Type": "NodeCodeBlockCode",
							"Data": "|------------------------------------------------------------------------------|--------------------|\n|                                  Mark Word (64 bits)                         |       Lock State   |\n|------------------------------------------------------------------------------|--------------------|\n| unused:25 | identity_hashcode:31 | unused:1 | age:4 | biased_lock:1 | lock:2 |       Normal       |\n|------------------------------------------------------------------------------|--------------------|\n| thread:54 |       epoch:2        | unused:1 | age:4 | biased_lock:1 | lock:2 |       Biased       |\n|------------------------------------------------------------------------------|--------------------|\n|                       ptr_to_lock_record:62                         | lock:2 | Lightweight Locked |\n|------------------------------------------------------------------------------|--------------------|\n|                     ptr_to_heavyweight_monitor:62                   | lock:2 | Heavyweight Locked |\n|------------------------------------------------------------------------------|--------------------|\n|                                                                     | lock:2 |    Marked for GC   |\n|------------------------------------------------------------------------------|--------------------|\n"
						},
						{
							"Type": "NodeCodeBlockFenceCloseMarker",
							"Data": "```"
						}
					]
				},
				{
					"Type": "NodeSuperBlockCloseMarker"
				}
			]
		},
		{
			"ID": "20210715231446-2pdwbm5",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20210715231446-2pdwbm5",
				"updated": "20210804182227"
			},
			"Children": [
				{
					"ID": "20210804182029-qvqnkp3",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20210804182029-qvqnkp3"
					},
					"Children": [
						{
							"ID": "20210804182029-bp8hlfe",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210804182029-bp8hlfe"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "identity_hashcode"
								},
								{
									"Type": "NodeText",
									"Data": "：对象标识 Hash 码，采用延迟加载技术。调用方法"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "System.identityHashCode()"
								},
								{
									"Type": "NodeText",
									"Data": "计算，并会将结果写到该对象头中。当对象被锁定时，该值会移动到管程 Monitor 中。"
								}
							]
						}
					]
				},
				{
					"ID": "20210804182055-5ir4ilz",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20210804182055-5ir4ilz"
					},
					"Children": [
						{
							"ID": "20210804182055-5yr92qj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210804182055-5yr92qj"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "age"
								},
								{
									"Type": "NodeText",
									"Data": "：4 位的 Java "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "对象分代年龄"
								},
								{
									"Type": "NodeText",
									"Data": "。在 GC 中，如果对象在 Survivor 区复制一次，年龄增加 1。当对象达到设定的阈值时，将会晋升到老年代。默认情况下，并行 GC 的年龄阈值为 15，并发 GC 的年龄阈值为 6。由于 age 只有 4 位，所以最大值为 15，这就是"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "-XX:MaxTenuringThreshold"
								},
								{
									"Type": "NodeText",
									"Data": "选项最大值为 15 的原因。"
								}
							]
						}
					]
				},
				{
					"ID": "20210804182057-0ke345q",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20210804182057-0ke345q",
						"updated": "20210804182227"
					},
					"Children": [
						{
							"ID": "20210804182057-dvshhdq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210804182057-dvshhdq",
								"updated": "20210804182227"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "thread"
								},
								{
									"Type": "NodeText",
									"Data": "：持有"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "偏向锁的线程 ID"
								},
								{
									"Type": "NodeText",
									"Data": "（OS分配的，与Java无关）。"
								}
							]
						}
					]
				},
				{
					"ID": "20210804182059-qlzv7jm",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20210804182059-qlzv7jm",
						"updated": "20210804182211"
					},
					"Children": [
						{
							"ID": "20210804182059-wmm0p92",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210804182059-wmm0p92",
								"updated": "20210804182211"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "epoch"
								},
								{
									"Type": "NodeText",
									"Data": "：偏向时间戳。只在"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "批量重偏向时发生改变"
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				},
				{
					"ID": "20210804182101-e6rktov",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20210804182101-e6rktov",
						"updated": "20210804182153"
					},
					"Children": [
						{
							"ID": "20210804182101-0swlgnb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210804182101-0swlgnb",
								"updated": "20210804182153"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "ptr_to_lock_record"
								},
								{
									"Type": "NodeText",
									"Data": "：指向栈中"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "锁记录"
								},
								{
									"Type": "NodeText",
									"Data": "的指针。"
								}
							]
						}
					]
				},
				{
					"ID": "20210804182103-586mv4q",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20210804182103-586mv4q"
					},
					"Children": [
						{
							"ID": "20210804182103-735a0vg",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210804182103-735a0vg"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "ptr_to_heavyweight_monitor"
								},
								{
									"Type": "NodeText",
									"Data": "：指向管程 Monitor 的指针。"
								}
							]
						}
					]
				},
				{
					"ID": "20210804182105-pml1a0p",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20210804182105-pml1a0p",
						"updated": "20210804182145"
					},
					"Children": [
						{
							"ID": "20210804182105-4h8kpa8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210804182105-4h8kpa8",
								"updated": "20210804182145"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "biased_lock"
								},
								{
									"Type": "NodeText",
									"Data": "：对象是否启用"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "偏向锁标记"
								},
								{
									"Type": "NodeText",
									"Data": "，1表示对象启用偏向锁，0表示对象关闭偏向锁。"
								}
							]
						}
					]
				},
				{
					"ID": "20210804182108-c6zosih",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20210804182108-c6zosih"
					},
					"Children": [
						{
							"ID": "20210804182108-1sm7qw9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210804182108-1sm7qw9"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "lock"
								},
								{
									"Type": "NodeText",
									"Data": "：2 位的"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "锁状态标记位"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210716003801-u8qyff1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210716003801-u8qyff1",
				"updated": "20210716003801"
			}
		},
		{
			"ID": "20210716003801-3zeggsm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210716003801-3zeggsm",
				"updated": "20210716003801"
			}
		},
		{
			"ID": "20210707224540-1zc1yye",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-1zc1yye",
				"updated": "20210707224540"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Klass Word"
				}
			]
		},
		{
			"ID": "20210707224540-wmcgfhe",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-wmcgfhe",
				"updated": "20210716004807"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这一部分用于"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "存储对象的类型指针"
				},
				{
					"Type": "NodeText",
					"Data": "，该指针"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "指向它的类元数据"
				},
				{
					"Type": "NodeText",
					"Data": "，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "JVM 通过这个指针确定对象是哪个类的实例"
				},
				{
					"Type": "NodeText",
					"Data": "。该指针的位长度为 JVM 的一个字宽，即 32 位的 JVM 为 32 位，64 位的 JVM 为 64 位。\n如果应用的对象过多，使用 64 位的指针将浪费大量内存，统计而言，64 位的 JVM 将会比 32 位的 JVM 多耗费 50%的内存。为了节约内存可以使用选项"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "-XX:+UseCompressedOops"
				},
				{
					"Type": "NodeText",
					"Data": "开启指针压缩（Java8默认开启），其中，oop 即 ordinary object pointer 普通对象指针。开启该选项后，下列指针将压缩至 32 位："
				}
			]
		},
		{
			"ID": "20210707224540-kiashv3",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20210707224540-kiashv3"
			},
			"Children": [
				{
					"ID": "20210707224540-lm0ugt8",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20210707224540-lm0ugt8"
					},
					"Children": [
						{
							"ID": "20210707224540-ivfeo0r",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-ivfeo0r"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "每个 Class 的属性指针（即静态变量）"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-mrspx43",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20210707224540-mrspx43"
					},
					"Children": [
						{
							"ID": "20210707224540-4q1ztou",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-4q1ztou"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "每个对象的属性指针（即对象变量）"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-2wx1kxw",
					"Type": "NodeListItem",
					"Data": "3",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 3,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mw==",
						"Num": 3
					},
					"Properties": {
						"id": "20210707224540-2wx1kxw"
					},
					"Children": [
						{
							"ID": "20210707224540-egljusp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-egljusp"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "普通对象数组的每个元素指针"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-tabyi1g",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-tabyi1g"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当然，也不是所有的指针都会压缩，一些特殊类型的指针 JVM 不会优化，比如指向 PermGen 的 Class 对象指针(JDK8 中指向元空间的 Class 对象指针)、本地变量、堆栈元素、入参、返回值和 NULL 指针等。"
				}
			]
		},
		{
			"ID": "20210716004715-orn02ay",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210716004715-orn02ay",
				"updated": "20210716004715"
			}
		},
		{
			"ID": "20210707224540-v1gx2sw",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-v1gx2sw",
				"updated": "20210707224540"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "array length"
				}
			]
		},
		{
			"ID": "20210707224540-4x5qtx1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-4x5qtx1",
				"updated": "20210716004737"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果对象是一个数组，那么对象头还需要有额外的空间用于存储数组的长度，这部分数据的长度也随着 JVM 架构的不同而不同：32 位的 JVM 上，长度为 32 位；64 位 JVM 则为 64 位。64 位 JVM 如果开启"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "-XX:+UseCompressedOops"
				},
				{
					"Type": "NodeText",
					"Data": "选项（Java8默认开启），"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "该区域长度也将由 64 位压缩至 32 位"
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20210714222047-ee8hf7p",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210714222047-ee8hf7p",
				"updated": "20210714222047"
			}
		},
		{
			"ID": "20210803234038-ciwgm6o",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210803234038-ciwgm6o",
				"updated": "20210803234038"
			}
		},
		{
			"ID": "20210803234043-v0hvbsc",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210803234043-v0hvbsc",
				"updated": "20210803234054"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "jol 工具🔥"
				}
			]
		},
		{
			"ID": "20210707224540-uslnpyx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-uslnpyx",
				"updated": "20210707224540"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "查看 Java 对象头需要借助 openjdk 提供的工具"
				}
			]
		},
		{
			"ID": "20210707224540-m1ssn7k",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20210707224540-m1ssn7k",
				"updated": "20210803234551"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eG1s"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\u003c!-- https://mvnrepository.com/artifact/org.openjdk.jol/jol-core --\u003e\n\u003cdependency\u003e\n    \u003cgroupId\u003eorg.openjdk.jol\u003c/groupId\u003e\n    \u003cartifactId\u003ejol-core\u003c/artifactId\u003e\n    \u003cversion\u003e0.16\u003c/version\u003e\n    \u003cscope\u003eprovided\u003c/scope\u003e\n\u003c/dependency\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20210803234120-lr6qvix",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20210803234120-lr6qvix",
				"updated": "20210707224540"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@Slf4j(topic = \"TestBiasedLock\")\npublic class TestBiasedLock {\n\n    public static void main(String[] args) throws InterruptedException {\n        test1();\n    }\n\n    /**\n     * 测试101\n     */\n    private static void test1(){\n        log.debug(ClassLayout.parseInstance(new Dog()).toPrintable());\n\n        // 偏向锁是默认是延迟的，不会在程序启动时立即生效。VM参数可以解决-XX:BiasedLockingStartupDelay=0\n        // 或睡一会。TimeUnit.SECONDS.sleep(5);\n        log.debug(ClassLayout.parseInstance(new Dog()).toPrintable());\n    }\n}\n\nclass Dog {\n\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20210803234120-do0u2it",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210803234120-do0u2it",
				"updated": "20210803234610"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "jol 0.14版本结果如下（"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "小端法"
				},
				{
					"Type": "NodeText",
					"Data": "：最低有效位在前）："
				}
			]
		},
		{
			"ID": "20210803234120-7ndqcxa",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210803234120-7ndqcxa",
				"updated": "20210803232935"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "下面的偏向锁、锁状态为"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "101"
				},
				{
					"Type": "NodeText",
					"Data": "，即"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "00000101"
				},
				{
					"Type": "NodeText",
					"Data": "里的3bit。由于最低有效位在前，所以按照 mark word 来说，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "*****101"
				},
				{
					"Type": "NodeText",
					"Data": "，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "101"
				},
				{
					"Type": "NodeText",
					"Data": "就是在最低位，所以排在前面。同一字节中按照正常顺序排列即可！"
				}
			]
		},
		{
			"ID": "20210803234120-zeffzkc",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20210803234120-zeffzkc",
				"updated": "20210707224540"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "21:21:16.604 [main] DEBUG TestBiasedLock - _999_demo.Dog object internals:\n OFFSET  SIZE   TYPE DESCRIPTION                               VALUE\n      0     4        (object header)                           05 00 00 00 (00000101 00000000 00000000 00000000) (5)\n      4     4        (object header)                           00 00 00 00 (00000000 00000000 00000000 00000000) (0)\n      8     4        (object header)                           22 dc 00 f8 (00100010 11011100 00000000 11111000) (-134161374)\n     12     4        (loss due to the next object alignment)\nInstance size: 16 bytes\nSpace losses: 0 bytes internal + 4 bytes external = 4 bytes total\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20210803234120-bk79339",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210803234120-bk79339",
				"updated": "20210803234804"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "jol 0.16 版本结果如下（更清晰了）："
				}
			]
		},
		{
			"ID": "20210803234613-meulogv",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20210803234613-meulogv",
				"updated": "20210803234755"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "cGxhaW50ZXh0"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "23:47:03.277 [main] DEBUG TestBiasedLock - _999_demo.Dog object internals:\nOFF  SZ   TYPE DESCRIPTION               VALUE\n  0   8        (object header: mark)     0x0000000000000005 (biasable; age: 0)\n  8   4        (object header: class)    0xf800ef22\n 12   4        (object alignment gap)  \nInstance size: 16 bytes\nSpace losses: 0 bytes internal + 4 bytes external = 4 bytes total"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20210803234119-vhca9iy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210803234119-vhca9iy",
				"updated": "20210804160856"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "0x5"
				},
				{
					"Type": "NodeText",
					"Data": "代表"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "101"
				},
				{
					"Type": "NodeText",
					"Data": "即偏向锁（此时为匿名偏向状态，因为线程id为null(0)）"
				}
			]
		},
		{
			"ID": "20210803234038-bs0p9kp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210803234038-bs0p9kp",
				"updated": "20210803234038"
			}
		},
		{
			"ID": "20210803234038-oda4jsh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210803234038-oda4jsh",
				"updated": "20210803234038"
			}
		},
		{
			"ID": "20210707224540-rvhx33q",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707224540-rvhx33q",
				"updated": "20210714222043"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Monitor—管程/监视器 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-8vusd9d",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-8vusd9d",
				"updated": "20210707224540"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Monitor 被翻译为"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "监视器"
				},
				{
					"Type": "NodeText",
					"Data": "或"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "管程"
				},
				{
					"Type": "NodeText",
					"Data": "，OS 中的概念。"
				}
			]
		},
		{
			"ID": "20210804182256-f8ljvqe",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210804182256-f8ljvqe",
				"updated": "20210804182307"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "每个 Java 对象（此时可以称为"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "锁对象"
				},
				{
					"Type": "NodeText",
					"Data": "）都可以关联一个 Monitor 对象，如果使用 synchronized 给对象上锁（"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "重量级"
				},
				{
					"Type": "NodeText",
					"Data": "）之后，该对象头的 Mark Word 中就被设置指向 Monitor 对象的指针"
				}
			]
		},
		{
			"ID": "20210714235206-pjnb3b5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210714235206-pjnb3b5",
				"updated": "20210714235232"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "获得 monitor 锁"
				},
				{
					"Type": "NodeText",
					"Data": "的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "唯一途径"
				},
				{
					"Type": "NodeText",
					"Data": "就是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "进入由这个锁保护的同步代码块或同步方法"
				},
				{
					"Type": "NodeText",
					"Data": "，线程在进入被 synchronized 保护的代码块之前，会自动获取锁，并且无论是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "正常路径退出"
				},
				{
					"Type": "NodeText",
					"Data": "，还是通过"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "抛出异常退出"
				},
				{
					"Type": "NodeText",
					"Data": "，在退出的时候"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "都会自动释放锁"
				}
			]
		},
		{
			"ID": "20210714235232-l7pj820",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210714235232-l7pj820",
				"updated": "20210714235232"
			}
		},
		{
			"ID": "20210707224540-v0rfajl",
			"Type": "NodeIFrame",
			"Data": "\u003ciframe id=\"embed_dom\" name=\"embed_dom\" frameborder=\"0\" style=\"display: block; width: 908px; height: 730px;\" src=\"https://www.processon.com/embed/602e422c07912934224cfe8d\" data-src=\"https://www.processon.com/embed/602e422c07912934224cfe8d\"\u003e\u003c/iframe\u003e",
			"Properties": {
				"id": "20210707224540-v0rfajl",
				"updated": "20210707224540"
			}
		},
		{
			"ID": "20210707224540-c7qu7bn",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707224540-c7qu7bn"
			},
			"Children": [
				{
					"ID": "20210707224540-1fw2zd6",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-1fw2zd6"
					},
					"Children": [
						{
							"ID": "20210707224540-9dtigq0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-9dtigq0"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "刚开始 Monitor 中 Owner 为 null"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-f55fjas",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-f55fjas"
					},
					"Children": [
						{
							"ID": "20210707224540-zpitp8u",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-zpitp8u"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "当 Thread-2 执行 synchronized(obj) 就会将 Monitor 的所有者 Owner 置为 Thread-2，Monitor 中只能有一个 Owner"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-hc3moqc",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-hc3moqc"
					},
					"Children": [
						{
							"ID": "20210707224540-7n2by75",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-7n2by75"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在 Thread-2 上锁的过程中，如果 Thread-3，Thread-4，Thread-5 也来执行 synchronized(obj)，就会进入 EntryList BLOCKED"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-ubktlz6",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-ubktlz6"
					},
					"Children": [
						{
							"ID": "20210707224540-it5lp84",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-it5lp84"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Thread-2 执行完同步代码块的内容，然后唤醒 EntryList 中等待的线程来竞争锁，竞争的时是非公平的"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-tjj1p9d",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707224540-tjj1p9d"
					},
					"Children": [
						{
							"ID": "20210707224540-1o5415v",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-1o5415v"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "图中 WaitSet 中的 Thread-0，Thread-1 是之前获得过锁，但条件不满足进入 WAITING 状态的线程，后面讲 wait-notify 时会分析"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-u5eidsv",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20210707224540-u5eidsv",
				"updated": "20210707224540"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20210707224540-cyc0g9q",
					"Type": "NodeList",
					"ListData": {},
					"Properties": {
						"id": "20210707224540-cyc0g9q",
						"updated": "20210707224540"
					},
					"Children": [
						{
							"ID": "20210707224540-od22wqr",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20210707224540-od22wqr"
							},
							"Children": [
								{
									"ID": "20210707224540-5w39byh",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20210707224540-5w39byh"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "synchronized 必须是"
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "strong",
											"TextMarkTextContent": "进入同一个对象（同一把锁）的 monitor"
										},
										{
											"Type": "NodeText",
											"Data": " 才有上述的效果。"
										}
									]
								}
							]
						},
						{
							"ID": "20210707224540-jcgjj5x",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20210707224540-jcgjj5x",
								"updated": "20210707224540"
							},
							"Children": [
								{
									"ID": "20210707224540-4gltum0",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20210707224540-4gltum0",
										"updated": "20210707224540"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "不加 synchronized 的对象不会关联监视器，不遵从以上规则"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210714222238-0z757h9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210714222238-0z757h9",
				"updated": "20210714222238"
			}
		},
		{
			"ID": "20210714233339-ubx8yga",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210714233339-ubx8yga",
				"updated": "20210714233339"
			}
		},
		{
			"ID": "20210714233326-qxbniyd",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210714233326-qxbniyd",
				"style": "border-radius: 4px; transition: all 0.15s cubic-bezier(0, 0, 0.2, 1) 0ms; background-color: var(--b3-theme-primary-lightest); box-shadow: 4px 0px 0 var(--b3-theme-primary-lightest), -4px 0px 0 var(--b3-theme-primary-lightest);",
				"updated": "20210805215112"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "synchronized 字节码🔥"
				}
			]
		},
		{
			"ID": "20210707224540-in7fa34",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210707224540-in7fa34",
				"style": "border-radius: 4px; transition: all 0.15s cubic-bezier(0, 0, 0.2, 1) 0ms; background-color: var(--b3-theme-primary-lightest); box-shadow: 4px 0px 0 var(--b3-theme-primary-lightest), -4px 0px 0 var(--b3-theme-primary-lightest);",
				"updated": "20210714234845"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "synchronized 代码块字节码"
				}
			]
		},
		{
			"ID": "20210707224540-brbvms1",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-brbvms1"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public class Test {\n    static final Object lock = new Object();\n    static int counter = 0;\n    public static void main(String[] args) {\n        synchronized (lock) {\n            counter++;\n        }\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-gfw90nb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-gfw90nb",
				"updated": "20210714233157"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "javap 反汇编后其对应的字节码如下："
				}
			]
		},
		{
			"ID": "20210707224540-2dua7lv",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707224540-2dua7lv"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public static void main(java.lang.String[]);\n\tdescriptor: ([Ljava/lang/String;)V\n\tflags: ACC_PUBLIC, ACC_STATIC\n\tCode:\n\t\tstack=2, locals=3, args_size=1\n\t\t\t0: getstatic #2 // \u003c- lock引用 （synchronized开始）\n            3: dup // 复制一份\n            4: astore_1 // lock引用 -\u003e slot 1。保存到slot1变量槽中，为了解锁\n            5: monitorenter // 将 lock对象 MarkWord 置为 Monitor 指针，这里底层是c调用。这里就是synchronized代码了\n            6: getstatic #3 // \u003c- i\n            9: iconst_1 // 准备常数 1\n            10: iadd // +1\n            11: putstatic #3 // -\u003e i\n            14: aload_1 // \u003c- lock引用。拿到该引用\n            15: monitorexit // 将 lock对象 MarkWord 重置, 唤醒 EntryList\n            16: goto 24\n            // 锁中异常，将锁释放\n            19: astore_2 // e -\u003e slot 2\n            20: aload_1 // \u003c- lock引用\n            21: monitorexit // 将 lock对象 MarkWord 重置(有hashcode等等), 唤醒 EntryList\n            22: aload_2 // \u003c- slot 2 (e)\n            23: athrow // throw e\n            // 锁中异常，将锁释放\n            24: return\n        Exception table:\n\t\t\tfrom to target type\n\t\t\t6 16 19 any\n\t\t\t19 22 19 any\n\t\tLineNumberTable:\n\t\t\tline 8: 0\n\t\t\tline 9: 6\n\t\t\tline 10: 14\n\t\t\tline 11: 24\n\t\tLocalVariableTable:\n\t\t\tStart Length Slot Name Signature\n\t\t\t0 25 0 args [Ljava/lang/String;\n\t\tStackMapTable: number_of_entries = 2\n\t\t\tframe_type = 255 /* full_frame */\n\t\t\t\toffset_delta = 19\n\t\t\t\tlocals = [ class \"[Ljava/lang/String;\", class java/lang/Object ]\n\t\t\t\tstack = [ class java/lang/Throwable ]\n\t\t\tframe_type = 250 /* chop */\n\t\t\t\toffset_delta = 4\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707224540-e23h2o8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-e23h2o8",
				"updated": "20210714223000"
			}
		},
		{
			"ID": "20210714233209-v0xfn4y",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210714233209-v0xfn4y",
				"updated": "20210714233220"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "synchronized 方法字节码"
				}
			]
		},
		{
			"ID": "20210714233223-q8zcje0",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20210714233223-q8zcje0",
				"updated": "20210714233245"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public synchronized void synMethod() {\n\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20210714233207-s6swq6j",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210714233207-s6swq6j",
				"updated": "20210714233253"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "javap 反汇编后其对应的字节码如下："
				}
			]
		},
		{
			"ID": "20210714233254-67yvnud",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20210714233254-67yvnud",
				"updated": "20210714233315"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "  public synchronized void synMethod();\n    descriptor: ()V\n    flags: ACC_PUBLIC, ACC_SYNCHRONIZED\n    Code:\n      stack=0, locals=1, args_size=1\n         0: return\n      LineNumberTable:\n        line 16: 0\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20210714233207-mjwge5g",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210714233207-mjwge5g",
				"updated": "20210714233207"
			}
		},
		{
			"ID": "20210714233532-5dpq7vn",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210714233532-5dpq7vn",
				"updated": "20210714233547"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "区别 🔥"
				}
			]
		},
		{
			"ID": "20210714233536-wp9yh6f",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20210714233536-wp9yh6f",
				"updated": "20210807175744"
			},
			"Children": [
				{
					"ID": "20210807175614-otof90f",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20210807175614-otof90f",
						"updated": "20210807175744"
					},
					"Children": [
						{
							"ID": "20210807175614-fvmo7xl",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210807175614-fvmo7xl",
								"updated": "20210807175728"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "代码块"
								},
								{
									"Type": "NodeText",
									"Data": "级别的 synchronized 是"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "通过 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong code",
									"TextMarkTextContent": "monitorenter"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": " 和 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong code",
									"TextMarkTextContent": "monitorexit"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": " 实现"
								},
								{
									"Type": "NodeText",
									"Data": "的\n"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "每个 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong code",
									"TextMarkTextContent": "monitorenter"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": " 都有对应的 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong code",
									"TextMarkTextContent": "monitorexit"
								},
								{
									"Type": "NodeText",
									"Data": "，为了防止异常时没有释放锁，必须在异常中也有对应的 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "monitorexit"
								},
								{
									"Type": "NodeText",
									"Data": " 指令！"
								}
							]
						},
						{
							"ID": "20210807175736-ze76r95",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210807175736-ze76r95"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "执行"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "monitorenter"
								},
								{
									"Type": "NodeText",
									"Data": "的线程会尝试获得 monitor 的所有权，会发生如下3种情况之一："
								}
							]
						},
						{
							"ID": "20210807175744-wbtu680",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20210807175744-wbtu680",
								"updated": "20210807175744"
							},
							"Children": [
								{
									"ID": "20210807175743-t95coho",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20210807175743-t95coho"
									},
									"Children": [
										{
											"ID": "20210807175743-mzt6wwd",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210807175743-mzt6wwd"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "如果 monitor 计数为0（都没拥有该 monitor），则该线程"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "获得该 monitor 并将计数置为1"
												},
												{
													"Type": "NodeText",
													"Data": "，即"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "获得锁"
												}
											]
										}
									]
								},
								{
									"ID": "20210807175747-jsouhaa",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20210807175747-jsouhaa"
									},
									"Children": [
										{
											"ID": "20210807175747-ixss9av",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210807175747-ixss9av"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "如果该线程已经拥有了该 monitor，则"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "计数累加1"
												},
												{
													"Type": "NodeText",
													"Data": "，并"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "重入"
												}
											]
										}
									]
								},
								{
									"ID": "20210807175750-tsl7qwl",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20210807175750-tsl7qwl"
									},
									"Children": [
										{
											"ID": "20210807175750-vteau8n",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210807175750-vteau8n"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "如果其他线程拥有了该 monitor，则这个线程就会被"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "阻塞"
												},
												{
													"Type": "NodeText",
													"Data": "，直到 monitor 计数变为0，这个线程再次尝试获取该 monitor"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210714234743-w0b57nc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210714234743-w0b57nc",
				"updated": "20210714234917"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "\t执行"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "monitorexit"
				},
				{
					"Type": "NodeText",
					"Data": " 的作用是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "将 monitor 的计数器减 1，直到减为 0 为止"
				},
				{
					"Type": "NodeText",
					"Data": "，代表这个 monitor 已经被释放了，即解锁"
				}
			]
		},
		{
			"ID": "20210714233613-1zepvkb",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20210714233613-1zepvkb",
				"updated": "20210807175809"
			},
			"Children": [
				{
					"ID": "20210807175809-3bmct7e",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20210807175809-3bmct7e",
						"updated": "20210807175809"
					},
					"Children": [
						{
							"ID": "20210807175809-cg4x9ou",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210807175809-cg4x9ou",
								"updated": "20210807175809"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "方法"
								},
								{
									"Type": "NodeText",
									"Data": "级别的 synchronized 会有一个  "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "ACC_SYNCHRONIZED"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "标志位"
								},
								{
									"Type": "NodeText",
									"Data": "\n当某个线程要访问某个方法的时候，会首先检查方法是否有 ACC_SYNCHRONIZED 标志，如果有则需要先获得 monitor 锁，然后才能开始执行方法，方法执行之后再释放 monitor 锁"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210714233532-ie93kz9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210714233532-ie93kz9",
				"updated": "20210714233532"
			}
		},
		{
			"ID": "20210714222239-24vwirk",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210714222239-24vwirk",
				"updated": "20210803232539"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "synchronized 优化小故事"
				}
			]
		},
		{
			"ID": "20210714222537-2w9md9k",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210714222537-2w9md9k",
				"updated": "20210714223117"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "synchronized 人称重量级锁，但是从 1.6 之对其优化之后，减少了获得锁和释放锁的性能消耗。"
				}
			]
		},
		{
			"ID": "20210707224540-a5gj3a1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-a5gj3a1",
				"updated": "20210707224540"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "故事角色"
				}
			]
		},
		{
			"ID": "20210707224540-x3htmtw",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20210707224540-x3htmtw",
				"updated": "20210707224540"
			},
			"Children": [
				{
					"ID": "20210707224540-8rkkge9",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20210707224540-8rkkge9"
					},
					"Children": [
						{
							"ID": "20210707224540-916zn0k",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-916zn0k"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "老王 - JVM"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-ydjivv1",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20210707224540-ydjivv1"
					},
					"Children": [
						{
							"ID": "20210707224540-0kvme9c",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-0kvme9c"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "小南 - 线程"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-zx4s7li",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20210707224540-zx4s7li"
					},
					"Children": [
						{
							"ID": "20210707224540-qlbu1rn",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-qlbu1rn"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "小女 - 线程"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-j6xk1hg",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20210707224540-j6xk1hg"
					},
					"Children": [
						{
							"ID": "20210707224540-oxfs0ky",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-oxfs0ky"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "房间 - 对象"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-5sgnu6v",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20210707224540-5sgnu6v"
					},
					"Children": [
						{
							"ID": "20210707224540-d6c3mhj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-d6c3mhj"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "房间门上 - 防盗锁 - Monitor"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-be40ehm",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20210707224540-be40ehm"
					},
					"Children": [
						{
							"ID": "20210707224540-9ralek3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-9ralek3"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "房间门上 - 小南书包 - 轻量级锁"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-ow6ejgy",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20210707224540-ow6ejgy"
					},
					"Children": [
						{
							"ID": "20210707224540-oggkftm",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-oggkftm"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "房间门上 - 刻上小南大名 - 偏向锁"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-i7gaydr",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20210707224540-i7gaydr"
					},
					"Children": [
						{
							"ID": "20210707224540-fqx6z64",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-fqx6z64"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "批量重刻名 - 一个类的偏向锁撤销到达 20 阈值"
								}
							]
						}
					]
				},
				{
					"ID": "20210707224540-oisde0e",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20210707224540-oisde0e"
					},
					"Children": [
						{
							"ID": "20210707224540-xbf4szy",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707224540-xbf4szy"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "不能刻名字 - 批量撤销该类对象的偏向锁，设置该类不可偏向"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210727003244-186pqwz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210727003244-186pqwz",
				"updated": "20210727003244"
			}
		},
		{
			"ID": "20210729233059-tnjo5af",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210729233059-tnjo5af",
				"updated": "20210729233059"
			}
		},
		{
			"ID": "20210807180614-tggpc64",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210807180614-tggpc64",
				"updated": "20210809231251"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "synchronized 流程图、源码分析 🔥"
				}
			]
		},
		{
			"ID": "20210807180632-hba87ae",
			"Type": "NodeIFrame",
			"Data": "\u003ciframe src=\"https://www.processon.com/embed/6101774b0791294ae0a8897d\" data-src=\"\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"width: 825px; height: 749px;\"\u003e\u003c/iframe\u003e",
			"Properties": {
				"id": "20210807180632-hba87ae",
				"updated": "20210807180746"
			}
		},
		{
			"ID": "20210729233127-ifcij4k",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210729233127-ifcij4k",
				"updated": "20210729233127"
			}
		},
		{
			"ID": "20210811224853-bq8kvnc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210811224853-bq8kvnc",
				"updated": "20210811224853"
			}
		},
		{
			"ID": "20210811224854-oc62p7c",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210811224854-oc62p7c",
				"updated": "20210811224854"
			}
		},
		{
			"ID": "20210809212401-povyn4w",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210809212401-povyn4w",
				"updated": "20210809212441"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "获取偏向锁流程（包括部分轻量级锁）"
				}
			]
		},
		{
			"ID": "20210807180004-ft7noxg",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20210807180004-ft7noxg",
				"updated": "20210809234348"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "偏向锁撤销（未完、太复杂了）"
				}
			]
		},
		{
			"ID": "20210809212542-npquoob",
			"Type": "NodeBlockQueryEmbed",
			"Properties": {
				"id": "20210809212542-npquoob",
				"updated": "20210809212542"
			},
			"Children": [
				{
					"Type": "NodeOpenBrace"
				},
				{
					"Type": "NodeOpenBrace"
				},
				{
					"Type": "NodeBlockQueryEmbedScript",
					"Data": "select * from blocks where id='20210804010752-3p0juyx'"
				},
				{
					"Type": "NodeCloseBrace"
				},
				{
					"Type": "NodeCloseBrace"
				}
			]
		},
		{
			"ID": "20210809212453-rykg5ht",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210809212453-rykg5ht",
				"updated": "20210809231831"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "源码：hotspot/src/share/vm/interpreter/bytecodeInterpreter.cpp 的 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "InterpreterRuntime::monitorenter"
				}
			]
		},
		{
			"ID": "20210809212700-u0dr63y",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20210809212700-u0dr63y",
				"updated": "20210809212935"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yysr"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "//%note monitor_1\nIRT_ENTRY_NO_ASYNC(void, InterpreterRuntime::monitorenter(JavaThread* thread, BasicObjectLock* elem))\n#ifdef ASSERT\n  thread-\u003elast_frame().interpreter_frame_verify_monitor(elem);\n#endif\n  if (PrintBiasedLockingStatistics) {\n    Atomic::inc(BiasedLocking::slow_path_entry_count_addr());\n  }\n  Handle h_obj(thread, elem-\u003eobj());\n  assert(Universe::heap()-\u003eis_in_reserved_or_null(h_obj()),\n         \"must be NULL or an object\");\n  if (UseBiasedLocking) {\n    // Retry fast entry if bias is revoked to avoid unnecessary inflation\n    ObjectSynchronizer::fast_enter(h_obj, elem-\u003elock(), true, CHECK);\n  } else {\n    ObjectSynchronizer::slow_enter(h_obj, elem-\u003elock(), CHECK);\n  }\n  assert(Universe::heap()-\u003eis_in_reserved_or_null(elem-\u003eobj()),\n         \"must be NULL or an object\");\n#ifdef ASSERT\n  thread-\u003elast_frame().interpreter_frame_verify_monitor(elem);\n#endif\nIRT_END"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20210809212453-z5b4qqy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210809212453-z5b4qqy",
				"updated": "20210809231825"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果开启了JVM偏向锁，那会进入到 hotspot/src/share/vm/runtime/synchronizer.cpp 的 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "ObjectSynchronizer::fast_enter"
				},
				{
					"Type": "NodeText",
					"Data": "方法中："
				}
			]
		},
		{
			"ID": "20210809231254-k8h2yxj",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20210809231254-k8h2yxj",
				"updated": "20210809231355"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yysr"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "void ObjectSynchronizer::fast_enter(Handle obj, BasicLock* lock, bool attempt_rebias, TRAPS) {\n if (UseBiasedLocking) {\n    if (!SafepointSynchronize::is_at_safepoint()) {\n      BiasedLocking::Condition cond = BiasedLocking::revoke_and_rebias(obj, attempt_rebias, THREAD);\n      if (cond == BiasedLocking::BIAS_REVOKED_AND_REBIASED) {\n        return;\n      }\n    } else {\n      assert(!attempt_rebias, \"can not rebias toward VM thread\");\n      BiasedLocking::revoke_at_safepoint(obj);\n    }\n    assert(!obj-\u003emark()-\u003ehas_bias_pattern(), \"biases should be revoked by now\");\n }\n\n slow_enter (obj, lock, THREAD) ;\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20210729233059-2gzj0v1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210729233059-2gzj0v1",
				"updated": "20210809233358"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当前是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "safepoint"
				},
				{
					"Type": "NodeText",
					"Data": "，则走上述代码中下面的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "revoke_at_safepoint"
				},
				{
					"Type": "NodeText",
					"Data": "方法；不是（大部分情况）则走"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "revoke_and_rebias"
				},
				{
					"Type": "NodeText",
					"Data": "撤销和重偏向"
				}
			]
		},
		{
			"ID": "20210809233404-4w1d15d",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210809233404-4w1d15d",
				"updated": "20210809233531"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Handle obj"
				},
				{
					"Type": "NodeText",
					"Data": "封装了锁对象、当前线程对象，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "attempt_rebias"
				},
				{
					"Type": "NodeText",
					"Data": "代表是否尝试重偏向（撤销这里是true）"
				}
			]
		},
		{
			"ID": "20210809232545-qeyw4d5",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20210809232545-qeyw4d5",
				"updated": "20210809232640"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yysr"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "BiasedLocking::Condition BiasedLocking::revoke_and_rebias(Handle obj, bool attempt_rebias, TRAPS) {\n  assert(!SafepointSynchronize::is_at_safepoint(), \"must not be called while at safepoint\");\n\n  // We can revoke the biases of anonymously-biased objects\n  // efficiently enough that we should not cause these revocations to\n  // update the heuristics because doing so may cause unwanted bulk\n  // revocations (which are expensive) to occur.\n  markOop mark = obj-\u003emark();\n  if (mark-\u003eis_biased_anonymously() \u0026\u0026 !attempt_rebias) {\n    // We are probably trying to revoke the bias of this object due to\n    // an identity hash code computation. Try to revoke the bias\n    // without a safepoint. This is possible if we can successfully\n    // compare-and-exchange an unbiased header into the mark word of\n    // the object, meaning that no other thread has raced to acquire\n    // the bias of the object.\n    markOop biased_value       = mark;\n    markOop unbiased_prototype = markOopDesc::prototype()-\u003eset_age(mark-\u003eage());\n    markOop res_mark = (markOop) Atomic::cmpxchg_ptr(unbiased_prototype, obj-\u003emark_addr(), mark);\n    if (res_mark == biased_value) {\n      return BIAS_REVOKED;\n    }\n  } else if (mark-\u003ehas_bias_pattern()) {\n    Klass* k = obj-\u003eklass();\n    markOop prototype_header = k-\u003eprototype_header();\n    if (!prototype_header-\u003ehas_bias_pattern()) {\n      // This object has a stale bias from before the bulk revocation\n      // for this data type occurred. It's pointless to update the\n      // heuristics at this point so simply update the header with a\n      // CAS. If we fail this race, the object's bias has been revoked\n      // by another thread so we simply return and let the caller deal\n      // with it.\n      markOop biased_value       = mark;\n      markOop res_mark = (markOop) Atomic::cmpxchg_ptr(prototype_header, obj-\u003emark_addr(), mark);\n      assert(!(*(obj-\u003emark_addr()))-\u003ehas_bias_pattern(), \"even if we raced, should still be revoked\");\n      return BIAS_REVOKED;\n    } else if (prototype_header-\u003ebias_epoch() != mark-\u003ebias_epoch()) {\n      // The epoch of this biasing has expired indicating that the\n      // object is effectively unbiased. Depending on whether we need\n      // to rebias or revoke the bias of this object we can do it\n      // efficiently enough with a CAS that we shouldn't update the\n      // heuristics. This is normally done in the assembly code but we\n      // can reach this point due to various points in the runtime\n      // needing to revoke biases.\n      if (attempt_rebias) {\n        assert(THREAD-\u003eis_Java_thread(), \"\");\n        markOop biased_value       = mark;\n        markOop rebiased_prototype = markOopDesc::encode((JavaThread*) THREAD, mark-\u003eage(), prototype_header-\u003ebias_epoch());\n        markOop res_mark = (markOop) Atomic::cmpxchg_ptr(rebiased_prototype, obj-\u003emark_addr(), mark);\n        if (res_mark == biased_value) {\n          return BIAS_REVOKED_AND_REBIASED;\n        }\n      } else {\n        markOop biased_value       = mark;\n        markOop unbiased_prototype = markOopDesc::prototype()-\u003eset_age(mark-\u003eage());\n        markOop res_mark = (markOop) Atomic::cmpxchg_ptr(unbiased_prototype, obj-\u003emark_addr(), mark);\n        if (res_mark == biased_value) {\n          return BIAS_REVOKED;\n        }\n      }\n    }\n  }\n\n  HeuristicsResult heuristics = update_heuristics(obj(), attempt_rebias);\n  if (heuristics == HR_NOT_BIASED) {\n    return NOT_BIASED;\n  } else if (heuristics == HR_SINGLE_REVOKE) {\n    Klass *k = obj-\u003eklass();\n    markOop prototype_header = k-\u003eprototype_header();\n    if (mark-\u003ebiased_locker() == THREAD \u0026\u0026\n        prototype_header-\u003ebias_epoch() == mark-\u003ebias_epoch()) {\n      // A thread is trying to revoke the bias of an object biased\n      // toward it, again likely due to an identity hash code\n      // computation. We can again avoid a safepoint in this case\n      // since we are only going to walk our own stack. There are no\n      // races with revocations occurring in other threads because we\n      // reach no safepoints in the revocation path.\n      // Also check the epoch because even if threads match, another thread\n      // can come in with a CAS to steal the bias of an object that has a\n      // stale epoch.\n      ResourceMark rm;\n      if (TraceBiasedLocking) {\n        tty-\u003eprint_cr(\"Revoking bias by walking my own stack:\");\n      }\n      EventBiasedLockSelfRevocation event;\n      BiasedLocking::Condition cond = revoke_bias(obj(), false, false, (JavaThread*) THREAD, NULL);\n      ((JavaThread*) THREAD)-\u003eset_cached_monitor_info(NULL);\n      assert(cond == BIAS_REVOKED, \"why not?\");\n      if (event.should_commit()) {\n        event.set_lockClass(k);\n        event.commit();\n      }\n      return cond;\n    } else {\n      EventBiasedLockRevocation event;\n      VM_RevokeBias revoke(\u0026obj, (JavaThread*) THREAD);\n      VMThread::execute(\u0026revoke);\n      if (event.should_commit() \u0026\u0026 (revoke.status_code() != NOT_BIASED)) {\n        event.set_lockClass(k);\n        // Subtract 1 to match the id of events committed inside the safepoint\n        event.set_safepointId(SafepointSynchronize::safepoint_counter() - 1);\n        event.set_previousOwner(revoke.biased_locker());\n        event.commit();\n      }\n      return revoke.status_code();\n    }\n  }\n\n  assert((heuristics == HR_BULK_REVOKE) ||\n         (heuristics == HR_BULK_REBIAS), \"?\");\n  EventBiasedLockClassRevocation event;\n  VM_BulkRevokeBias bulk_revoke(\u0026obj, (JavaThread*) THREAD,\n                                (heuristics == HR_BULK_REBIAS),\n                                attempt_rebias);\n  VMThread::execute(\u0026bulk_revoke);\n  if (event.should_commit()) {\n    event.set_revokedClass(obj-\u003eklass());\n    event.set_disableBiasing((heuristics != HR_BULK_REBIAS));\n    // Subtract 1 to match the id of events committed inside the safepoint\n    event.set_safepointId(SafepointSynchronize::safepoint_counter() - 1);\n    event.commit();\n  }\n  return bulk_revoke.status_code();\n}"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20210809231543-fyjttg1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210809231543-fyjttg1",
				"updated": "20210809231543"
			}
		},
		{
			"ID": "20210809231544-e80q9pl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210809231544-e80q9pl",
				"updated": "20210809231544"
			}
		},
		{
			"ID": "20210809231544-oqg4h6w",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210809231544-oqg4h6w",
				"updated": "20210809231544"
			}
		},
		{
			"ID": "20210809231544-hapsltd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210809231544-hapsltd",
				"updated": "20210809231544"
			}
		},
		{
			"ID": "20210807180004-o4jfmpb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210807180004-o4jfmpb",
				"updated": "20210807180004"
			}
		},
		{
			"ID": "20210807180004-jsshuyz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210807180004-jsshuyz",
				"updated": "20210807180004"
			}
		},
		{
			"ID": "20210808175726-h2jrfij",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210808175726-h2jrfij",
				"updated": "20210808175726"
			}
		},
		{
			"ID": "20210727003342-4qr3l6o",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210727003342-4qr3l6o",
				"updated": "20210727003342"
			}
		},
		{
			"ID": "20210707224540-62q78nj",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707224540-62q78nj",
				"updated": "20210714222438"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "轻量级锁 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-5rqxj4v",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-5rqxj4v",
				"updated": "20210707224540"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "轻量级锁的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "使用场景"
				},
				{
					"Type": "NodeText",
					"Data": "：如果一个对象虽然有多线程要加锁，但"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "加锁的时间是错开的（也就是没有竞争）"
				},
				{
					"Type": "NodeText",
					"Data": "，那么可以使用轻量级锁来优化。"
				}
			]
		},
		{
			"ID": "20210707224540-c486cza",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-c486cza",
				"updated": "20210707224540"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "轻量级锁对使用者是透明的，即语法仍然是 synchronized"
				}
			]
		},
		{
			"ID": "20210807175327-e6efqxp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210807175327-e6efqxp",
				"updated": "20210807175327"
			}
		},
		{
			"ID": "20210807175328-g5o5bvs",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210807175328-g5o5bvs",
				"updated": "20210807175328"
			}
		},
		{
			"ID": "20210807175328-hjkyvdz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210807175328-hjkyvdz",
				"updated": "20210807175328"
			}
		},
		{
			"ID": "20210707224540-w9p8v9k",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-w9p8v9k",
				"updated": "20210707224540"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "假设有两个方法同步块，利用同一个对象加锁"
				}
			]
		},
		{
			"ID": "20210707224540-0cd52sx",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20210707224540-0cd52sx",
				"updated": "20210707224540"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "static final Object obj = new Object();\npublic static void method1() {\n    synchronized( obj ) {\n        // 同步块 A\n        method2();\n    }\n}\npublic static void method2() {\n    synchronized( obj ) {\n        // 同步块 B\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20210707224540-ofjciux",
			"Type": "NodeIFrame",
			"Data": "\u003ciframe id=\"embed_dom\" name=\"embed_dom\" frameborder=\"0\" style=\"display: block; width: 920px; height: 1716px;\" src=\"https://www.processon.com/embed/602e5a0ef346fb64f569accc\" data-src=\"https://www.processon.com/embed/602e5a0ef346fb64f569accc\"\u003e\u003c/iframe\u003e",
			"Properties": {
				"id": "20210707224540-ofjciux",
				"updated": "20210707224540"
			}
		},
		{
			"ID": "20210807175540-xnshxnd",
			"Type": "NodeBlockQueryEmbed",
			"Properties": {
				"id": "20210807175540-xnshxnd",
				"updated": "20210807175540"
			},
			"Children": [
				{
					"Type": "NodeOpenBrace"
				},
				{
					"Type": "NodeOpenBrace"
				},
				{
					"Type": "NodeBlockQueryEmbedScript",
					"Data": "select * from blocks where id='20210803233851-xvsn1zw'"
				},
				{
					"Type": "NodeCloseBrace"
				},
				{
					"Type": "NodeCloseBrace"
				}
			]
		},
		{
			"ID": "20210807175535-ovvgr4z",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210807175535-ovvgr4z",
				"updated": "20210807175535"
			}
		},
		{
			"ID": "20210807175535-9tackgd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210807175535-9tackgd",
				"updated": "20210807175535"
			}
		},
		{
			"ID": "20210707224540-d5g77s9",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707224540-d5g77s9",
				"updated": "20210714222442"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "锁膨胀 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-q5qlook",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-q5qlook",
				"updated": "20210707224540"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果在尝试加轻量级锁的过程中，CAS 操作无法成功，这时一种情况就是有其它线程为此对象加上了轻量级锁（有竞争），这时需要进行锁膨胀，将轻量级锁变为重量级锁（让解锁操作接下来的解锁操作进入到重量级锁的解锁）。"
				}
			]
		},
		{
			"ID": "20210707224540-hpgbjw0",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20210707224540-hpgbjw0",
				"updated": "20210707224540"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public class Test {\n    static Object obj = new Object();\n    public static void method1() {\n        synchronized( obj ) {\n            // 同步块\n        }\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20210707224540-v5tp4r1",
			"Type": "NodeIFrame",
			"Data": "\u003ciframe id=\"embed_dom\" name=\"embed_dom\" frameborder=\"0\" style=\"display: block; width: 788px; height: 734px;\" src=\"https://www.processon.com/embed/602e8eaa07912934224d5784\" data-src=\"https://www.processon.com/embed/602e8eaa07912934224d5784\"\u003e\u003c/iframe\u003e",
			"Properties": {
				"id": "20210707224540-v5tp4r1",
				"updated": "20210707224540"
			}
		},
		{
			"ID": "20210729232941-xl8trw9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210729232941-xl8trw9",
				"updated": "20210729232941"
			}
		},
		{
			"ID": "20210727005829-0wr38ek",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210727005829-0wr38ek",
				"updated": "20210727005829"
			}
		},
		{
			"ID": "20210729232828-3nrfbk1",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210729232828-3nrfbk1",
				"updated": "20210729232828"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "自适应自旋锁（优化重量级锁） 🔥"
				}
			]
		},
		{
			"ID": "20210707224540-u933zlh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-u933zlh",
				"updated": "20210727003846"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "竞争重量级锁"
				},
				{
					"Type": "NodeText",
					"Data": "的时候，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "线程挂起、恢复"
				},
				{
					"Type": "NodeText",
					"Data": "需要转入"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "内核态"
				},
				{
					"Type": "NodeText",
					"Data": "进行，消耗大"
				}
			]
		},
		{
			"ID": "20210727003919-sg7yt3z",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210727003919-sg7yt3z",
				"updated": "20210727004441"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "又因为"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "时间片小"
				},
				{
					"Type": "NodeText",
					"Data": "，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "共享数据锁定时间很短"
				},
				{
					"Type": "NodeText",
					"Data": "，这段时间"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "挂起、恢复线程不值得"
				},
				{
					"Type": "NodeText",
					"Data": "，在"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "多处理器"
				},
				{
					"Type": "NodeText",
					"Data": "下，可以让请求锁的线程"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "不释放处理器资源"
				},
				{
					"Type": "NodeText",
					"Data": "，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "继续等一会"
				},
				{
					"Type": "NodeText",
					"Data": "（让线程执行一个忙循环，即自旋），这时要是持有锁的线程释放了锁，那请求锁的线程将获得锁，还可以避免阻塞，避免上下文切换"
				}
			]
		},
		{
			"ID": "20210727003634-l6sh6wm",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20210727003634-l6sh6wm",
				"updated": "20210727003639"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20210727003635-90rea5x",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20210727003635-90rea5x",
						"updated": "20210727003635"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "线程切换"
						}
					]
				},
				{
					"ID": "20210727003639-5g7aic3",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20210727003639-5g7aic3",
						"updated": "20210727003639"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "线程的阻塞唤醒需要从用户态切换到内核态，然后内核态切换 tcb，切到另一个线程的内核态，再从内核态进入用户态，这是一个重量级的操作"
						}
					]
				}
			]
		},
		{
			"ID": "20210727004614-mvccfv0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210727004614-mvccfv0",
				"updated": "20210727004617"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意："
				}
			]
		},
		{
			"ID": "20210727004514-a5j3cb0",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20210727004514-a5j3cb0",
				"updated": "20210727004643"
			},
			"Children": [
				{
					"ID": "20210727004639-7lugu4b",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20210727004639-7lugu4b"
					},
					"Children": [
						{
							"ID": "20210727004639-h9zw60s",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210727004639-h9zw60s",
								"updated": "20210727004743"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "自旋会占用 CPU 时间"
								},
								{
									"Type": "NodeText",
									"Data": "，单核 CPU 自旋就是浪费，"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "多核 CPU 自旋且时间短才能发挥优势"
								},
								{
									"Type": "NodeText",
									"Data": "，否则浪费性能"
								}
							]
						}
					]
				},
				{
					"ID": "20210727004619-2veeksw",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20210727004619-2veeksw"
					},
					"Children": [
						{
							"ID": "20210727004619-0jiuy6v",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210727004619-0jiuy6v",
								"updated": "20210727004650"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "Java6"
								},
								{
									"Type": "NodeText",
									"Data": " 及其之后都是"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "默认开启"
								},
								{
									"Type": "NodeText",
									"Data": "，也可以通过"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "-XX:+UseSpinning"
								},
								{
									"Type": "NodeText",
									"Data": "开启"
								}
							]
						}
					]
				},
				{
					"ID": "20210727004814-cebvphu",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20210727004814-cebvphu"
					},
					"Children": [
						{
							"ID": "20210727004814-paa90mj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210727004814-paa90mj",
								"updated": "20210727004919"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "自旋次数"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "默认10次"
								},
								{
									"Type": "NodeText",
									"Data": "，可以通过"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "-XX:PreBlockSpin"
								},
								{
									"Type": "NodeText",
									"Data": "修改"
								}
							]
						}
					]
				},
				{
					"ID": "20210727004641-d6lgb8q",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20210727004641-d6lgb8q",
						"updated": "20210727005219"
					},
					"Children": [
						{
							"ID": "20210727004641-h0jagi5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210727004641-h0jagi5",
								"updated": "20210727005050"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Java6 之后自旋锁是"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "自适应"
								},
								{
									"Type": "NodeText",
									"Data": "的，即"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "自旋次数时间不再固定"
								},
								{
									"Type": "NodeText",
									"Data": "，由前一次在同一个锁上的自旋时间及锁的拥有者的状态来决定的。"
								}
							]
						},
						{
							"ID": "20210727005135-rdavd0s",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210727005135-rdavd0s",
								"updated": "20210727005219"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "比如对象刚刚的一次自旋操作成功过，那么认为这次自旋成功的可能性会高，就多自旋几次；反之，就少自旋甚至不自旋。JVM将变得越来越聪明。"
								}
							]
						}
					]
				},
				{
					"ID": "20210727004643-9gmx6cq",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20210727004643-9gmx6cq",
						"updated": "20210727004643"
					},
					"Children": [
						{
							"ID": "20210727004643-8zbhiex",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210727004643-8zbhiex",
								"updated": "20210727004643"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Java 7 之后不能控制是否开启自旋功能"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-ktbqumt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-ktbqumt",
				"updated": "20210707224540"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "自旋重试成功的情况："
				}
			]
		},
		{
			"ID": "20210707224540-bimkane",
			"Type": "NodeTable",
			"TableAligns": [
				0,
				0,
				0
			],
			"Properties": {
				"id": "20210707224540-bimkane",
				"updated": "20210707224540"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Data": "thead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Data": "tr",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "线程 1（core1 上）"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "对象 Mark"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "线程 2（core2 上）"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "-"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "10（重量锁）"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "-"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "访问同步块，获取 monitor"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "10（重量锁）重量锁指针"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "-"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "成功（加锁）"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "10（重量锁）重量锁指针"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "-"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "执行同步块"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "10（重量锁）重量锁指针"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "-"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "执行同步块"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "10（重量锁）重量锁指针"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "访问同步块，获取 monitor"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "执行同步块"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "10（重量锁）重量锁指针"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "自旋重试"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "执行完毕"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "10（重量锁）重量锁指针"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "自旋重试"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "成功（解锁）"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "01（无锁）"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "自旋重试"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "-"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "10（重量锁）重量锁指针"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "成功（加锁）"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "-"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "10（重量锁）重量锁指针"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "执行同步块"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "-"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "..."
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "..."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707224540-umvtcv5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-umvtcv5",
				"updated": "20210707224540"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "自旋重试失败的情况："
				}
			]
		},
		{
			"ID": "20210707224540-69njzjl",
			"Type": "NodeTable",
			"TableAligns": [
				0,
				0,
				0
			],
			"Properties": {
				"id": "20210707224540-69njzjl",
				"updated": "20210707224540"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Data": "thead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Data": "tr",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "线程 1（core1 上）"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "对象 Mark"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "线程 2（core2 上）"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "-"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "10（重量锁）"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "-"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "访问同步块，获取 monitor"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "10（重量锁）重量锁指针"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "-"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "成功（加锁）"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "10（重量锁）重量锁指针"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "-"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "执行同步块"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "10（重量锁）重量锁指针"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "-"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "执行同步块"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "10（重量锁）重量锁指针"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "访问同步块，获取 monitor"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "执行同步块"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "10（重量锁）重量锁指针"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "自旋重试"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "执行同步块"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "10（重量锁）重量锁指针"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "自旋重试"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "执行同步块"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "10（重量锁）重量锁指针"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "自旋重试"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "执行同步块"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "10（重量锁）重量锁指针"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "阻塞"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "-"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "..."
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "..."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210727003342-jz0tgcg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210727003342-jz0tgcg",
				"updated": "20210727003342"
			}
		},
		{
			"ID": "20210707224540-z6ajt00",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-z6ajt00",
				"updated": "20210707224540"
			}
		},
		{
			"ID": "20210707224540-2hfr67f",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707224540-2hfr67f",
				"updated": "20210727224104"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "锁消除 🔥—由于锁对象无法逃逸"
				}
			]
		},
		{
			"ID": "20210727224017-d1pssf5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210727224017-d1pssf5",
				"updated": "20210727224721"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "JIT 编译器"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "编译时"
				},
				{
					"Type": "NodeText",
					"Data": "，通过"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "逃逸分析"
				},
				{
					"Type": "NodeText",
					"Data": "技术分析"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "锁对象只被一个线程使用，没有竞争"
				},
				{
					"Type": "NodeText",
					"Data": "，则编译时不加monitorenter、monitorexit指令，即消除了这个锁！"
				}
			]
		},
		{
			"ID": "20210707224540-2nkrivr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-2nkrivr",
				"updated": "20210707224540"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "benchmarks 项目见前面章节"
				}
			]
		},
		{
			"ID": "20210707224540-75anb5z",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20210707224540-75anb5z",
				"updated": "20210707224540"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@Fork(1)\n@BenchmarkMode(Mode.AverageTime)\n@Warmup(iterations=3)\n@Measurement(iterations=5)\n@OutputTimeUnit(TimeUnit.NANOSECONDS)\npublic class MyBenchmark {\n    static int x = 0;\n    @Benchmark\n    public void a() throws Exception {\n        x++;\n    }\n\n    // JIT（即时编译器）对Java字节码进行进一步优化\n    // 发现锁对象就是局部变量，不会逃离作用范围，所以去掉该锁！这里面的x变量也是局部变量，不会共享，所以去掉该锁！\n    @Benchmark\n    public void b() throws Exception {\n        Object o = new Object();\n        synchronized (o) {\n            x++;\n        }\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20210707224540-1c2n3cb",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20210707224540-1c2n3cb",
				"updated": "20210707224540"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "java -jar benchmarks.jar\n\nBenchmark Mode Samples Score Score error Units\nc.i.MyBenchmark.a avgt 5 1.542 0.056 ns/op\nc.i.MyBenchmark.b avgt 5 1.518 0.091 ns/op\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20210707224540-gde0v2h",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-gde0v2h",
				"updated": "20210707224540"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "禁用锁消除优化"
				}
			]
		},
		{
			"ID": "20210707224540-o091pxs",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20210707224540-o091pxs",
				"updated": "20210707224540"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "java -XX:-EliminateLocks -jar benchmarks.jar\nBenchmark Mode Samples Score Score error Units\nc.i.MyBenchmark.a avgt 5 1.507 0.108 ns/op\nc.i.MyBenchmark.b avgt 5 16.976 1.572 ns/op\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20210727003253-x2pj2ik",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210727003253-x2pj2ik",
				"updated": "20210727224648"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "还有个不恰当（锁消除是 Java 6开始）的例子，如 Java5 及之前的 String 拼接，编译时会转为 StringBuffer 进行，Java5 之后转为 StringBuilder。StringBuffer 的 append 是一个同步方法。但是由于绝大部分字符串拼接都是局部变量，所以会进行锁消除"
				}
			]
		},
		{
			"ID": "20210727003253-i2e0fdu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210727003253-i2e0fdu",
				"updated": "20210727003253"
			}
		},
		{
			"ID": "20210707224540-85yns3y",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707224540-85yns3y",
				"updated": "20210727005711"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "锁粗化 🔥—由于多次锁重入"
				}
			]
		},
		{
			"ID": "20210727233825-p4uxf71",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210727233825-p4uxf71",
				"updated": "20210727234322"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "JIT编译器"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "编译时"
				},
				{
					"Type": "NodeText",
					"Data": "发现代码中有"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "对相同对象进行多次加锁的代码"
				},
				{
					"Type": "NodeText",
					"Data": "，导致线程多次重入，编译器会自动将这些"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "代码合并"
				},
				{
					"Type": "NodeText",
					"Data": "，即粗化锁。不同于之前讲的细分锁的粒度"
				}
			]
		},
		{
			"ID": "20210727233805-r1mx9qb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210727233805-r1mx9qb",
				"updated": "20210727233805"
			}
		},
		{
			"ID": "20210707224540-28tib13",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707224540-28tib13",
				"updated": "20210727005627"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "对相同对象多次加锁，导致线程发生多次重入"
				},
				{
					"Type": "NodeText",
					"Data": "，可以使用锁粗化（"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "扩大同步快的作用域"
				},
				{
					"Type": "NodeText",
					"Data": "）方式来优化，这不同于之前讲的细分锁的粒度。"
				}
			]
		},
		{
			"ID": "20210729232933-2ma5h4j",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210729232933-2ma5h4j",
				"updated": "20210729232933"
			}
		}
	]
}