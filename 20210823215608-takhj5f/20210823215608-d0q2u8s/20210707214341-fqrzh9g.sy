{
	"ID": "20210707214341-fqrzh9g",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20210707214341-fqrzh9g",
		"title": "101.语法-Syntax",
		"type": "doc"
	},
	"Children": [
		{
			"ID": "20210707214341-rm2xlxx",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707214341-rm2xlxx"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "introduce"
				}
			]
		},
		{
			"ID": "20210707214341-iva9yyu",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707214341-iva9yyu"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "Java 简介"
				}
			]
		},
		{
			"ID": "20210707214341-dvweugx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-dvweugx"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Java 最早是由 SUN 公司（已被 Oracle 收购）的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://en.wikipedia.org/wiki/James_Gosling",
					"TextMarkTextContent": "詹姆斯·高斯林"
				},
				{
					"Type": "NodeText",
					"Data": "（高司令，人称 Java 之父）在上个世纪 90 年代初开发的一种编程语言，最初被命名为 Oak，目标是针对小型家电设备的嵌入式应用，结果市场没啥反响。谁料到互联网的崛起，让 Oak 重新焕发了生机，于是 SUN 公司改造了 Oak，在 1995 年以 Java 的名称正式发布，原因是 Oak 已经被人注册了，因此 SUN 注册了 Java 这个商标。随着互联网的高速发展，Java 逐渐成为最重要的网络编程语言。"
				}
			]
		},
		{
			"ID": "20210707214341-s8j2nwm",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707214341-s8j2nwm"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "编译型语言和解释型语言"
				}
			]
		},
		{
			"ID": "20210707214341-ksz5v9o",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-ksz5v9o"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Java"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "介于编译型语言和解释型语言之间"
				},
				{
					"Type": "NodeText",
					"Data": "。编译型语言如 C、C++，代码是直接编译成机器码执行，但是不同的平台（x86、ARM 等）CPU 的指令集不同，因此，需要编译出每一种平台的对应机器码。解释型语言如 Python、Ruby 没有这个问题，可以由解释器直接加载源码然后运行，代价是运行效率太低。而"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "Java 是将代码编译成一种“字节码”"
				},
				{
					"Type": "NodeText",
					"Data": "，它类似于抽象的 CPU 指令，然后，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "针对不同平台编写虚拟机，不同平台的虚拟机负责加载字节码并执行，这样就实现了“一次编写，到处运行”的效果"
				},
				{
					"Type": "NodeText",
					"Data": "。当然，这是针对 Java 开发者而言。"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "对于虚拟机，需要为每个平台分别开发"
				},
				{
					"Type": "NodeText",
					"Data": "。为了保证不同平台、不同公司开发的虚拟机都能正确执行 Java 字节码，SUN 公司制定了一系列的 Java 虚拟机规范。从实践的角度看，JVM 的兼容性做得非常好，低版本的 Java 字节码完全可以正常运行在高版本的 JVM 上。"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "JVM"
				},
				{
					"Type": "NodeText",
					"Data": "(Java Virtual Machine) 是一个虚拟的计算机，具有指令集并使用不同的存储区域。负责执行指令，管理数据、内存、寄存器。"
				}
			]
		},
		{
			"ID": "20210707214341-hrusfr2",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707214341-hrusfr2"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "JRE 和 JDK"
				}
			]
		},
		{
			"ID": "20210707214341-mw2yatt",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707214341-mw2yatt"
			},
			"Children": [
				{
					"ID": "20210707214341-l58tqqh",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-l58tqqh"
					},
					"Children": [
						{
							"ID": "20210707214341-p8oh4bo",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-p8oh4bo"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "JRE(Java Runtime Environment)：是 Java 程序的运行时环境，包含 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "JVM"
								},
								{
									"Type": "NodeText",
									"Data": " 和"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "运行时所需要的核心类库"
								},
								{
									"Type": "NodeText",
									"Data": " 。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-tawcctk",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-tawcctk"
					},
					"Children": [
						{
							"ID": "20210707214341-dpwebta",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-dpwebta"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "JDK(Java Development Kit)：是 Java 程序开发工具包，包含 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "JRE"
								},
								{
									"Type": "NodeText",
									"Data": " 和"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "开发人员使用的工具"
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						},
						{
							"ID": "20210707214341-m2z90o9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-m2z90o9"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "二者关系如下："
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-fdbvnx1",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "YXNjaWk=",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707214341-fdbvnx1"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YXNjaWk="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": " ┌─    ┌──────────────────────────────────┐\n  │     │     Compiler, debugger, etc.     │\n  │     └──────────────────────────────────┘\n JDK ┌─ ┌──────────────────────────────────┐\n  │  │  │                                  │\n  │ JRE │      JVM + Runtime Library       │\n  │  │  │                                  │\n  └─ └─ └──────────────────────────────────┘\n        ┌───────┐┌───────┐┌───────┐┌───────┐\n        │Windows││ Linux ││ macOS ││others │\n        └───────┘└───────┘└───────┘└───────┘\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707214341-73fgdu4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-73fgdu4"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "安装 JDK 及环境变量配置，也可以使用 SDKMAN 直接安装"
				}
			]
		},
		{
			"ID": "20210707214341-2bwgha8",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707214341-2bwgha8"
			},
			"Children": [
				{
					"ID": "20210707214341-x4b0o3z",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-x4b0o3z"
					},
					"Children": [
						{
							"ID": "20210707214341-1d6dh5k",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-1d6dh5k"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "JAVA_HOME"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-ynidyf8",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-ynidyf8"
					},
					"Children": [
						{
							"ID": "20210707214341-6l9tdu0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-6l9tdu0"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Path"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-z1ze6q7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-z1ze6q7"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "JAVA_HOME"
				},
				{
					"Type": "NodeText",
					"Data": "的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "bin"
				},
				{
					"Type": "NodeText",
					"Data": "目录下找到很多可执行文件"
				}
			]
		},
		{
			"ID": "20210707214341-qh6zbqu",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707214341-qh6zbqu"
			},
			"Children": [
				{
					"ID": "20210707214341-6vemj7i",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-6vemj7i"
					},
					"Children": [
						{
							"ID": "20210707214341-0cbs69k",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-0cbs69k"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "javac：这是 Java 的"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "编译"
								},
								{
									"Type": "NodeText",
									"Data": "器，它用于把 Java 源码文件（以"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": ".java"
								},
								{
									"Type": "NodeText",
									"Data": "后缀结尾）编译为 Java 字节码文件（以"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": ".class"
								},
								{
									"Type": "NodeText",
									"Data": "后缀结尾）。如"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "javac Test.java"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-2ird99d",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-2ird99d"
					},
					"Children": [
						{
							"ID": "20210707214341-si6ghx3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-si6ghx3"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "java：这个可执行程序其实就是 JVM，"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "运行"
								},
								{
									"Type": "NodeText",
									"Data": "Java 程序，就是启动 JVM，然后让 JVM 执行指定的编译后的代码。如``javac Test`。"
								}
							]
						},
						{
							"ID": "20210707214341-ofvl5cj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-ofvl5cj"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": ":::tip"
								}
							]
						},
						{
							"ID": "20210707214341-q3fh05p",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-q3fh05p"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在 Java 11 中可以通过"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "java Test.java"
								},
								{
									"Type": "NodeText",
									"Data": "直接一个单文件源码！但是不能依赖其他库，所以基本没啥用！"
								}
							]
						},
						{
							"ID": "20210707214341-bqgm9v5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-bqgm9v5"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": ":::"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-fafmkjj",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-fafmkjj"
					},
					"Children": [
						{
							"ID": "20210707214341-z2m5my3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-z2m5my3"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "jar：用于把一组"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": ".class"
								},
								{
									"Type": "NodeText",
									"Data": "文件打包成一个"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": ".jar"
								},
								{
									"Type": "NodeText",
									"Data": "文件，便于发布；"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-plxxbad",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-plxxbad"
					},
					"Children": [
						{
							"ID": "20210707214341-s8gp8b1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-s8gp8b1"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "javadoc：用于从 Java 源码中自动提取注释并生成文档；"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-evnczq5",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-evnczq5"
					},
					"Children": [
						{
							"ID": "20210707214341-xdz1zds",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-xdz1zds"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "jdb：Java 调试器，用于开发阶段的运行调试。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-5fdu398",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707214341-5fdu398"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "JSR、JCP"
				}
			]
		},
		{
			"ID": "20210707214341-4bexdm4",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707214341-4bexdm4"
			},
			"Children": [
				{
					"ID": "20210707214341-hi1itvf",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-hi1itvf"
					},
					"Children": [
						{
							"ID": "20210707214341-s80wfit",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-s80wfit"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "JSR 规范：Java Specification Request"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-fzrouq8",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-fzrouq8"
					},
					"Children": [
						{
							"ID": "20210707214341-900y925",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-900y925"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "JCP 组织：Java Community Process"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-4tgkkb6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-4tgkkb6"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "为了保证 Java 语言的规范性，SUN 公司搞了一个 JSR 规范，凡是想给 Java 平台加一个功能，比如说访问数据库的功能，大家要先创建一个 JSR 规范，定义好接口，这样，各个数据库厂商都按照规范写出 Java 驱动程序，开发者就不用担心自己写的数据库代码在 MySQL 上能跑，却不能跑在 PostgreSQL 上。"
				}
			]
		},
		{
			"ID": "20210707214341-izl2eg4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-izl2eg4"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "所以 JSR 是一系列的规范，从 JVM 的内存模型到 Web 程序接口，全部都标准化了。而负责审核 JSR 的组织就是 JCP。"
				}
			]
		},
		{
			"ID": "20210707214341-3xki1fy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-3xki1fy"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一个 JSR 规范发布时，为了让大家有个参考，还要同时发布一个“参考实现”，以及一个“兼容性测试套件”："
				}
			]
		},
		{
			"ID": "20210707214341-vvfxh4u",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707214341-vvfxh4u"
			},
			"Children": [
				{
					"ID": "20210707214341-4juemkk",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-4juemkk"
					},
					"Children": [
						{
							"ID": "20210707214341-7k7t4ja",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-7k7t4ja"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "RI：Reference Implementation"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-6od5zgz",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-6od5zgz"
					},
					"Children": [
						{
							"ID": "20210707214341-pqmkxvi",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-pqmkxvi"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "TCK：Technology Compatibility Kit"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-od0fxdz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-od0fxdz"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "比如有人提议要搞一个基于 Java 开发的消息服务器，这个提议很好啊，但是光有提议还不行，得贴出真正能跑的代码，这就是 RI。如果有其他人也想开发这样一个消息服务器，如何保证这些消息服务器对开发者来说接口、功能都是相同的？所以还得提供 TCK。"
				}
			]
		},
		{
			"ID": "20210707214341-rrhmkg3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-rrhmkg3"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "通常来说，RI 只是一个“能跑”的正确的代码，它不追求速度，所以，如果真正要选择一个 Java 的消息服务器，一般是没人用 RI 的，大家都会选择一个有竞争力的商用或开源产品。"
				}
			]
		},
		{
			"ID": "20210707214341-5xe58ij",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-5xe58ij"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "参考："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://jcp.org/en/jsr/detail?id=914",
					"TextMarkTextContent": "Java 消息服务 JMS 的 JSR"
				}
			]
		},
		{
			"ID": "20210707214341-z1d7jzt",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707214341-z1d7jzt"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "keyword \u0026 reserved word"
				}
			]
		},
		{
			"ID": "20210707214341-5ola9bj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-5ola9bj"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "被 Java 语言赋予了特殊含义，用做专门用途的字符串(单词)，关键字中"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "所有字母都为小写（main 不是）"
				},
				{
					"Type": "NodeText",
					"Data": "，详细可"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/_keywords.html",
					"TextMarkTextContent": "查看官网文档"
				}
			]
		},
		{
			"ID": "20210707214341-obxg9m0",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707214341-obxg9m0"
			},
			"Children": [
				{
					"ID": "20210707214341-lbmb6c0",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-lbmb6c0"
					},
					"Children": [
						{
							"ID": "20210707214341-cwv581f",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-cwv581f"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "用于定义数据类型的关键字"
								}
							]
						},
						{
							"ID": "20210707214341-2zw4zt9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-2zw4zt9"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "class、interface、enum、byte、short、int、long、float、double、char、boolean、void"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-ywgxdt8",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-ywgxdt8"
					},
					"Children": [
						{
							"ID": "20210707214341-jowye2m",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-jowye2m"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "用于定义流程控制的关键字"
								}
							]
						},
						{
							"ID": "20210707214341-6spg6iy",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-6spg6iy"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "if、else、switch、case、default、while、do、for、break、continue、return"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-9lv2uh0",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-9lv2uh0"
					},
					"Children": [
						{
							"ID": "20210707214341-48q6q1f",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-48q6q1f"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "用于定义访问权限修饰符的关键字"
								}
							]
						},
						{
							"ID": "20210707214341-xsm4qsj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-xsm4qsj"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "private、protected、public"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-rfakim3",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-rfakim3"
					},
					"Children": [
						{
							"ID": "20210707214341-7kabu07",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-7kabu07"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "用于定义类、函数、变量修饰符的关键字"
								}
							]
						},
						{
							"ID": "20210707214341-ybgmbcp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-ybgmbcp"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "abstract、final、static、synchronized"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-rj9rful",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-rj9rful"
					},
					"Children": [
						{
							"ID": "20210707214341-uwnu3tf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-uwnu3tf"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "用于定义类与类之间关系的关键字"
								}
							]
						},
						{
							"ID": "20210707214341-izls71u",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-izls71u"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "extends、implements"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-wusvyn8",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-wusvyn8"
					},
					"Children": [
						{
							"ID": "20210707214341-onij8p2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-onij8p2"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "用于定义建立实例及引用实例，判断实例的关键字"
								}
							]
						},
						{
							"ID": "20210707214341-fz9sv7b",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-fz9sv7b"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "new、this、super、instanceof"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-rx6ez0f",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-rx6ez0f"
					},
					"Children": [
						{
							"ID": "20210707214341-7xav5ym",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-7xav5ym"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "用于异常处理的关键字"
								}
							]
						},
						{
							"ID": "20210707214341-95fk6k6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-95fk6k6"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "try、catch、finally、throw、throws"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-ae87sos",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-ae87sos"
					},
					"Children": [
						{
							"ID": "20210707214341-p9zdr87",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-p9zdr87"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "用于包的关键字"
								}
							]
						},
						{
							"ID": "20210707214341-ajscmf5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-ajscmf5"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "package、import"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-tn7oqvu",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-tn7oqvu"
					},
					"Children": [
						{
							"ID": "20210707214341-u9kgdac",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-u9kgdac"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "其他修饰符关键字"
								}
							]
						},
						{
							"ID": "20210707214341-cg5tnht",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-cg5tnht"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "native、strictfp、transient、volatile、assert"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-h551j7g",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-h551j7g"
					},
					"Children": [
						{
							"ID": "20210707214341-nw2foff",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-nw2foff"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "（不是关键字，但也当关键字来用）用于定义数据类型值的字面值"
								}
							]
						},
						{
							"ID": "20210707214341-0gsdxuk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-0gsdxuk"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "true、false、null"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-vttrf7q",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-vttrf7q"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Java 保留字：现有 Java 版本尚未使用，但以后版本可能会作为关键字使用。goto 、const"
				}
			]
		},
		{
			"ID": "20210707214341-6kn8sw2",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707214341-6kn8sw2"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "Identifier"
				}
			]
		},
		{
			"ID": "20210707214341-hpj9zyu",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707214341-hpj9zyu"
			},
			"Children": [
				{
					"ID": "20210707214341-em5ikxw",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-em5ikxw"
					},
					"Children": [
						{
							"ID": "20210707214341-w2tkop3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-w2tkop3"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Java 对各种"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "变量、方法和类等要素命名时使用的字符序列称为标识符"
								},
								{
									"Type": "NodeText",
									"Data": "。凡是自己可以起名字的地方都叫标识符，比如类的名字、方法的名字和变量的名字等"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-qnmspf6",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-qnmspf6"
					},
					"Children": [
						{
							"ID": "20210707214341-752qphh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-752qphh"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "命名规则"
								},
								{
									"Type": "NodeText",
									"Data": "： 硬性要求"
								}
							]
						},
						{
							"ID": "20210707214341-v8dgufy",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707214341-v8dgufy"
							},
							"Children": [
								{
									"ID": "20210707214341-ux7o4we",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214341-ux7o4we"
									},
									"Children": [
										{
											"ID": "20210707214341-3dudyhj",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-3dudyhj"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "标识符可以包含 英文字母 26 个(区分大小写) 、 0-9 、 $"
												},
												{
													"Type": "NodeText",
													"Data": "（美元符号） 和 _"
												},
												{
													"Type": "NodeText",
													"Data": "（下划线）"
												}
											]
										}
									]
								},
								{
									"ID": "20210707214341-yv5d4jk",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214341-yv5d4jk"
									},
									"Children": [
										{
											"ID": "20210707214341-7xk2ly8",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-7xk2ly8"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "标识符不能以数字开头"
												}
											]
										}
									]
								},
								{
									"ID": "20210707214341-1k76g11",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214341-1k76g11"
									},
									"Children": [
										{
											"ID": "20210707214341-gh3m1tt",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-gh3m1tt"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "标识符不能是关键字或保留字，但能包含"
												}
											]
										}
									]
								},
								{
									"ID": "20210707214341-ahexgqx",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214341-ahexgqx"
									},
									"Children": [
										{
											"ID": "20210707214341-xrqhbw4",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-xrqhbw4"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "标识符不能包含空格"
												}
											]
										}
									]
								},
								{
									"ID": "20210707214341-9vhfvt7",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214341-9vhfvt7"
									},
									"Children": [
										{
											"ID": "20210707214341-i6hxdi4",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-i6hxdi4"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "标识符严格区分大小写"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-uoicy1d",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-uoicy1d"
					},
					"Children": [
						{
							"ID": "20210707214341-ub4ashu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-ub4ashu"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "命名规范"
								},
								{
									"Type": "NodeText",
									"Data": "： 软性建议"
								}
							]
						},
						{
							"ID": "20210707214341-lnfa1e3",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707214341-lnfa1e3"
							},
							"Children": [
								{
									"ID": "20210707214341-axv4oym",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214341-axv4oym"
									},
									"Children": [
										{
											"ID": "20210707214341-w4rn7cv",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-w4rn7cv"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "包名：多单词组成时所有字母都小写"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "xxxyyyzzz"
												}
											]
										}
									]
								},
								{
									"ID": "20210707214341-vbpi38c",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214341-vbpi38c"
									},
									"Children": [
										{
											"ID": "20210707214341-dn3rggv",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-dn3rggv"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "类名、接口名：所有单词的首字母大写（大驼峰式），不推荐包含"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "_"
												}
											]
										}
									]
								},
								{
									"ID": "20210707214341-yyl1es4",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214341-yyl1es4"
									},
									"Children": [
										{
											"ID": "20210707214341-adbfxgf",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-adbfxgf"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "方法名、变量名： 首字母小写，后面每个单词首字母大写（小驼峰式）。"
												}
											]
										}
									]
								},
								{
									"ID": "20210707214341-nwqgs9v",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214341-nwqgs9v"
									},
									"Children": [
										{
											"ID": "20210707214341-grs4y5a",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-grs4y5a"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "常量名：所有字母都大写。多单词时每个单词用下划线连接"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "XXX_YYY_ZZZ"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-3usqgt5",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707214341-3usqgt5"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "constant"
				}
			]
		},
		{
			"ID": "20210707214341-s5ti4qc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-s5ti4qc"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "定义变量的时候，如果加上"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "final"
				},
				{
					"Type": "NodeText",
					"Data": "修饰符，这个变量就变成了常量。常量在定义时进行初始化后就不可再次赋值，再次赋值会导致编译错误。常量的作用是用有意义的变量名来"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "避免魔术数字"
				},
				{
					"Type": "NodeText",
					"Data": "（Magic number），例如，不要在代码中到处写"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "3.14"
				},
				{
					"Type": "NodeText",
					"Data": "，而是定义一个常量。如果将来需要提高计算精度，我们只需要在常量的定义处修改，例如，改成"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "3.1416"
				},
				{
					"Type": "NodeText",
					"Data": "，而不必在所有地方替换"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "3.14"
				},
				{
					"Type": "NodeText",
					"Data": "。根据习惯，常量名通常全部大写。"
				}
			]
		},
		{
			"ID": "20210707214341-n8v4lsh",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707214341-n8v4lsh"
			},
			"Children": [
				{
					"ID": "20210707214341-smx3env",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-smx3env"
					},
					"Children": [
						{
							"ID": "20210707214341-9w1t1nu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-9w1t1nu"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "整数"
								},
								{
									"Type": "NodeText",
									"Data": "常量、"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "浮点数"
								},
								{
									"Type": "NodeText",
									"Data": "常量、"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "字符"
								},
								{
									"Type": "NodeText",
									"Data": "常量、"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "字符串"
								},
								{
									"Type": "NodeText",
									"Data": "常量、"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "布尔"
								},
								{
									"Type": "NodeText",
									"Data": "常量、"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "空"
								},
								{
									"Type": "NodeText",
									"Data": "常量"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-q5t9vmo",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707214341-q5t9vmo"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "variable"
				}
			]
		},
		{
			"ID": "20210707214341-qfvbjd5",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707214341-qfvbjd5"
			},
			"Children": [
				{
					"ID": "20210707214341-a1komly",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-a1komly"
					},
					"Children": [
						{
							"ID": "20210707214341-qg8fzoq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-qg8fzoq"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "变量是"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "内存中的一个存储区域"
								},
								{
									"Type": "NodeText",
									"Data": "，该区域的数据可以在同一类型范围内不断变化，变量是程序中最基本的存储单元。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-1pow1ye",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-1pow1ye"
					},
					"Children": [
						{
							"ID": "20210707214341-2kebeej",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-2kebeej"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "格式： 数据类型 变量名 = 数据值;"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-2e7r2mu",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-2e7r2mu"
					},
					"Children": [
						{
							"ID": "20210707214341-xooseyz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-xooseyz"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "变量的作用范围"
								},
								{
									"Type": "NodeText",
									"Data": "：在 Java 中，多行语句用{ }括起来，编译器就能识别出语句块的开始和结束"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-us2pzf6",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-us2pzf6"
					},
					"Children": [
						{
							"ID": "20210707214341-ryrpy1q",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-ryrpy1q"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "注意"
								},
								{
									"Type": "NodeText",
									"Data": "："
								}
							]
						},
						{
							"ID": "20210707214341-vvri4cg",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707214341-vvri4cg"
							},
							"Children": [
								{
									"ID": "20210707214341-5ctb0ox",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214341-5ctb0ox"
									},
									"Children": [
										{
											"ID": "20210707214341-535fbj8",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-535fbj8"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "Java 中每个变量必须"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "先声明，后使用，不赋值不能使用"
												}
											]
										}
									]
								},
								{
									"ID": "20210707214341-cvzidc3",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214341-cvzidc3"
									},
									"Children": [
										{
											"ID": "20210707214341-yvv6lzl",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-yvv6lzl"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "在同一个大括号范围内（"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "作用域内"
												},
												{
													"Type": "NodeText",
													"Data": "），变量的名字不可以相同"
												}
											]
										}
									]
								},
								{
									"ID": "20210707214341-evsfxhv",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214341-evsfxhv"
									},
									"Children": [
										{
											"ID": "20210707214341-5abs9us",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-5abs9us"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "对于"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "byte 或者 short"
												},
												{
													"Type": "NodeText",
													"Data": "类型变量，注意其"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "取值范围"
												}
											]
										}
									]
								},
								{
									"ID": "20210707214341-dt2rukk",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214341-dt2rukk"
									},
									"Children": [
										{
											"ID": "20210707214341-rggcxrp",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-rggcxrp"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "对于 float 或者 long 类型变量，"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "后缀 F、L"
												},
												{
													"Type": "NodeText",
													"Data": "不能丢"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-yb35h3b",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-yb35h3b"
					},
					"Children": [
						{
							"ID": "20210707214341-iavjq0k",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-iavjq0k"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "java 11 中可以使用"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "var"
								},
								{
									"Type": "NodeText",
									"Data": "来简化定义"
								}
							]
						},
						{
							"ID": "20210707214341-jwtulcn",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "amF2YQ==",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210707214341-jwtulcn"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "StringBuilder sb = new StringBuilder();\n// 可改为\nvar sb = new StringBuilder();\n// 编译器会根据赋值语句自动推断出变量sb的类型是StringBuilder。对编译器来说，语句：\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-dn9b3ry",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707214341-dn9b3ry"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "数据类型"
				}
			]
		},
		{
			"ID": "20210707214341-09rvsvf",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707214341-09rvsvf"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "基本数据类型"
				}
			]
		},
		{
			"ID": "20210707214341-dhzxevm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-dhzxevm"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "数值型（整数型、浮点型）、字符型、布尔型"
				}
			]
		},
		{
			"ID": "20210707214341-s36zynx",
			"Type": "NodeTable",
			"Data": "| 数据类型     | 关键字                              | 内存占用      | 取值范围                          |\n| ------------ | ----------------------------------- | ------------- | --------------------------------- |\n| 整数类型     | byte                                | 1 个字节      | -128~127                          |\n| 整数类型     | short                               | 2 个字节      | -2^15~2^15-1 = -32768~32767       |\n| 整数类型     | int（默认）                         | 4 个字节      | -2^31~2^31^-1（约 21 亿）         |\n| 整数类型     | long                                | 8 个字节      | -2^63~2^63^-1                     |\n| 单精度浮点数 | ﬂoat（尾数可以精确到 7 位有效数字） | 4 个字节      | -3.403E38~3.403E38                |\n| 双精度浮点数 | double（默认，精度是 float 的两倍） | 8 个字节      | -1.798E308~1.798E308              |\n| 字符型       | char                                | 2 个字节      | 2^16 = 0~65535                    |\n| 布尔类型     | boolean                             | 1 或 4 个字节 | 只有 true、false，不能用 0 等替代 |",
			"TableAligns": [
				0,
				0,
				0,
				0
			],
			"Properties": {
				"id": "20210707214341-s36zynx"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "数据类型"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "关键字"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "内存占用"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "取值范围"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "整数类型"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "byte"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "1 个字节"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "-128~127"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "整数类型"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "short"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "2 个字节"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "-2"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "sup",
									"TextMarkTextContent": "15~2"
								},
								{
									"Type": "NodeText",
									"Data": "15-1 = -32768~32767"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "整数类型"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "int（默认）"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "4 个字节"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "-2"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "sup",
									"TextMarkTextContent": "31~2"
								},
								{
									"Type": "NodeText",
									"Data": "31^-1（约 21 亿）"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "整数类型"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "long"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "8 个字节"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "-2"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "sup",
									"TextMarkTextContent": "63~2"
								},
								{
									"Type": "NodeText",
									"Data": "63^-1"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "单精度浮点数"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "ﬂoat（尾数可以精确到 7 位有效数字）"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "4 个字节"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "-3.403E38~3.403E38"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "双精度浮点数"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "double（默认，精度是 float 的两倍）"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "8 个字节"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "-1.798E308~1.798E308"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "字符型"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "char"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "2 个字节"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "2^16 = 0~65535"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"TableAligns": [
						0,
						0,
						0,
						0
					],
					"Children": [
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "布尔类型"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "boolean"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "1 或 4 个字节"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "只有 true、false，不能用 0 等替代"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-mnguw23",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707214341-mnguw23"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "引用数据类型"
				}
			]
		},
		{
			"ID": "20210707214341-8xg3pk1",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707214341-8xg3pk1"
			},
			"Children": [
				{
					"ID": "20210707214341-o6aed5c",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-o6aed5c"
					},
					"Children": [
						{
							"ID": "20210707214341-m3r8j2a",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-m3r8j2a"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "类（包含字符串 String）"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-8oybhtz",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-8oybhtz"
					},
					"Children": [
						{
							"ID": "20210707214341-69f5we1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-69f5we1"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "接口"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-1uyuzrx",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-1uyuzrx"
					},
					"Children": [
						{
							"ID": "20210707214341-97ugpgm",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-97ugpgm"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "数组"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-wri36xd",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-wri36xd"
					},
					"Children": [
						{
							"ID": "20210707214341-o4z5ggq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-o4z5ggq"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Lambda（也属于类？）"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-sulj3t4",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707214341-sulj3t4"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "整数类型"
				}
			]
		},
		{
			"ID": "20210707214341-455vnxc",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707214341-455vnxc"
			},
			"Children": [
				{
					"ID": "20210707214341-n8gai70",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-n8gai70"
					},
					"Children": [
						{
							"ID": "20210707214341-dlrdhzp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-dlrdhzp"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "Java 各整数类型有固定的表数范围和字段长度"
								},
								{
									"Type": "NodeText",
									"Data": "，不受具体 OS 的影响，以保 证 Java 程序的可移植性。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-m2gfy0h",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-m2gfy0h"
					},
					"Children": [
						{
							"ID": "20210707214341-2uinwyl",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-2uinwyl"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "默认为 int 型，声明 long 型常量须后加‘l’或‘L’。通常声明为 int 型，除非不足以表示较大的数，才使用 long。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-po6r8us",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-po6r8us"
					},
					"Children": [
						{
							"ID": "20210707214341-pnj64vj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-pnj64vj"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "整数的数值表示不但是"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "精确"
								},
								{
									"Type": "NodeText",
									"Data": "的，而且"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "整数运算永远是精确的"
								},
								{
									"Type": "NodeText",
									"Data": "，即使是除法也是精确的，因为两个整数相除只能得到结果的整数部分"
								}
							]
						},
						{
							"ID": "20210707214341-52wek58",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-52wek58"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "::: danger"
								}
							]
						},
						{
							"ID": "20210707214341-zj9tqsf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-zj9tqsf"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "整数的除法对于除数为 0 时运行时将报错，但编译不会报错。"
								}
							]
						},
						{
							"ID": "20210707214341-on9a095",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-on9a095"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": ":::"
								}
							]
						},
						{
							"ID": "20210707214341-18vzib9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-18vzib9"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "::: danger"
								}
							]
						},
						{
							"ID": "20210707214341-jp900f2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-jp900f2"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "要特别注意，整数由于存在范围限制，如果计算结果超出了范围，就会产生溢出，而溢出"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "不会出错"
								},
								{
									"Type": "NodeText",
									"Data": "，却会得到一个奇怪的结果"
								}
							]
						},
						{
							"ID": "20210707214341-12ansqy",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-12ansqy"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": ":::"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-3h2latg",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707214341-3h2latg"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "浮点类型"
				}
			]
		},
		{
			"ID": "20210707214341-e2dcq29",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707214341-e2dcq29"
			},
			"Children": [
				{
					"ID": "20210707214341-q1c1ey2",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-q1c1ey2"
					},
					"Children": [
						{
							"ID": "20210707214341-id04tbx",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-id04tbx"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "与整数类型类似，"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "Java 浮点类型也有固定的表数范围和字段长度"
								},
								{
									"Type": "NodeText",
									"Data": "，不受具体操作系统的影响。默认为 double 型，声明 float 型常量，须后加"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "f"
								},
								{
									"Type": "NodeText",
									"Data": "或"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "F"
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-viyw5ch",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-viyw5ch"
					},
					"Children": [
						{
							"ID": "20210707214341-8v3ylq7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-8v3ylq7"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "浮点型常量有两种表示形式"
								}
							]
						},
						{
							"ID": "20210707214341-mgwjh3r",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707214341-mgwjh3r"
							},
							"Children": [
								{
									"ID": "20210707214341-ohrz8py",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214341-ohrz8py"
									},
									"Children": [
										{
											"ID": "20210707214341-3fhakg7",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-3fhakg7"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "十进制数形式：如 5.12、512.0f、.512 （必须有小数点）"
												}
											]
										}
									]
								},
								{
									"ID": "20210707214341-7am4k9c",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214341-7am4k9c"
									},
									"Children": [
										{
											"ID": "20210707214341-h1yf9v2",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-h1yf9v2"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "科学计数法形式：如 5.12e2、512E2、100E-2"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-91ejksb",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-91ejksb"
					},
					"Children": [
						{
							"ID": "20210707214341-xsz28je",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-xsz28je"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "float 尾数可以精确到 7 位有效数字（精度很难满足需求），double 精度是 float 的两倍，通常采用 double。注意："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "数据范围与字节数不一定相关"
								},
								{
									"Type": "NodeText",
									"Data": "，如"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "float 数据范围比 long 更加广泛"
								},
								{
									"Type": "NodeText",
									"Data": "，但是 float 是 4 字节，long 是 8 字节。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-h2skog1",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-h2skog1"
					},
					"Children": [
						{
							"ID": "20210707214341-nfsk44b",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-nfsk44b"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "浮点类型可能"
								},
								{
									"Type": "NodeText",
									"Data": "只是一个"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "近似值"
								},
								{
									"Type": "NodeText",
									"Data": "，并非精确的数值。"
								}
							]
						},
						{
							"ID": "20210707214341-h1dyy9t",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707214341-h1dyy9t"
							},
							"Children": [
								{
									"ID": "20210707214341-jrb49re",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214341-jrb49re"
									},
									"Children": [
										{
											"ID": "20210707214341-2z66nfs",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-2z66nfs"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "0.1 换算成二进制是一个无限循环小数，即"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "2^-4+2^-5+..."
												}
											]
										}
									]
								},
								{
									"ID": "20210707214341-9er4n6j",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214341-9er4n6j"
									},
									"Children": [
										{
											"ID": "20210707214341-ii6auvj",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-ii6auvj"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "0.5 换算成二进制可以精确表示，即"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "2^-1"
												}
											]
										}
									]
								}
							]
						},
						{
							"ID": "20210707214341-qek6xrx",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-qek6xrx"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "由于浮点数存在运算误差，所以比较两个浮点数是否相等常常会出现错误的结果。正确的比较方法是判断两个浮点数之差的绝对值是否小于一个很小的数："
								}
							]
						},
						{
							"ID": "20210707214341-kpl5l9f",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "amF2YQ==",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210707214341-kpl5l9f"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "// 比较x和y是否相等，先计算其差的绝对值:\ndouble r = Math.abs(x - y);\n// 再判断绝对值是否足够小:\nif (r \u003c 0.00001) {\n    // 可以认为相等\n} else {\n    // 不相等\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-7fvlm7r",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-7fvlm7r"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "::: danger"
				}
			]
		},
		{
			"ID": "20210707214341-n2t02l4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-n2t02l4"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "整数运算在除数为"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "0"
				},
				{
					"Type": "NodeText",
					"Data": "时会报错，而浮点数运算在除数为"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "0"
				},
				{
					"Type": "NodeText",
					"Data": "时，不会报错，但会返回几个特殊值："
				}
			]
		},
		{
			"ID": "20210707214341-ymsbvn3",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707214341-ymsbvn3"
			},
			"Children": [
				{
					"ID": "20210707214341-gefam71",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-gefam71"
					},
					"Children": [
						{
							"ID": "20210707214341-w79dupx",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-w79dupx"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "NaN"
								},
								{
									"Type": "NodeText",
									"Data": "表示 Not a Number"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-p7kmws2",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-p7kmws2"
					},
					"Children": [
						{
							"ID": "20210707214341-upt20gz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-upt20gz"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Infinity"
								},
								{
									"Type": "NodeText",
									"Data": "表示无穷大"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-7lnbn8j",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-7lnbn8j"
					},
					"Children": [
						{
							"ID": "20210707214341-m1sdngi",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-m1sdngi"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "-Infinity"
								},
								{
									"Type": "NodeText",
									"Data": "表示负无穷大"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-719w03c",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707214341-719w03c"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "double d1 = 0.0 / 0; // NaN\ndouble d2 = 1.0 / 0; // Infinity\ndouble d3 = -1.0 / 0; // -Infinity\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707214341-k1jqy2r",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-k1jqy2r"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这三种特殊值在实际运算中很少碰到，我们只需要了解即可。"
				}
			]
		},
		{
			"ID": "20210707214341-vwf9p8t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-vwf9p8t"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": ":::"
				}
			]
		},
		{
			"ID": "20210707214341-8whg7ho",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707214341-8whg7ho"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "字符型"
				}
			]
		},
		{
			"ID": "20210707214341-n4nwcil",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707214341-n4nwcil"
			},
			"Children": [
				{
					"ID": "20210707214341-f7nqfw2",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-f7nqfw2"
					},
					"Children": [
						{
							"ID": "20210707214341-s0sgtah",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-s0sgtah"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "char 型数据用来表示通常意义上“字符”（2 字节），"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "Java 中的所有字符用来存储 Unicode 编码，读取到 JVM 中时会将字符编码转为 UTF-16 来存储，占两个字节"
								},
								{
									"Type": "NodeText",
									"Data": "，可以存储大部分非生僻字（UTF-8 位不定长，3 个字节存储中文汉字）。故一个字符可以存储一个字母，一个汉字，或其他书面语的一个字符。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-z1dwbdh",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-z1dwbdh"
					},
					"Children": [
						{
							"ID": "20210707214341-yrcenwv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-yrcenwv"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "字符型变量的三种表现形式："
								}
							]
						},
						{
							"ID": "20210707214341-76bbbg6",
							"Type": "NodeList",
							"ListData": {
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707214341-76bbbg6"
							},
							"Children": [
								{
									"ID": "20210707214341-w1q1lur",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214341-w1q1lur"
									},
									"Children": [
										{
											"ID": "20210707214341-i1405bq",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-i1405bq"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "字符常量是用单引号(‘ ’)括起来的"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "单个字符"
												},
												{
													"Type": "NodeText",
													"Data": "。例如:char c1 = 'a'; char c2 = '中'; char c3 = '9';"
												}
											]
										}
									]
								},
								{
									"ID": "20210707214341-6egvomh",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214341-6egvomh"
									},
									"Children": [
										{
											"ID": "20210707214341-g4jj7af",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-g4jj7af"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "Java 中还允许使用"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "转义字符"
												},
												{
													"Type": "NodeText",
													"Data": "‘\\’来将其后的字符转变为特殊字符型常量。"
												}
											]
										},
										{
											"ID": "20210707214341-mq5y3qb",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-mq5y3qb"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "例如"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "\\n"
												},
												{
													"Type": "NodeText",
													"Data": "换行符，"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "\\'"
												},
												{
													"Type": "NodeText",
													"Data": "单引，"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "\\\\"
												},
												{
													"Type": "NodeText",
													"Data": "反斜杠，"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "\\b"
												},
												{
													"Type": "NodeText",
													"Data": "退格，"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "\\r"
												},
												{
													"Type": "NodeText",
													"Data": "回车、"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "\\n"
												},
												{
													"Type": "NodeText",
													"Data": "换行"
												}
											]
										}
									]
								},
								{
									"ID": "20210707214341-bkgcw7e",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214341-bkgcw7e"
									},
									"Children": [
										{
											"ID": "20210707214341-le67nkl",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-le67nkl"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "直接使用 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "Unicode 值"
												},
												{
													"Type": "NodeText",
													"Data": "来表示字符型常量:‘\\uXXXX’。其中，XXXX 代表 一个十六进制整数。如:\\u000a 表示 \\n。"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-i78gjex",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-i78gjex"
					},
					"Children": [
						{
							"ID": "20210707214341-9koj0st",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-9koj0st"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "char 类型是可以进行"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "运算"
								},
								{
									"Type": "NodeText",
									"Data": "的。因为它都对应有 Unicode 码。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-qq3o6jc",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-qq3o6jc"
					},
					"Children": [
						{
							"ID": "20210707214341-j0fhdd3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-j0fhdd3"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "字符对应 ASCII 码（0~127）：48—'0'、65—'A'、97—'a'"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-9iyhbfn",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707214341-9iyhbfn"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "布尔类型"
				}
			]
		},
		{
			"ID": "20210707214341-7xn5amh",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707214341-7xn5amh"
			},
			"Children": [
				{
					"ID": "20210707214341-2nkd8fa",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-2nkd8fa"
					},
					"Children": [
						{
							"ID": "20210707214341-9oqmqd7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-9oqmqd7"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "boolean 类型数据只允许取值 true 和 false，无 null。"
								}
							]
						},
						{
							"ID": "20210707214341-3v95o9m",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-3v95o9m"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "不可以使用 0 或非 0 的整数替代 false 和 true，这点和 C 语言不同。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-ziflrdr",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-ziflrdr"
					},
					"Children": [
						{
							"ID": "20210707214341-2leu1o1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-2leu1o1"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "boolean 在《Java 虚拟机规范》给出了 4 个字节（编译后用 int 替代），和 boolean 数组 1 个字节的定义（当 byte 数组处理）"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-d9u99go",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707214341-d9u99go"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "数据类型转换"
				}
			]
		},
		{
			"ID": "20210707214341-ne4v9q6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-ne4v9q6"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "有多种类型的数据混合运算时，系统首先自动将所有数据转换成容量最大的那种数据类型，然后再进行计算。"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "byte、char、short 之间不会相互转换，他们三者在计算时首先转换为 int 类型。"
				}
			]
		},
		{
			"ID": "20210707214341-zl1630a",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-zl1630a"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "参与运算的有 byte、char、short"
				},
				{
					"Type": "NodeText",
					"Data": "——\u003e"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "int"
				},
				{
					"Type": "NodeText",
					"Data": "——\u003e"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "long"
				},
				{
					"Type": "NodeText",
					"Data": "——\u003e"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "float"
				},
				{
					"Type": "NodeText",
					"Data": "——\u003e"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "double"
				},
				{
					"Type": "NodeText",
					"Data": "（boolean 不参与）"
				}
			]
		},
		{
			"ID": "20210707214341-gz67gqp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-gz67gqp"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当把任何基本数据类型的值和 String 进行连接运算时(+)，基本数据类型的值将自动转化为 String 类型。"
				}
			]
		},
		{
			"ID": "20210707214341-wwf7iu4",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707214341-wwf7iu4"
			},
			"Children": [
				{
					"ID": "20210707214341-gcboq8f",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-gcboq8f"
					},
					"Children": [
						{
							"ID": "20210707214341-ofofeji",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-ofofeji"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "自动类型转换/提升"
								},
								{
									"Type": "NodeText",
									"Data": "（隐式），范围"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "小"
								},
								{
									"Type": "NodeText",
									"Data": "的类型向范围"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "大"
								},
								{
									"Type": "NodeText",
									"Data": "的"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "类型提升"
								},
								{
									"Type": "NodeText",
									"Data": "，如下："
								}
							]
						},
						{
							"ID": "20210707214341-eewxaef",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-eewxaef"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "编译器的常量优化"
								}
							]
						},
						{
							"ID": "20210707214341-7p68ukx",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-7p68ukx"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "对于 byte、char、short 三种类型来说，若右侧赋值的"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "数值(不能为变量)"
								},
								{
									"Type": "NodeText",
									"Data": "没有超过范围，那么 javac 编译器会自动隐含得帮我们"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "补上(byte) (short) (char)"
								},
								{
									"Type": "NodeText",
									"Data": " ，否则编译报错。"
								}
							]
						},
						{
							"ID": "20210707214341-olf69q8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-olf69q8"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在给变量进行赋值时，若右侧的"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "表达式都是常量"
								},
								{
									"Type": "NodeText",
									"Data": "，没有任何变量，那么 javac 编译器将会直接将若干个常量表达式计算得到结果。并根据是否超过范围决定编译成功与否。"
								}
							]
						},
						{
							"ID": "20210707214341-fwi9y2e",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "amF2YQ==",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210707214341-fwi9y2e"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "byte a = 3;\nbyte b = 4;\nbyte c = a + b;//运算期间byte类型变量自动提升为int，但int类型不能赋值给byte类型，因此编译失败。\nbyte d = 3 + 4;//常量在编译的时候（javac），已经确定了 3+4 的结果并没有超过byte类型的取值范围，可以赋值给d，成功\n\nchar ch = 'A';\nSystem.out.println(ch + 1);//66\nchar ch = '';//编译失败\n\nlong a = 12345;//自动类型提升\nlong b = 12313131312312313;//编译报错，过大的整数，转int失败\n\nfloat a = 12.3;//编译失败，double转float失败\n\nSystem.out .println(3+4+“Hello!”); //输出:7Hello!\nSystem.out.println(“Hello!”+3+4); //输出:Hello!34\nSystem.out.println(‘a’+1+“Hello!”); //输出:98Hello!\nSystem.out.println(“Hello”+‘a’+1); //输出:Helloa1，连接运算，不做数值运算！！若是俩char则做数值运算！！\nboolean b = true；\nSystem.out.println(\"Hello\" + b);//输出：Hellotrue\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-herrcwi",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-herrcwi"
					},
					"Children": [
						{
							"ID": "20210707214341-0vtqjy3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-0vtqjy3"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "强制类型转换"
								},
								{
									"Type": "NodeText",
									"Data": "（显式），是自动类型转换的"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "逆过程"
								},
								{
									"Type": "NodeText",
									"Data": "，将容量大的数据类型转换为容量小的数据类型。"
								}
							]
						},
						{
							"ID": "20210707214341-161qdpi",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-161qdpi"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "一般不推荐使用，有可能发生"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "精度损失"
								},
								{
									"Type": "NodeText",
									"Data": "（浮点转成整数，直接"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "丢掉小数"
								},
								{
									"Type": "NodeText",
									"Data": "，如果转型后超过了整型能表示的最大范围，将返回整型的最大值）"
								}
							]
						},
						{
							"ID": "20210707214341-spc5krz",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "amF2YQ==",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210707214341-spc5krz"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "double a = 3.5;\nbyte b = (byte)a;//3\n\nint a = 128;\nbyte b = (byte)a;//-128\n//此处涉及进制转换\n//128的补码为（采用8位演示）：1000 0000\n//强转位byte：1就变为符号位了，代表-128\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						},
						{
							"ID": "20210707214341-spszl5a",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "amF2YQ==",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210707214341-spszl5a"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "int n1 = (int) 12.3; // 12\nint n2 = (int) 12.7; // 12\nint n2 = (int) -12.7; // -12\nint n3 = (int) (12.7 + 0.5); // 13\nint n4 = (int) 1.2e20; // 2147483647\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						},
						{
							"ID": "20210707214341-rvxxgnw",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-rvxxgnw"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "在使用+=、-=、*"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "=、/=、%=运算符进行赋值时，强制类型转换会自动完成，不会改变原有数据类型；++、--也一样。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-wtytsoj",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-wtytsoj"
					},
					"Children": [
						{
							"ID": "20210707214341-843kdha",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-843kdha"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果要进行"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "四舍五入"
								},
								{
									"Type": "NodeText",
									"Data": "，可以对浮点数加上 0.5 再强制转型："
								}
							]
						},
						{
							"ID": "20210707214341-dshpswd",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "amF2YQ==",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210707214341-dshpswd"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "double d = 2.6;\nint n = (int) (d + 0.5);\nSystem.out.println(n);\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-pdpz6ku",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-pdpz6ku"
					},
					"Children": [
						{
							"ID": "20210707214341-g9uxkdr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-g9uxkdr"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "通常，字符串不能直接转换为基本类型，但通过基本类型对应的包装类则可以实现把字符串转换成基本类型。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-9oe6pxn",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707214341-9oe6pxn"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "包装类"
				}
			]
		},
		{
			"ID": "20210707214341-kxx5414",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707214341-kxx5414"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "简介"
				}
			]
		},
		{
			"ID": "20210707214341-oq3fnel",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707214341-oq3fnel"
			},
			"Children": [
				{
					"ID": "20210707214341-271d7fi",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-271d7fi"
					},
					"Children": [
						{
							"ID": "20210707214341-g71gx6c",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-g71gx6c"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "针对八种基本数据类型定义相应的引用类型—"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "java.lang"
								},
								{
									"Type": "NodeText",
									"Data": "下的包装类(封装类)，可以让让基本类型的数据"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "进行更多的操作"
								},
								{
									"Type": "NodeText",
									"Data": "，此时 Java 才是真正的面向对象。如下其中 6 种数字类型都继承父类 Number。"
								}
							]
						},
						{
							"ID": "20210707214341-g9qfgja",
							"Type": "NodeTable",
							"Data": "| 基本数据类型 | 引用数据类型  |\n| :----------: | :-----------: |\n|     byte     |     Byte      |\n|    short     |     Short     |\n|     int      |  **Integer**  |\n|     long     |     Long      |\n|    float     |     Float     |\n|    double    |    Double     |\n|     char     | **Character** |\n|   boolean    |    Boolean    |",
							"TableAligns": [
								2,
								2
							],
							"Properties": {
								"id": "20210707214341-g9qfgja"
							},
							"Children": [
								{
									"Type": "NodeTableHead",
									"Children": [
										{
											"Type": "NodeTableRow",
											"Children": [
												{
													"Type": "NodeTableCell",
													"TableCellAlign": 2,
													"Children": [
														{
															"Type": "NodeText",
															"Data": "基本数据类型"
														}
													]
												},
												{
													"Type": "NodeTableCell",
													"TableCellAlign": 2,
													"Children": [
														{
															"Type": "NodeText",
															"Data": "引用数据类型"
														}
													]
												}
											]
										}
									]
								},
								{
									"Type": "NodeTableRow",
									"TableAligns": [
										2,
										2
									],
									"Children": [
										{
											"Type": "NodeTableCell",
											"TableCellAlign": 2,
											"Children": [
												{
													"Type": "NodeText",
													"Data": "byte"
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"TableCellAlign": 2,
											"Children": [
												{
													"Type": "NodeText",
													"Data": "Byte"
												}
											]
										}
									]
								},
								{
									"Type": "NodeTableRow",
									"TableAligns": [
										2,
										2
									],
									"Children": [
										{
											"Type": "NodeTableCell",
											"TableCellAlign": 2,
											"Children": [
												{
													"Type": "NodeText",
													"Data": "short"
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"TableCellAlign": 2,
											"Children": [
												{
													"Type": "NodeText",
													"Data": "Short"
												}
											]
										}
									]
								},
								{
									"Type": "NodeTableRow",
									"TableAligns": [
										2,
										2
									],
									"Children": [
										{
											"Type": "NodeTableCell",
											"TableCellAlign": 2,
											"Children": [
												{
													"Type": "NodeText",
													"Data": "int"
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"TableCellAlign": 2,
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "Integer"
												}
											]
										}
									]
								},
								{
									"Type": "NodeTableRow",
									"TableAligns": [
										2,
										2
									],
									"Children": [
										{
											"Type": "NodeTableCell",
											"TableCellAlign": 2,
											"Children": [
												{
													"Type": "NodeText",
													"Data": "long"
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"TableCellAlign": 2,
											"Children": [
												{
													"Type": "NodeText",
													"Data": "Long"
												}
											]
										}
									]
								},
								{
									"Type": "NodeTableRow",
									"TableAligns": [
										2,
										2
									],
									"Children": [
										{
											"Type": "NodeTableCell",
											"TableCellAlign": 2,
											"Children": [
												{
													"Type": "NodeText",
													"Data": "float"
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"TableCellAlign": 2,
											"Children": [
												{
													"Type": "NodeText",
													"Data": "Float"
												}
											]
										}
									]
								},
								{
									"Type": "NodeTableRow",
									"TableAligns": [
										2,
										2
									],
									"Children": [
										{
											"Type": "NodeTableCell",
											"TableCellAlign": 2,
											"Children": [
												{
													"Type": "NodeText",
													"Data": "double"
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"TableCellAlign": 2,
											"Children": [
												{
													"Type": "NodeText",
													"Data": "Double"
												}
											]
										}
									]
								},
								{
									"Type": "NodeTableRow",
									"TableAligns": [
										2,
										2
									],
									"Children": [
										{
											"Type": "NodeTableCell",
											"TableCellAlign": 2,
											"Children": [
												{
													"Type": "NodeText",
													"Data": "char"
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"TableCellAlign": 2,
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "Character"
												}
											]
										}
									]
								},
								{
									"Type": "NodeTableRow",
									"TableAligns": [
										2,
										2
									],
									"Children": [
										{
											"Type": "NodeTableCell",
											"TableCellAlign": 2,
											"Children": [
												{
													"Type": "NodeText",
													"Data": "boolean"
												}
											]
										},
										{
											"Type": "NodeTableCell",
											"TableCellAlign": 2,
											"Children": [
												{
													"Type": "NodeText",
													"Data": "Boolean"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-pfh05fa",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707214341-pfh05fa"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "装箱与拆箱"
				}
			]
		},
		{
			"ID": "20210707214341-9nrtrql",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707214341-9nrtrql"
			},
			"Children": [
				{
					"ID": "20210707214341-bm8i7h2",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-bm8i7h2"
					},
					"Children": [
						{
							"ID": "20210707214341-t98m3j4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-t98m3j4"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "装箱：将基本数据类型的值转为引用数据类型，提供如下静态方法，其他包装类同理。"
								}
							]
						},
						{
							"ID": "20210707214341-ybogggp",
							"Type": "NodeList",
							"ListData": {
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707214341-ybogggp"
							},
							"Children": [
								{
									"ID": "20210707214341-yzm7hec",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214341-yzm7hec"
									},
									"Children": [
										{
											"ID": "20210707214341-m8580n5",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-m8580n5"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "Integer.valueOf(int num/String str)"
												},
												{
													"Type": "NodeText",
													"Data": "，字符串必须是基本类型字符串，否则"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "NumberFormatException"
												}
											]
										}
									]
								},
								{
									"ID": "20210707214341-stkdnf4",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214341-stkdnf4"
									},
									"Children": [
										{
											"ID": "20210707214341-z33mrvx",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-z33mrvx"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "s",
													"TextMarkTextContent": "利用其构造器，可传入基本类型、String。在 JDK9 时过时"
												}
											]
										},
										{
											"ID": "20210707214341-6s34098",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-6s34098"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "其中 Boolean 在传入字符串时底层方法为"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "return \u0026quot;true\u0026quot;.equalsIgnoreCase(s)"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-ecyfq3a",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-ecyfq3a"
					},
					"Children": [
						{
							"ID": "20210707214341-ifacrjp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-ifacrjp"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "拆箱：将引用数据类型的值转为基本数据类型，提供如下成员方法，其他包装类同理。"
								}
							]
						},
						{
							"ID": "20210707214341-sf80hyp",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707214341-sf80hyp"
							},
							"Children": [
								{
									"ID": "20210707214341-1fyleao",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214341-1fyleao"
									},
									"Children": [
										{
											"ID": "20210707214341-vdkt843",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-vdkt843"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "intValue()"
												},
												{
													"Type": "NodeText",
													"Data": "该方法将 Integer 对象转为 int"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-tbj5po4",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-tbj5po4"
					},
					"Children": [
						{
							"ID": "20210707214341-hzoqtq3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-hzoqtq3"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "自动拆装箱"
								},
								{
									"Type": "NodeText",
									"Data": "："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "JDK 5.0 后支持"
								},
								{
									"Type": "NodeText",
									"Data": "基本类型数据和包装类型数据之间可以自动互相转换"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-vt122fl",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707214341-vt122fl"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "基本类型与字符串转换"
				}
			]
		},
		{
			"ID": "20210707214341-8j3bm1b",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707214341-8j3bm1b"
			},
			"Children": [
				{
					"ID": "20210707214341-9ahxxim",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-9ahxxim"
					},
					"Children": [
						{
							"ID": "20210707214341-ekwsmbs",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-ekwsmbs"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "基本类型—\u003e字符串："
								}
							]
						},
						{
							"ID": "20210707214341-uli5zkh",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707214341-uli5zkh"
							},
							"Children": [
								{
									"ID": "20210707214341-kmuwv52",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214341-kmuwv52"
									},
									"Children": [
										{
											"ID": "20210707214341-ynsik7c",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-ynsik7c"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong code",
													"TextMarkTextContent": "基本类型的值+\u0026quot;\u0026quot;"
												},
												{
													"Type": "NodeText",
													"Data": "：最简单方法，常用"
												}
											]
										}
									]
								},
								{
									"ID": "20210707214341-yeih5i3",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214341-yeih5i3"
									},
									"Children": [
										{
											"ID": "20210707214341-vt2z598",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-vt2z598"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "String 类的静态方法"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong code",
													"TextMarkTextContent": "valueOf(参数)"
												}
											]
										}
									]
								},
								{
									"ID": "20210707214341-o3kidq0",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214341-o3kidq0"
									},
									"Children": [
										{
											"ID": "20210707214341-w76j15k",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-w76j15k"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "包装类的静态方法"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong code",
													"TextMarkTextContent": "toString(参数)"
												},
												{
													"Type": "NodeText",
													"Data": "方法，不是 Object 类的"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "toString()"
												},
												{
													"Type": "NodeText",
													"Data": "方法，重载"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-oe243ed",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-oe243ed"
					},
					"Children": [
						{
							"ID": "20210707214341-8xcstwi",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-8xcstwi"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "字符串—\u003e基本类型："
								}
							]
						},
						{
							"ID": "20210707214341-23hjfwy",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707214341-23hjfwy"
							},
							"Children": [
								{
									"ID": "20210707214341-8b5iljs",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214341-8b5iljs"
									},
									"Children": [
										{
											"ID": "20210707214341-wfcqo8y",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-wfcqo8y"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "包装类的静态方法"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong code",
													"TextMarkTextContent": "parseXxx()"
												}
											]
										}
									]
								},
								{
									"ID": "20210707214341-uafkuhu",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214341-uafkuhu"
									},
									"Children": [
										{
											"ID": "20210707214341-nvvvqqg",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-nvvvqqg"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "包装类的静态方法"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong code",
													"TextMarkTextContent": "valueOf(参数)"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "，转包装类后再转基本类型"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-p31tinq",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-p31tinq"
					},
					"Children": [
						{
							"ID": "20210707214341-fjkya3b",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-fjkya3b"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "注意："
								}
							]
						},
						{
							"ID": "20210707214341-mgwe3r6",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1,
								"Tight": true,
								"Start": 1,
								"Delimiter": 46,
								"Padding": 4,
								"Marker": "MQ==",
								"Num": 1
							},
							"Properties": {
								"id": "20210707214341-mgwe3r6"
							},
							"Children": [
								{
									"ID": "20210707214341-pbyu9uu",
									"Type": "NodeListItem",
									"Data": "1",
									"ListData": {
										"Typ": 1,
										"Tight": true,
										"Start": 1,
										"Delimiter": 46,
										"Padding": 4,
										"Marker": "MQ==",
										"Num": 1
									},
									"Properties": {
										"id": "20210707214341-pbyu9uu"
									},
									"Children": [
										{
											"ID": "20210707214341-4yxndjf",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-4yxndjf"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "包装类都重写 Object 类中的"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "toString()"
												},
												{
													"Type": "NodeText",
													"Data": " 方法，以"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "字符串"
												},
												{
													"Type": "NodeText",
													"Data": "形式返回包装类的基本数据类型的值"
												}
											]
										}
									]
								},
								{
									"ID": "20210707214341-nta9oob",
									"Type": "NodeListItem",
									"Data": "2",
									"ListData": {
										"Typ": 1,
										"Tight": true,
										"Start": 2,
										"Delimiter": 46,
										"Padding": 4,
										"Marker": "Mg==",
										"Num": 2
									},
									"Properties": {
										"id": "20210707214341-nta9oob"
									},
									"Children": [
										{
											"ID": "20210707214341-o7it4n6",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-o7it4n6"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "除了 Character 外，包装类都有"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "valueOf(String s)"
												},
												{
													"Type": "NodeText",
													"Data": "方法，根据 String 类型参数创建包装类对象"
												}
											]
										}
									]
								},
								{
									"ID": "20210707214341-d7bcm6u",
									"Type": "NodeListItem",
									"Data": "3",
									"ListData": {
										"Typ": 1,
										"Tight": true,
										"Start": 3,
										"Delimiter": 46,
										"Padding": 4,
										"Marker": "Mw==",
										"Num": 3
									},
									"Properties": {
										"id": "20210707214341-d7bcm6u"
									},
									"Children": [
										{
											"ID": "20210707214341-3x9iy6n",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-3x9iy6n"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "除了 Character 外，包装类都有"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "parseXXX(String s)"
												},
												{
													"Type": "NodeText",
													"Data": "的静态方法，将字符串转为基本类型数据"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-s008hn4",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707214341-s008hn4"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "包装类缓存"
				}
			]
		},
		{
			"ID": "20210707214341-luolij6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-luolij6"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "基本类型的包装类（除浮点数）都有其缓存，Boolean 为 true、false，Character 为 0"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "sub",
					"TextMarkTextContent": "127，其他为-128"
				},
				{
					"Type": "NodeText",
					"Data": "127（其有内部类）"
				}
			]
		},
		{
			"ID": "20210707214341-vf083eg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-vf083eg"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "不推荐用关系运算符比较，使用其方法比较如"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "equals()"
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20210707214341-ew7juan",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707214341-ew7juan"
			},
			"Children": [
				{
					"ID": "20210707214341-chslrqk",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-chslrqk"
					},
					"Children": [
						{
							"ID": "20210707214341-c9i55l8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-c9i55l8"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Integer 内部维护着一个 IntegerCache 的缓存，默认缓存范围是 [-128, 127]"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-33ix9ma",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-33ix9ma"
					},
					"Children": [
						{
							"ID": "20210707214341-2lgfw9j",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-2lgfw9j"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "..."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-yzor10j",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707214341-yzor10j"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "进制转换"
				}
			]
		},
		{
			"ID": "20210707214341-scj695s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-scj695s"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Long 或 Integer"
				}
			]
		},
		{
			"ID": "20210707214341-htaq3ps",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707214341-htaq3ps"
			},
			"Children": [
				{
					"ID": "20210707214341-2rxibhm",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-2rxibhm"
					},
					"Children": [
						{
							"ID": "20210707214341-lq30wu6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-lq30wu6"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "static String toString(int/long num[,int radix])"
								},
								{
									"Type": "NodeText",
									"Data": " 进制转换，默认转为十进制字符串"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-rwe0zn1",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-rwe0zn1"
					},
					"Children": [
						{
							"ID": "20210707214341-6joxkx8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-6joxkx8"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "static String toBinary/Octal/HexString(int num)"
								},
								{
									"Type": "NodeText",
									"Data": " 其他进制转二、八、十六进制字符串"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-i74vesv",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-i74vesv"
					},
					"Children": [
						{
							"ID": "20210707214341-8khemwf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-8khemwf"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "static int parseInt/Long(String s[,int radix])"
								},
								{
									"Type": "NodeText",
									"Data": " 将字符串参数解析为第二个参数指定的基数中的有符号长整数（"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "十进制"
								},
								{
									"Type": "NodeText",
									"Data": "）。"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "字符串不能有进制前缀"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-bqadmsj",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707214341-bqadmsj"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "// long a = 0b1010;// Java 7 引入了二进制的字面值常量，由前导 0b 或 0B 表示，它可以初始化所有的整数类型。\n// long a = 012;// 0 为八进制前缀\nlong a = 0xA;// 0x或0X 为十六进制前缀\n\nSystem.out.println(Long.toString(a,2));\nSystem.out.println(Long.toString(a,8));\nSystem.out.println(Long.toString(a,10));\nSystem.out.println(Long.toString(a,16));\nSystem.out.println(\"========================\");\n\nSystem.out.println(Long.toBinaryString(a));\nSystem.out.println(Long.toOctalString(a));\nSystem.out.println(a);// 等价于Long.toString(a)\nSystem.out.println(Long.toHexString(a));\nSystem.out.println(\"========================\");\n\nString b = \"17\";\nSystem.out.println(parseLong(b, 8));\nSystem.out.println(parseLong(b, 16));\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707214341-sdjlluy",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707214341-sdjlluy"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "1010\n12\n10\na\n========================\n1010\n12\n10\na\n========================\n15\n23\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707214341-cqagd62",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707214341-cqagd62"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "字面值常量"
				}
			]
		},
		{
			"ID": "20210707214341-dupck0k",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-dupck0k"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "通常，当我们向程序中插入一个字面值常量（"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "Literal"
				},
				{
					"Type": "NodeText",
					"Data": "）时，编译器会确切地识别它的类型。当类型不明确时，必须辅以字面值常量关联来帮助编译器识别。代码示例："
				}
			]
		},
		{
			"ID": "20210707214341-mgbf50c",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707214341-mgbf50c"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "// operators/Literals.java\npublic class Literals {\n  public static void main(String[] args) {\n    int i1 = 0x2f; // 16进制 (小写)\n    System.out.println(\"i1: \" + Integer.toBinaryString(i1));\n    int i2 = 0X2F; // 16进制 (大写)\n    System.out.println(\"i2: \" + Integer.toBinaryString(i2));\n    int i3 = 0177; // 8进制 (前导0)\n    System.out.println(\"i3: \" + Integer.toBinaryString(i3));\n    char c = 0xffff; // 最大 char 型16进制值\n    System.out.println(\"c: \" + Integer.toBinaryString(c));\n    byte b = 0x7f; // 最大 byte 型16进制值  10101111;\n    System.out.println(\"b: \" + Integer.toBinaryString(b));\n    short s = 0x7fff; // 最大 short 型16进制值\n    System.out.println(\"s: \" + Integer.toBinaryString(s));\n    long n1 = 200L; // long 型后缀\n    long n2 = 200l; // long 型后缀 (容易与数值1混淆)\n    long n3 = 200;\n\n    // Java 7 二进制字面值常量:\n    byte blb = (byte)0b00110101;\n    System.out.println(\"blb: \" + Integer.toBinaryString(blb));\n    short bls = (short)0B0010111110101111;\n    System.out.println(\"bls: \" + Integer.toBinaryString(bls));\n    int bli = 0b00101111101011111010111110101111;\n    System.out.println(\"bli: \" + Integer.toBinaryString(bli));\n    long bll = 0b00101111101011111010111110101111;\n    System.out.println(\"bll: \" + Long.toBinaryString(bll));\n    float f1 = 1;\n    float f2 = 1F; // float 型后缀\n    float f3 = 1f; // float 型后缀\n    double d1 = 1d; // double 型后缀\n    double d2 = 1D; // double 型后缀\n    // (long 型的字面值同样适用于十六进制和8进制 )\n  }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707214341-y6hszs5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-y6hszs5"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Java 7 引入了二进制的字面值常量，由前导 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "0b"
				},
				{
					"Type": "NodeText",
					"Data": " 或 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "0B"
				},
				{
					"Type": "NodeText",
					"Data": " 表示，它可以初始化所有的整数类型。"
				}
			]
		},
		{
			"ID": "20210707214341-5uueijg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-5uueijg"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "结果如下："
				}
			]
		},
		{
			"ID": "20210707214341-8czko4r",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707214341-8czko4r"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "i1: 101111\ni2: 101111\ni3: 1111111\nc: 1111111111111111\nb: 1111111\ns: 111111111111111\nblb: 110101\nbls: 10111110101111\nbli: 101111101011111010111110101111\nbll: 101111101011111010111110101111\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707214341-xv4egwb",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707214341-xv4egwb"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "下划线"
				}
			]
		},
		{
			"ID": "20210707214341-30xg2xx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-30xg2xx"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Java 7 中有一个深思熟虑的补充：我们可以在数字字面量中包含下划线 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "_"
				},
				{
					"Type": "NodeText",
					"Data": "，以使结果更清晰。这对于大数值的分组特别有用。代码示例："
				}
			]
		},
		{
			"ID": "20210707214341-a1qy4o9",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707214341-a1qy4o9"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "// operators/Underscores.java\npublic class Underscores {\n    public static void main(String[] args) {\n        double d = 341_435_936.445_667;\n        System.out.println(d);\n        int bin = 0b0010_1111_1010_1111_1010_1111_1010_1111;\n        System.out.println(Integer.toBinaryString(bin));\n        System.out.printf(\"%x%n\", bin); // %x二进制，%n换行（仅用于printf和format）[1]\n        long hex = 0x7f_e9_b7_aa;\n        System.out.printf(\"%x%n\", hex);\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707214341-d002qj2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-d002qj2"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出结果:"
				}
			]
		},
		{
			"ID": "20210707214341-boxenfo",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707214341-boxenfo"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "3.41435936445667E8\n101111101011111010111110101111\n2fafafaf\n7fe9b7aa\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707214341-g1yzij0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-g1yzij0"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "下面是合理使用的规则："
				}
			]
		},
		{
			"ID": "20210707214341-5cu6f6c",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20210707214341-5cu6f6c"
			},
			"Children": [
				{
					"ID": "20210707214341-z9lgsz2",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20210707214341-z9lgsz2"
					},
					"Children": [
						{
							"ID": "20210707214341-nd6zpjs",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-nd6zpjs"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "仅限单 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "_"
								},
								{
									"Type": "NodeText",
									"Data": "，不能多条相连。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-h9x53g4",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20210707214341-h9x53g4"
					},
					"Children": [
						{
							"ID": "20210707214341-6ivw6kt",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-6ivw6kt"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "数值开头和结尾不允许出现 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "_"
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-t8rb18u",
					"Type": "NodeListItem",
					"Data": "3",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 3,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mw==",
						"Num": 3
					},
					"Properties": {
						"id": "20210707214341-t8rb18u"
					},
					"Children": [
						{
							"ID": "20210707214341-85k9dla",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-85k9dla"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "F"
								},
								{
									"Type": "NodeText",
									"Data": "、"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "D"
								},
								{
									"Type": "NodeText",
									"Data": " 和 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "L"
								},
								{
									"Type": "NodeText",
									"Data": "的前后禁止出现 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "_"
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-xtrpccd",
					"Type": "NodeListItem",
					"Data": "4",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 4,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "NA==",
						"Num": 4
					},
					"Properties": {
						"id": "20210707214341-xtrpccd"
					},
					"Children": [
						{
							"ID": "20210707214341-2n3qclp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-2n3qclp"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "二进制前导 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "b"
								},
								{
									"Type": "NodeText",
									"Data": " 和 十六进制 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "x"
								},
								{
									"Type": "NodeText",
									"Data": " 前后禁止出现 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "_"
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-nr128v6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-nr128v6"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "::: tip"
				}
			]
		},
		{
			"ID": "20210707214341-03dc2m1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-03dc2m1"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "%n"
				},
				{
					"Type": "NodeText",
					"Data": "的使用。熟悉 C 风格的程序员可能习惯于看到 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "\\n"
				},
				{
					"Type": "NodeText",
					"Data": " 来表示换行符。问题在于它给你的是一个“Unix 风格”的换行符。此外，如果我们使用的是 Windows，则必须指定 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "\\r\\n"
				},
				{
					"Type": "NodeText",
					"Data": "。这种差异的包袱应该由编程语言来解决。这就是 Java 用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "%n"
				},
				{
					"Type": "NodeText",
					"Data": " 实现的可以忽略平台间差异而生成适当的换行符，但只有当你使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "System.out.printf()"
				},
				{
					"Type": "NodeText",
					"Data": " 或 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "System.out.format()"
				},
				{
					"Type": "NodeText",
					"Data": " 时。对于 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "System.out.println()"
				},
				{
					"Type": "NodeText",
					"Data": "，我们仍然必须使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "\\n"
				},
				{
					"Type": "NodeText",
					"Data": "；如果你使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "%n"
				},
				{
					"Type": "NodeText",
					"Data": "，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "println()"
				},
				{
					"Type": "NodeText",
					"Data": " 只会输出 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "%n"
				},
				{
					"Type": "NodeText",
					"Data": " 而不是换行符。"
				}
			]
		},
		{
			"ID": "20210707214341-hrv8xpb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-hrv8xpb"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": ":::"
				}
			]
		},
		{
			"ID": "20210707214341-wwgh7wx",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707214341-wwgh7wx"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "指数计数法"
				}
			]
		},
		{
			"ID": "20210707214341-2cbufjx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-2cbufjx"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "指数总是采用一种我认为很不直观的记号方法:"
				}
			]
		},
		{
			"ID": "20210707214341-9z5153v",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707214341-9z5153v"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "// operators/Exponents.java\n// \"e\" 表示 10 的几次幂\npublic class Exponents {\n    public static void main(String[] args) {\n        // 大写 E 和小写 e 的效果相同:\n        float expFloat = 1.39e-43f;\n        expFloat = 1.39E-43f;\n        System.out.println(expFloat);\n        double expDouble = 47e47d; // 'd' 是可选的\n        double expDouble2 = 47e47; // 自动转换为 double\n        System.out.println(expDouble);\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707214341-87yfz1q",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-87yfz1q"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出结果:"
				}
			]
		},
		{
			"ID": "20210707214341-yypevby",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707214341-yypevby"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "1.39E-43\n4.7E48\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707214341-0duzhu9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-0duzhu9"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "::: tip e"
				}
			]
		},
		{
			"ID": "20210707214341-yrvix68",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-yrvix68"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在科学与工程学领域，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "e"
				},
				{
					"Type": "NodeText",
					"Data": " 代表自然对数的基数，约等于 2.718 （Java 里用一种更精确的 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "double"
				},
				{
					"Type": "NodeText",
					"Data": " 值 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Math.E"
				},
				{
					"Type": "NodeText",
					"Data": " 来表示自然对数）。指数表达式 \"1.39 x e-43\"，意味着 “1.39 × 2.718 的 -43 次方”。然而，自 FORTRAN 语言发明后，人们自然而然地觉得 e 代表 “"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "10 的几次幂"
				},
				{
					"Type": "NodeText",
					"Data": "”。这种做法显得颇为古怪，因为 FORTRAN 最初是为科学与工程领域设计的。"
				}
			]
		},
		{
			"ID": "20210707214341-hc9sdt2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-hc9sdt2"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "理所当然，它的设计者应对这样的混淆概念持谨慎态度。但不管怎样，这种特别的表达方法在 C，C++ 以及现在的 Java 中顽固地保留下来了。所以倘若习惯 e 作为自然对数的基数使用，那么在 Java 中看到类似“1.39e-43f”这样的表达式时，请转换你的思维，从程序设计的角度思考它；它真正的含义是 “1.39 × 10 的 -43 次方”。"
				}
			]
		},
		{
			"ID": "20210707214341-9ibt2u8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-9ibt2u8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": ":::"
				}
			]
		},
		{
			"ID": "20210707214341-ydipryn",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707214341-ydipryn"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "运算符"
				}
			]
		},
		{
			"ID": "20210707214341-y0gp03a",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-y0gp03a"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "::: tip"
				}
			]
		},
		{
			"ID": "20210707214341-4wnng5l",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-4wnng5l"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "++"
				},
				{
					"Type": "NodeText",
					"Data": " "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "--"
				},
				{
					"Type": "NodeText",
					"Data": "是唯一具有“副作用”的运算符（除那些涉及"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "赋值"
				},
				{
					"Type": "NodeText",
					"Data": "的以外） —— 它们修改了操作数的值"
				}
			]
		},
		{
			"ID": "20210707214341-1coztwu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-1coztwu"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": ":::"
				}
			]
		},
		{
			"ID": "20210707214341-gp0uwh5",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707214341-gp0uwh5"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "算术运算"
				}
			]
		},
		{
			"ID": "20210707214341-cn7fltl",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707214341-cn7fltl"
			},
			"Children": [
				{
					"ID": "20210707214341-urdj4c6",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-urdj4c6"
					},
					"Children": [
						{
							"ID": "20210707214341-pfzvaf4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-pfzvaf4"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "算术运算符"
								},
								{
									"Type": "NodeText",
									"Data": "："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "+"
								},
								{
									"Type": "NodeText",
									"Data": "、"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "-"
								},
								{
									"Type": "NodeText",
									"Data": "、"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "*"
								},
								{
									"Type": "NodeText",
									"Data": "、"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "/"
								},
								{
									"Type": "NodeText",
									"Data": "、"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "%"
								},
								{
									"Type": "NodeText",
									"Data": "、"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "++"
								},
								{
									"Type": "NodeText",
									"Data": "、"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "--"
								},
								{
									"Type": "NodeText",
									"Data": "、"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "+"
								},
								{
									"Type": "NodeText",
									"Data": "（连接）"
								}
							]
						},
						{
							"ID": "20210707214341-r9tq3u1",
							"Type": "NodeList",
							"ListData": {
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707214341-r9tq3u1"
							},
							"Children": [
								{
									"ID": "20210707214341-34kq67n",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214341-34kq67n"
									},
									"Children": [
										{
											"ID": "20210707214341-ztw7p6d",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-ztw7p6d"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "对于除号"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "/"
												},
												{
													"Type": "NodeText",
													"Data": "，它的整数除和小数除是有区别的。"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "整数之间做除法时，只保留整数部分而舍弃小数部分"
												},
												{
													"Type": "NodeText",
													"Data": "。"
												}
											]
										},
										{
											"ID": "20210707214341-13m8lyx",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-13m8lyx"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "例如：int x=3510;x=x/1000*"
												},
												{
													"Type": "NodeText",
													"Data": "1000，最终 x 值为 300"
												}
											]
										},
										{
											"ID": "20210707214341-zmsihs1",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-zmsihs1"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "::: danger"
												}
											]
										},
										{
											"ID": "20210707214341-xifv10y",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-xifv10y"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "整数的除法对于除数为 0 时运行时将报错，但编译不会报错。"
												}
											]
										},
										{
											"ID": "20210707214341-rdrjzqz",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-rdrjzqz"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": ":::"
												}
											]
										},
										{
											"ID": "20210707214341-l2sza6m",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-l2sza6m"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "::: danger"
												}
											]
										},
										{
											"ID": "20210707214341-eg7i95d",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-eg7i95d"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "要特别注意，整数由于存在范围限制，如果计算结果超出了范围，就会产生溢出，而溢出"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "不会出错"
												},
												{
													"Type": "NodeText",
													"Data": "，却会得到一个奇怪的结果"
												}
											]
										},
										{
											"ID": "20210707214341-zi2gqq7",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-zi2gqq7"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": ":::"
												}
											]
										}
									]
								},
								{
									"ID": "20210707214341-euubfgd",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214341-euubfgd"
									},
									"Children": [
										{
											"ID": "20210707214341-u0a3gsg",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-u0a3gsg"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "++"
												},
												{
													"Type": "NodeText",
													"Data": "、"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "--"
												},
												{
													"Type": "NodeText",
													"Data": "：混合运算时比较麻烦，在单独使用时没有区别，只有"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "变量"
												},
												{
													"Type": "NodeText",
													"Data": "才能使用，常量不能使用。"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "不改变原类型"
												},
												{
													"Type": "NodeText",
													"Data": "。"
												}
											]
										},
										{
											"ID": "20210707214341-rqtljxq",
											"Type": "NodeList",
											"ListData": {
												"BulletChar": 45,
												"Padding": 2,
												"Marker": "LQ==",
												"Num": -1
											},
											"Properties": {
												"id": "20210707214341-rqtljxq"
											},
											"Children": [
												{
													"ID": "20210707214341-bl32wu1",
													"Type": "NodeListItem",
													"Data": "-",
													"ListData": {
														"BulletChar": 45,
														"Padding": 2,
														"Marker": "LQ==",
														"Num": -1
													},
													"Properties": {
														"id": "20210707214341-bl32wu1"
													},
													"Children": [
														{
															"ID": "20210707214341-rloeg78",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20210707214341-rloeg78"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "变量前：先算后用"
																}
															]
														}
													]
												},
												{
													"ID": "20210707214341-h47aida",
													"Type": "NodeListItem",
													"Data": "-",
													"ListData": {
														"Tight": true,
														"BulletChar": 45,
														"Padding": 2,
														"Marker": "LQ==",
														"Num": -1
													},
													"Properties": {
														"id": "20210707214341-h47aida"
													},
													"Children": [
														{
															"ID": "20210707214341-csacl8k",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20210707214341-csacl8k"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "变量后：先用后算"
																}
															]
														},
														{
															"ID": "20210707214341-5bkk3rm",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20210707214341-5bkk3rm"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "实际上，不管是前置 ++，还是后置 ++，都是先将变量的值加 1，然后才继续计算的。二者之间真正的区别是："
																}
															]
														},
														{
															"ID": "20210707214341-r04dt9t",
															"Type": "NodeList",
															"ListData": {
																"Tight": true,
																"BulletChar": 45,
																"Padding": 2,
																"Marker": "LQ==",
																"Num": -1
															},
															"Properties": {
																"id": "20210707214341-r04dt9t"
															},
															"Children": [
																{
																	"ID": "20210707214341-np48h4r",
																	"Type": "NodeListItem",
																	"Data": "-",
																	"ListData": {
																		"Tight": true,
																		"BulletChar": 45,
																		"Padding": 2,
																		"Marker": "LQ==",
																		"Num": -1
																	},
																	"Properties": {
																		"id": "20210707214341-np48h4r"
																	},
																	"Children": [
																		{
																			"ID": "20210707214341-yorsj3b",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20210707214341-yorsj3b"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "前置 ++ 是将变量的值加 1 后，使用增值后的变量进行运算的"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20210707214341-aimw8af",
																	"Type": "NodeListItem",
																	"Data": "-",
																	"ListData": {
																		"Tight": true,
																		"BulletChar": 45,
																		"Padding": 2,
																		"Marker": "LQ==",
																		"Num": -1
																	},
																	"Properties": {
																		"id": "20210707214341-aimw8af"
																	},
																	"Children": [
																		{
																			"ID": "20210707214341-h8we4re",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20210707214341-h8we4re"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "后置 ++ 是首先将变量赋值给一个临时变量，接下来对原有变量的值加 1，然后使用那个临时变量进行运算。"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20210707214341-ytb3td6",
																	"Type": "NodeListItem",
																	"Data": "-",
																	"ListData": {
																		"Tight": true,
																		"BulletChar": 45,
																		"Padding": 2,
																		"Marker": "LQ==",
																		"Num": -1
																	},
																	"Properties": {
																		"id": "20210707214341-ytb3td6"
																	},
																	"Children": [
																		{
																			"ID": "20210707214341-70s51jz",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20210707214341-70s51jz"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "都不是原子操作"
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"ID": "20210707214341-7brysmu",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"CodeBlockFenceChar": 96,
											"CodeBlockFenceLen": 3,
											"CodeBlockOpenFence": "YGBg",
											"CodeBlockInfo": "amF2YQ==",
											"CodeBlockCloseFence": "YGBg",
											"Properties": {
												"id": "20210707214341-7brysmu"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```",
													"CodeBlockFenceLen": 3
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "amF2YQ=="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "int n = 10;\nn += (n++) + (++n);//32\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```",
													"CodeBlockFenceLen": 3
												}
											]
										}
									]
								},
								{
									"ID": "20210707214341-cwq8v2s",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214341-cwq8v2s"
									},
									"Children": [
										{
											"ID": "20210707214341-t6h1l8u",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-t6h1l8u"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "+"
												},
												{
													"Type": "NodeText",
													"Data": "在字符串中的操作： 连接、拼接字符串"
												}
											]
										},
										{
											"ID": "20210707214341-27kihhq",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"CodeBlockFenceChar": 96,
											"CodeBlockFenceLen": 3,
											"CodeBlockOpenFence": "YGBg",
											"CodeBlockInfo": "amF2YQ==",
											"CodeBlockCloseFence": "YGBg",
											"Properties": {
												"id": "20210707214341-27kihhq"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```",
													"CodeBlockFenceLen": 3
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "amF2YQ=="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "int a = 10;\nint b = 20;\nString str = \"hello\";\nSystem.out.println(a + b + str);//30hello\nSystem.out.println(str+a+b);//hello1020\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```",
													"CodeBlockFenceLen": 3
												}
											]
										}
									]
								},
								{
									"ID": "20210707214341-sgld0f6",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214341-sgld0f6"
									},
									"Children": [
										{
											"ID": "20210707214341-8vmhulb",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-8vmhulb"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "取余和取模"
												},
												{
													"Type": "NodeText",
													"Data": "（C、C++、java、JavaScript 中%是取余，Python 中%是取模），只对于整数有意义"
												}
											]
										},
										{
											"ID": "20210707214341-r8ngeu1",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-r8ngeu1"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "区别在于第一步的商"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "趋于 0(取余)"
												},
												{
													"Type": "NodeText",
													"Data": "、"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "趋于负无穷(取模)"
												},
												{
													"Type": "NodeText",
													"Data": "，"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "取余和取模同符号数结果相同"
												}
											]
										},
										{
											"ID": "20210707214341-yvsj6hp",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"CodeBlockFenceChar": 96,
											"CodeBlockFenceLen": 3,
											"CodeBlockOpenFence": "YGBg",
											"CodeBlockInfo": "amF2YQ==",
											"CodeBlockCloseFence": "YGBg",
											"Properties": {
												"id": "20210707214341-yvsj6hp"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```",
													"CodeBlockFenceLen": 3
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "amF2YQ=="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "取余(结果符号取决于被除数)\t\t\t\t取模(结果符号取决于模数)\n5%3=2；\t\t\t\t\t \t\t\t5%3=2；\n-5%-3=-2;\t\t\t\t\t\t\t -5%-3=-2；\n5%-3=2;\t\t\t\t\t\t\t\t 5%-3=-1；\n-5%3=-2;\t\t\t\t\t\t\t -5%3=1；\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```",
													"CodeBlockFenceLen": 3
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-bn0k3na",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707214341-bn0k3na"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "赋值运算"
				}
			]
		},
		{
			"ID": "20210707214341-88gfo4v",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707214341-88gfo4v"
			},
			"Children": [
				{
					"ID": "20210707214341-4ifizhj",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-4ifizhj"
					},
					"Children": [
						{
							"ID": "20210707214341-0dtfd3o",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-0dtfd3o"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "赋值运算符（支持连续赋值）"
								}
							]
						},
						{
							"ID": "20210707214341-b8walq2",
							"Type": "NodeList",
							"ListData": {
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707214341-b8walq2"
							},
							"Children": [
								{
									"ID": "20210707214341-0hlqwo5",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214341-0hlqwo5"
									},
									"Children": [
										{
											"ID": "20210707214341-2vd1632",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-2vd1632"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "基本赋值运算符："
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "="
												}
											]
										}
									]
								},
								{
									"ID": "20210707214341-djbz3li",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214341-djbz3li"
									},
									"Children": [
										{
											"ID": "20210707214341-mgg4l8u",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-mgg4l8u"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "复合赋值运算符："
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "+="
												},
												{
													"Type": "NodeText",
													"Data": "、"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "-="
												},
												{
													"Type": "NodeText",
													"Data": "、"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "*="
												},
												{
													"Type": "NodeText",
													"Data": "、"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "/="
												},
												{
													"Type": "NodeText",
													"Data": "、"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "%="
												}
											]
										},
										{
											"ID": "20210707214341-j84r173",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-j84r173"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "在使用+=、-=、*"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "=、/=、%=复合运算符进行赋值时，强制类型转换会自动完成，不会改变本身的数据类型"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-u3s9pgy",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707214341-u3s9pgy"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "比较运算"
				}
			]
		},
		{
			"ID": "20210707214341-phijsbu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-phijsbu"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "比较运算符"
				},
				{
					"Type": "NodeText",
					"Data": "："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "=="
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "!="
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "\u0026lt;"
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "\u0026gt;"
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "\u0026lt;="
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "\u0026gt;="
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "\u0026quot;Hello\u0026quot; instanceof String"
				},
				{
					"Type": "NodeText",
					"Data": "，结果是布尔值，不能连写"
				}
			]
		},
		{
			"ID": "20210707214341-15pncyf",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707214341-15pncyf"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "逻辑运算"
				}
			]
		},
		{
			"ID": "20210707214341-8ard2jj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-8ard2jj"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "逻辑运算符"
				},
				{
					"Type": "NodeText",
					"Data": "：是用来连接两个布尔类型结果的运算符，结果是布尔值，可以连写"
				}
			]
		},
		{
			"ID": "20210707214341-9bzsq6x",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707214341-9bzsq6x"
			},
			"Children": [
				{
					"ID": "20210707214341-t8f6z3h",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-t8f6z3h"
					},
					"Children": [
						{
							"ID": "20210707214341-ge57afb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-ge57afb"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "\u0026amp;\u0026amp;"
								},
								{
									"Type": "NodeText",
									"Data": "：短路与，符号左边是 false，右边不再运算；若是"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "\u0026amp;"
								},
								{
									"Type": "NodeText",
									"Data": "需运算完"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-j05bx8r",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-j05bx8r"
					},
					"Children": [
						{
							"ID": "20210707214341-2me9vk5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-2me9vk5"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "||"
								},
								{
									"Type": "NodeText",
									"Data": "：短路或，符号左边是 true，右边不再运算；若是"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "|"
								},
								{
									"Type": "NodeText",
									"Data": "需运算完"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-ymwkfuh",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-ymwkfuh"
					},
					"Children": [
						{
							"ID": "20210707214341-3774mh9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-3774mh9"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "!"
								},
								{
									"Type": "NodeText",
									"Data": "：逻辑非，取反"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-7aim9dg",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-7aim9dg"
					},
					"Children": [
						{
							"ID": "20210707214341-x82v9e4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-x82v9e4"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "^"
								},
								{
									"Type": "NodeText",
									"Data": "：逻辑异或"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-w3hnj9t",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707214341-w3hnj9t"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "三元运算"
				}
			]
		},
		{
			"ID": "20210707214341-9fijk6o",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-9fijk6o"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "三元运算符"
				}
			]
		},
		{
			"ID": "20210707214341-lsvh6h6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-lsvh6h6"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "数据类型 变量名 = 布尔类型表达式？结果 1：结果 2;"
				}
			]
		},
		{
			"ID": "20210707214341-cfnlqz1",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707214341-cfnlqz1"
			},
			"Children": [
				{
					"ID": "20210707214341-rvuln35",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-rvuln35"
					},
					"Children": [
						{
							"ID": "20210707214341-g97vyez",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-g97vyez"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "必须同时保证结果 1 和结果 2 符合左侧数据类型要求（可以统一为一个类型）"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-itowsnx",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-itowsnx"
					},
					"Children": [
						{
							"ID": "20210707214341-2zlf9yi",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-2zlf9yi"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "三元运算符的结果必须被使用。赋值或打印"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-8m9j6i3",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707214341-8m9j6i3"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "位（bit）运算"
				}
			]
		},
		{
			"ID": "20210707214341-umc35ph",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-umc35ph"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "::: danger 注意"
				}
			]
		},
		{
			"ID": "20210707214341-il362tx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-il362tx"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "运算时都要转为补码再考虑问题！"
				}
			]
		},
		{
			"ID": "20210707214341-ra5ksvu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-ra5ksvu"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": ":::"
				}
			]
		},
		{
			"ID": "20210707214341-0c0flp5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-0c0flp5"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "位运算符"
				},
				{
					"Type": "NodeText",
					"Data": "："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "不改变原变量数值"
				},
				{
					"Type": "NodeText",
					"Data": "。输入输出都是对"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "整数类型的二进制补码"
				},
				{
					"Type": "NodeText",
					"Data": "进行的运算！"
				}
			]
		},
		{
			"ID": "20210707214341-czd8tb5",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707214341-czd8tb5"
			},
			"Children": [
				{
					"ID": "20210707214341-7wf9wgl",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-7wf9wgl"
					},
					"Children": [
						{
							"ID": "20210707214341-1dube39",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-1dube39"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "\u0026amp;"
								},
								{
									"Type": "NodeText",
									"Data": "：与运算，如"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "6 \u0026amp; 3 = 2"
								},
								{
									"Type": "NodeText",
									"Data": "。"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "\u0026amp;="
								},
								{
									"Type": "NodeText",
									"Data": "也可使用"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-ig8v80o",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-ig8v80o"
					},
					"Children": [
						{
							"ID": "20210707214341-9mgjwdq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-9mgjwdq"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "|"
								},
								{
									"Type": "NodeText",
									"Data": "：或运算，如"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "6 | 3 =7"
								},
								{
									"Type": "NodeText",
									"Data": "。"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "|="
								},
								{
									"Type": "NodeText",
									"Data": " 也可使用"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-uc4l7vm",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-uc4l7vm"
					},
					"Children": [
						{
							"ID": "20210707214341-mmhqfeb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-mmhqfeb"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "~"
								},
								{
									"Type": "NodeText",
									"Data": "：取反运算，如"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "~ 6 = -7"
								},
								{
									"Type": "NodeText",
									"Data": "，正数取反，各二进制码按"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "补码"
								},
								{
									"Type": "NodeText",
									"Data": "各位取反；负数取反，各二进制码按"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "补码"
								},
								{
									"Type": "NodeText",
									"Data": "各位取反"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-rht57ms",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-rht57ms"
					},
					"Children": [
						{
							"ID": "20210707214341-1skoa6g",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-1skoa6g"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "^"
								},
								{
									"Type": "NodeText",
									"Data": "：异或运算，如"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "6 ^3 = 5"
								},
								{
									"Type": "NodeText",
									"Data": "，"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "一个数异或同一个数 2 次，则还是这个数"
								},
								{
									"Type": "NodeText",
									"Data": "，可用于简单加密。 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "^="
								},
								{
									"Type": "NodeText",
									"Data": "也可使用"
								}
							]
						},
						{
							"ID": "20210707214341-cq7fz6k",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-cq7fz6k"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "我们可以对 boolean 型变量执行与、或、异或运算，但不能执行非运算。对于布尔值，位运算符具有与逻辑运算符相同的效果，只是它们不会中途“短路”。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-1wd09wl",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707214341-1wd09wl"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "00000000 00000000 00000000 00000110\t\t\t\t6的原码、补码\n11111111 11111111 11111111 11111001\t\t\t\t取反（符号位也要取反）后的补码\n10000000 00000000 00000000 00000111\t\t\t\t利用补码求原码（-1，取反），结果为-7\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707214341-ht9op9m",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707214341-ht9op9m"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "位（bit）移运算"
				}
			]
		},
		{
			"ID": "20210707214341-ycfchkw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-ycfchkw"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "::: danger 注意"
				}
			]
		},
		{
			"ID": "20210707214341-zo2r22q",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-zo2r22q"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "运算时都要转为补码再考虑问题！"
				}
			]
		},
		{
			"ID": "20210707214341-ec11sht",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-ec11sht"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": ":::"
				}
			]
		},
		{
			"ID": "20210707214341-3khswsr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-3khswsr"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "位运算符"
				},
				{
					"Type": "NodeText",
					"Data": "："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "不改变原变量数值"
				},
				{
					"Type": "NodeText",
					"Data": "。输入输出都是对"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "整数类型的二进制补码"
				},
				{
					"Type": "NodeText",
					"Data": "进行的运算！如下解释以及画图时也应用补码来解释！"
				}
			]
		},
		{
			"ID": "20210707214341-bklh61d",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707214341-bklh61d"
			},
			"Children": [
				{
					"ID": "20210707214341-28zb4x1",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-28zb4x1"
					},
					"Children": [
						{
							"ID": "20210707214341-keco7hj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-keco7hj"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "\u0026lt;\u0026lt;"
								},
								{
									"Type": "NodeText",
									"Data": "左移，被移除的高位丢弃，低位空缺位补 0。当顶替掉符号位时数值正负改变。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-05blx1p",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-05blx1p"
					},
					"Children": [
						{
							"ID": "20210707214341-2z66xhz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-2z66xhz"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "\u0026gt;\u0026gt;"
								},
								{
									"Type": "NodeText",
									"Data": "右移，被移位的二进制最高位是 0，右移后所有空缺位补 0；最高位是 1，所有空缺位补 1。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-iw1e8xv",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-iw1e8xv"
					},
					"Children": [
						{
							"ID": "20210707214341-lnflmzf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-lnflmzf"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "\u0026gt;\u0026gt;\u0026gt;"
								},
								{
									"Type": "NodeText",
									"Data": "无符号右移，使用“零扩展”（zero extension），即被移位二进制最高位无论是 0 或者是 1，空缺位都用 0 补。C/C++ 没有"
								}
							]
						},
						{
							"ID": "20210707214341-bsvtmg0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-bsvtmg0"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "对"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "byte"
								},
								{
									"Type": "NodeText",
									"Data": "、"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "short"
								},
								{
									"Type": "NodeText",
									"Data": "和"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "char"
								},
								{
									"Type": "NodeText",
									"Data": "类型进行移位时，会首先转换为"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "int"
								},
								{
									"Type": "NodeText",
									"Data": "再进行位移，结果为 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "int"
								},
								{
									"Type": "NodeText",
									"Data": "。仅使用右值（rvalue）的 5 个低阶位（C 语言）。这可以防止我们移动超过"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "int"
								},
								{
									"Type": "NodeText",
									"Data": "范围的位数。若对一个"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "long"
								},
								{
									"Type": "NodeText",
									"Data": "值进行处理，最后得到的结果也是 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "long"
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						},
						{
							"ID": "20210707214341-d8e6yf3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-d8e6yf3"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "移位可以与等号 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "\u0026lt;\u0026lt;="
								},
								{
									"Type": "NodeText",
									"Data": " 或 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "\u0026gt;\u0026gt;="
								},
								{
									"Type": "NodeText",
									"Data": " 或 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "\u0026gt;\u0026gt;\u0026gt;="
								},
								{
									"Type": "NodeText",
									"Data": " 组合使用。左值被替换为其移位运算后的值。但是，问题来了，当无符号右移与赋值相结合时，若将其与"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "byte"
								},
								{
									"Type": "NodeText",
									"Data": "或"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "short"
								},
								{
									"Type": "NodeText",
									"Data": "一起使用的话，则结果错误。取而代之的是，它们被提升为"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "int"
								},
								{
									"Type": "NodeText",
									"Data": "型并右移，但在重新赋值时被截断。在这种情况下，结果为 -1。下面是代码示例："
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-mac4tel",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707214341-mac4tel"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "// 测试无符号右移\npublic class URShift {\n  public static void main(String[] args) {\n    int i = -1;\n    System.out.println(Integer.toBinaryString(i));// 11111111111111111111111111111111\n    i \u003e\u003e\u003e= 10;\n    System.out.println(Integer.toBinaryString(i));// 1111111111111111111111\n    long l = -1;\n    System.out.println(Long.toBinaryString(l));// 1111111111111111111111111111111111111111111111111111111111111111\n    l \u003e\u003e\u003e= 10;\n    System.out.println(Long.toBinaryString(l));// 111111111111111111111111111111111111111111111111111111\n\n    short s = -1;\n    System.out.println(Integer.toBinaryString(s));// 11111111111111111111111111111111\n    s \u003e\u003e\u003e= 10;\n    System.out.println(Integer.toBinaryString(s));// 11111111111111111111111111111111\n    byte b = -1;\n    System.out.println(Integer.toBinaryString(b));// 11111111111111111111111111111111\n    b \u003e\u003e\u003e= 10;\n    System.out.println(Integer.toBinaryString(b));// 11111111111111111111111111111111\n    b = -1;// 这个例子直接打印\n    System.out.println(Integer.toBinaryString(b));// 11111111111111111111111111111111\n    System.out.println(Integer.toBinaryString(b\u003e\u003e\u003e10));// 1111111111111111111111\n  }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707214341-vhv5qi0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-vhv5qi0"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在上例中，结果并未重新赋值给变量 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "b"
				},
				{
					"Type": "NodeText",
					"Data": " ，而是直接打印出来，因此一切正常。下面是一个涉及所有位运算符的代码示例："
				}
			]
		},
		{
			"ID": "20210707214341-vpw6wjc",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707214341-vpw6wjc"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "// 使用位运算符\nimport java.util.*;\npublic class BitManipulation {\n    public static void main(String[] args) {\n        Random rand = new Random(47);\n        int i = rand.nextInt();\n        int j = rand.nextInt();\n        printBinaryInt(\"-1\", -1);\n        printBinaryInt(\"+1\", +1);\n        int maxpos = 2147483647;\n        printBinaryInt(\"maxpos\", maxpos);\n        int maxneg = -2147483648;\n        printBinaryInt(\"maxneg\", maxneg);\n        printBinaryInt(\"i\", i);\n        printBinaryInt(\"~i\", ~i);\n        printBinaryInt(\"-i\", -i);\n        printBinaryInt(\"j\", j);\n        printBinaryInt(\"i \u0026 j\", i \u0026 j);\n        printBinaryInt(\"i | j\", i | j);\n        printBinaryInt(\"i ^ j\", i ^ j);\n        printBinaryInt(\"i \u003c\u003c 5\", i \u003c\u003c 5);\n        printBinaryInt(\"i \u003e\u003e 5\", i \u003e\u003e 5);\n        printBinaryInt(\"(~i) \u003e\u003e 5\", (~i) \u003e\u003e 5);\n        printBinaryInt(\"i \u003e\u003e\u003e 5\", i \u003e\u003e\u003e 5);\n        printBinaryInt(\"(~i) \u003e\u003e\u003e 5\", (~i) \u003e\u003e\u003e 5);\n        long l = rand.nextLong();\n        long m = rand.nextLong();\n        printBinaryLong(\"-1L\", -1L);\n        printBinaryLong(\"+1L\", +1L);\n        long ll = 9223372036854775807L;\n        printBinaryLong(\"maxpos\", ll);\n        long lln = -9223372036854775808L;\n        printBinaryLong(\"maxneg\", lln);\n        printBinaryLong(\"l\", l);\n        printBinaryLong(\"~l\", ~l);\n        printBinaryLong(\"-l\", -l);\n        printBinaryLong(\"m\", m);\n        printBinaryLong(\"l \u0026 m\", l \u0026 m);\n        printBinaryLong(\"l | m\", l | m);\n        printBinaryLong(\"l ^ m\", l ^ m);\n        printBinaryLong(\"l \u003c\u003c 5\", l \u003c\u003c 5);\n        printBinaryLong(\"l \u003e\u003e 5\", l \u003e\u003e 5);\n        printBinaryLong(\"(~l) \u003e\u003e 5\", (~l) \u003e\u003e 5);\n        printBinaryLong(\"l \u003e\u003e\u003e 5\", l \u003e\u003e\u003e 5);\n        printBinaryLong(\"(~l) \u003e\u003e\u003e 5\", (~l) \u003e\u003e\u003e 5);\n    }\n\n    static void printBinaryInt(String s, int i) {\n        System.out.println(\n        s + \", int: \" + i + \", binary:\\n \" +\n        Integer.toBinaryString(i));\n    }\n\n    static void printBinaryLong(String s, long l) {\n        System.out.println(\n        s + \", long: \" + l + \", binary:\\n \" +\n        Long.toBinaryString(l));\n    }\n}\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707214341-i5vd0d5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-i5vd0d5"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出结果（前 32 行）："
				}
			]
		},
		{
			"ID": "20210707214341-3i264yw",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707214341-3i264yw"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "-1, int: -1, binary:\n11111111111111111111111111111111\n+1, int: 1, binary:\n1\nmaxpos, int: 2147483647, binary:\n1111111111111111111111111111111\nmaxneg, int: -2147483648, binary:\n10000000000000000000000000000000\ni, int: -1172028779, binary:\n10111010001001000100001010010101\n~i, int: 1172028778, binary:\n 1000101110110111011110101101010\n-i, int: 1172028779, binary:\n1000101110110111011110101101011\nj, int: 1717241110, binary:\n1100110010110110000010100010110\ni \u0026 j, int: 570425364, binary:\n100010000000000000000000010100\ni | j, int: -25213033, binary:\n11111110011111110100011110010111\ni ^ j, int: -595638397, binary:\n11011100011111110100011110000011\ni \u003c\u003c 5, int: 1149784736, binary:\n1000100100010000101001010100000\ni \u003e\u003e 5, int: -36625900, binary:\n11111101110100010010001000010100\n(~i) \u003e\u003e 5, int: 36625899, binary:\n10001011101101110111101011\ni \u003e\u003e\u003e 5, int: 97591828, binary:\n101110100010010001000010100\n(~i) \u003e\u003e\u003e 5, int: 36625899, binary:\n10001011101101110111101011\n    ...\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707214341-yhoz6vm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-yhoz6vm"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "结尾的两个方法 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "printBinaryInt()"
				},
				{
					"Type": "NodeText",
					"Data": " 和 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "printBinaryLong()"
				},
				{
					"Type": "NodeText",
					"Data": " 分别操作一个 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "int"
				},
				{
					"Type": "NodeText",
					"Data": " 和 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "long"
				},
				{
					"Type": "NodeText",
					"Data": " 值，并转换为二进制格式输出，同时附有简要的文字说明。除了演示 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "int"
				},
				{
					"Type": "NodeText",
					"Data": " 和 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "long"
				},
				{
					"Type": "NodeText",
					"Data": " 的所有位运算符的效果之外，本示例还显示 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "int"
				},
				{
					"Type": "NodeText",
					"Data": " 和 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "long"
				},
				{
					"Type": "NodeText",
					"Data": " 的最小值、最大值、+1 和 -1 值，以便我们了解它们的形式。注意高位代表符号：0 表示正，1 表示负。上面显示了 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "int"
				},
				{
					"Type": "NodeText",
					"Data": " 部分的输出。以上数字的二进制表示形式是带符号的补码（2's complement）。"
				}
			]
		},
		{
			"ID": "20210707214341-bjr9emf",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707214341-bjr9emf"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "int i = 21;//....10101，数值位有5个\nint i = -21;\nSystem.out.println(\"i \u003c\u003c 2 :\" + (i \u003c\u003c 2));//84，-84\nSystem.out.println(\"i \u003c\u003c 3 :\" + (i \u003c\u003c 3));//168，-168\nSystem.out.println(\"i \u003c\u003c 27 :\" + (i \u003c\u003c 27));//-1476395008，1476395008\n\n\nint i = 21;//....10101，数值位有5个\nint i = -21;\nSystem.out.println(\"i \u003e\u003e 2 :\" + (i \u003e\u003e 2));//5，-6\nSystem.out.println(\"i \u003e\u003e 3 :\" + (i \u003e\u003e 3));//2，-3\nSystem.out.println(\"i \u003e\u003e 5 :\" + (i \u003e\u003e 5));//0，-1 ，负数右移最小为-1\n\nint i = 21;//....10101，数值位有5个\nint i = -21;\nSystem.out.println(\"i \u003e\u003e 2 :\" + (i \u003e\u003e\u003e 2));//5，1073741818\nSystem.out.println(\"i \u003e\u003e 3 :\" + (i \u003e\u003e\u003e 3));//2，536870909\nSystem.out.println(\"i \u003e\u003e 5 :\" + (i \u003e\u003e\u003e 5));//0，134217727\n// 由此可得，无符号右移对于负数来说无意义\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707214341-3b2uu82",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707214341-3b2uu82"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "习题"
				}
			]
		},
		{
			"ID": "20210707214341-4vah1or",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-4vah1or"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "交换两值"
				}
			]
		},
		{
			"ID": "20210707214341-dqmuhdc",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707214341-dqmuhdc"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "// 最通用\nint temp = num1;\nnum1 = num2;\nnum2 = temp;\n\n//1.只能用于数值类型；2.可能相加超出范围\nnum1 = num1 + num2;\nnum2 = num1 - num2;\nnum1 = num1 - num2;\n\n//只能用于数值类型\nnum1 = num1 ^ num2;\nnum2 = num1 ^ num2;\nnum1 = num1 ^ num2;\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707214341-emp8hdx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-emp8hdx"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "程序输出"
				}
			]
		},
		{
			"ID": "20210707214341-yuznybf",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707214341-yuznybf"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "boolean x = true;\nboolean y = false;\nshort z = 40;\nif ((z++ == 40) \u0026\u0026 (y = true)) {\n  z++;\n}\nif ((x = false) || (++z == 43)) {\n  z++;\n}\nSystem.out.println(\"z = \" + z);// 44\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707214341-8o1b7rt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-8o1b7rt"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Children": [
						{
							"Type": "NodeBang",
							"Data": "!"
						},
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "image-20190728142420590"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "../assets/image-20190728142420590.png"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-5tuwiqj",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707214341-5tuwiqj"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "流程控制"
				}
			]
		},
		{
			"ID": "20210707214341-ufryilf",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707214341-ufryilf"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "顺序结构"
				}
			]
		},
		{
			"ID": "20210707214341-9ko2kgw",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707214341-9ko2kgw"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "判断语句"
				}
			]
		},
		{
			"ID": "20210707214341-5s02xxo",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707214341-5s02xxo"
			},
			"Children": [
				{
					"ID": "20210707214341-hq62am4",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-hq62am4"
					},
					"Children": [
						{
							"ID": "20210707214341-kntpzmh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-kntpzmh"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "If"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-y99d59p",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-y99d59p"
					},
					"Children": [
						{
							"ID": "20210707214341-h2wq9yg",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-h2wq9yg"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "if...else..."
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-5nl50m4",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-5nl50m4"
					},
					"Children": [
						{
							"ID": "20210707214341-e7lwwno",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-e7lwwno"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "if...else if...else..."
								}
							]
						},
						{
							"ID": "20210707214341-tbs38vi",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707214341-tbs38vi"
							},
							"Children": [
								{
									"ID": "20210707214341-b5347rd",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214341-b5347rd"
									},
									"Children": [
										{
											"ID": "20210707214341-a70r1zd",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-a70r1zd"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "if else 和 三元运算符互换：取两数最大值"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-ny2hi0d",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707214341-ny2hi0d"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "选择语句"
				}
			]
		},
		{
			"ID": "20210707214341-qb602py",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707214341-qb602py"
			},
			"Children": [
				{
					"ID": "20210707214341-1jflgxl",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-1jflgxl"
					},
					"Children": [
						{
							"ID": "20210707214341-4sy37jh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-4sy37jh"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "switch 语句中"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "表达式数据类型可以是 byte、char、short、int、Enum（可解决很多问题）、String(JDK7 及之后)"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-e0kztv4",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707214341-e0kztv4"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "switch (表达式) {\n  case 常量值1:\n    语句1；\n    break;\n  case 常量值2:\n    语句2；\n    break;\n    ......\n  default:\n    默认语句\n    break;//default的break可省略不写，但不建议\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707214341-4x4bx6r",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707214341-4x4bx6r"
			},
			"Children": [
				{
					"ID": "20210707214341-847vx87",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-847vx87"
					},
					"Children": [
						{
							"ID": "20210707214341-i5zigeh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-i5zigeh"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "case 的"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "穿透性"
								}
							]
						},
						{
							"ID": "20210707214341-0ljb6qe",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-0ljb6qe"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在 switch 语句中，如果 case 的后面"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "不写 break"
								},
								{
									"Type": "NodeText",
									"Data": "，将出现穿透现象，也就是"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "不会再判断下一个 case"
								},
								{
									"Type": "NodeText",
									"Data": "的值，直接向后运行，直到"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "遇到 break"
								},
								{
									"Type": "NodeText",
									"Data": "，或者"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "整体 switch 结束"
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-b0alvbl",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-b0alvbl"
					},
					"Children": [
						{
							"ID": "20210707214341-cw1qw2v",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-cw1qw2v"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "case 后面的值为不可重复的常量，否则编译失败"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-xw3dpfu",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-xw3dpfu"
					},
					"Children": [
						{
							"ID": "20210707214341-f6u5der",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-f6u5der"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "switch 语句格式可以很灵活，"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "前后顺序可以颠倒"
								},
								{
									"Type": "NodeText",
									"Data": "，"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "break 语句也可以省略（例如，季节）"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-os9m27q",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-os9m27q"
					},
					"Children": [
						{
							"ID": "20210707214341-53ailez",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-53ailez"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "default 位置可以很灵活，但推荐放最后！"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-c6j1qda",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-c6j1qda"
					},
					"Children": [
						{
							"ID": "20210707214341-e3h8ghm",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-e3h8ghm"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "JDK 1.5 中可以在 switch "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "表达式中使用 Enum 定义的枚举类的对象"
								},
								{
									"Type": "NodeText",
									"Data": "作为表达式, "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "case 子句可以直接使用枚举值的名字，无需添加枚举类作为限定"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-tivbn8r",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707214341-tivbn8r"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "循环语句"
				}
			]
		},
		{
			"ID": "20210707214341-6immrep",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707214341-6immrep"
			},
			"Children": [
				{
					"ID": "20210707214341-40yk60y",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-40yk60y"
					},
					"Children": [
						{
							"ID": "20210707214341-layf2eh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-layf2eh"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "for：（三角形图形，上右，下左）"
								}
							]
						},
						{
							"ID": "20210707214341-iseenis",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "amF2YQ==",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210707214341-iseenis"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "for(初始化表达式; 布尔表达式; 步进表达式){\n    循环体;\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						},
						{
							"ID": "20210707214341-ijns6oe",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "amF2YQ==",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210707214341-ijns6oe"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "int num = 1;\nfor(System.out.print('a');num \u003c= 3;System.out.print('c'),num++){\n  System.out.print('b');\n}\n//输出结果：abcbcbc\nSystem.out.println(num);//4\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						},
						{
							"ID": "20210707214341-3x2dudp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-3x2dudp"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Java 5 引入了增强版 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "for"
								},
								{
									"Type": "NodeText",
									"Data": " 循环，用于"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "数组或集合（iterable）"
								},
								{
									"Type": "NodeText",
									"Data": "。类似 JS 中 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "for of"
								},
								{
									"Type": "NodeText",
									"Data": "，类似 Python 中的 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "for in"
								}
							]
						},
						{
							"ID": "20210707214341-eycvvwz",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "amF2YQ==",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210707214341-eycvvwz"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "for(float x : f){\n  System.out.println(x);\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-tpq1gwn",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-tpq1gwn"
					},
					"Children": [
						{
							"ID": "20210707214341-8ngpi6l",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-8ngpi6l"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "while"
								}
							]
						},
						{
							"ID": "20210707214341-uy9tbkq",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "amF2YQ==",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210707214341-uy9tbkq"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "初始化表达式;\nwhile(布尔表达式){\n    循环体;\n    步进表达式;\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-2w751de",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-2w751de"
					},
					"Children": [
						{
							"ID": "20210707214341-og5qgck",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-og5qgck"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "do...while"
								}
							]
						},
						{
							"ID": "20210707214341-pnghp4z",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "amF2YQ==",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210707214341-pnghp4z"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "初始化表达式;\ndo {\n\t循环体;\n\t步进表达式;\n} while(布尔表达式);\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-fvtlehu",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-fvtlehu"
					},
					"Children": [
						{
							"ID": "20210707214341-y28s0c0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-y28s0c0"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "for 和 while 的区别"
								}
							]
						},
						{
							"ID": "20210707214341-yz25neh",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707214341-yz25neh"
							},
							"Children": [
								{
									"ID": "20210707214341-ffcl8u5",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214341-ffcl8u5"
									},
									"Children": [
										{
											"ID": "20210707214341-mjz331p",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-mjz331p"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "控制条件语句所控制的那个"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "变量"
												},
												{
													"Type": "NodeText",
													"Data": "，在 for 循环结束后，就不能再被访问到了，而 while 循环结束还可以继续使用，如果你想"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "继续使用，就用 while"
												},
												{
													"Type": "NodeText",
													"Data": "，"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "否则推荐使用 for"
												},
												{
													"Type": "NodeText",
													"Data": "。原因是 for 循环结束，该变量就从内存中消失，能够提高内存的使用效率。"
												}
											]
										}
									]
								},
								{
									"ID": "20210707214341-63ia4is",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214341-63ia4is"
									},
									"Children": [
										{
											"ID": "20210707214341-qqmfld6",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-qqmfld6"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "在"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "已知循环次数"
												},
												{
													"Type": "NodeText",
													"Data": "的时候使用推荐使用"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "for"
												},
												{
													"Type": "NodeText",
													"Data": "，"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "循环次数未知"
												},
												{
													"Type": "NodeText",
													"Data": "的时推荐使用"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "while"
												},
												{
													"Type": "NodeText",
													"Data": "。"
												}
											]
										}
									]
								},
								{
									"ID": "20210707214341-f3qnhrh",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214341-f3qnhrh"
									},
									"Children": [
										{
											"ID": "20210707214341-7oe8bd6",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-7oe8bd6"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "do while 绝对会执行一次。"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-cm5el95",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707214341-cm5el95"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "跳出语句"
				}
			]
		},
		{
			"ID": "20210707214341-n4ypy2q",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707214341-n4ypy2q"
			},
			"Children": [
				{
					"ID": "20210707214341-6e374oj",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-6e374oj"
					},
					"Children": [
						{
							"ID": "20210707214341-nh4ftpt",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-nh4ftpt"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "break"
								},
								{
									"Type": "NodeText",
									"Data": "："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "跳出 switch"
								},
								{
									"Type": "NodeText",
									"Data": "或者"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "当前最近的一层循环"
								},
								{
									"Type": "NodeText",
									"Data": "，用在 if 中没用。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-8nxyxsa",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-8nxyxsa"
					},
					"Children": [
						{
							"ID": "20210707214341-mw2l76l",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-mw2l76l"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "continue"
								},
								{
									"Type": "NodeText",
									"Data": "："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "结束本次最近的一层循环"
								},
								{
									"Type": "NodeText",
									"Data": "，"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "继续下一次"
								},
								{
									"Type": "NodeText",
									"Data": "的循环"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-gcscbew",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-gcscbew"
					},
					"Children": [
						{
							"ID": "20210707214341-zxnum7k",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-zxnum7k"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "可以用"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "标签:"
								},
								{
									"Type": "NodeText",
									"Data": "来指定指明要终止的是哪一层语句块，否则只终止一层，标号语句必须紧接在循环的头部。"
								}
							]
						},
						{
							"ID": "20210707214341-4hoompo",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "amF2YQ==",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210707214341-4hoompo"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "lable1: for(;;)\n  ...\n  break/continue lable1;\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						},
						{
							"ID": "20210707214341-asmc97m",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-asmc97m"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "在 Java 里需要使用标签的唯一理由就是因为有循环嵌套存在，而且想从多层嵌套中 break 或 continue"
								},
								{
									"Type": "NodeText",
									"Data": "。进一步说，它实际需要紧靠在循环语句的前方 —— 在标签和循环之间置入任何语句都是不明智的。而在循环之前设置标签的唯一理由是：我们希望在其中嵌套另一个循环或者一个开关。这是由于 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "break"
								},
								{
									"Type": "NodeText",
									"Data": " 和 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "continue"
								},
								{
									"Type": "NodeText",
									"Data": " 关键字通常只中断当前循环，但若搭配标签一起使用，它们就会中断并跳转到标签所在的地方开始执行。代码示例："
								}
							]
						},
						{
							"ID": "20210707214341-xxmxeav",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "amF2YQ==",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210707214341-xxmxeav"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "label1:\nouter-iteration {\n  inner-iteration {\n  // ...\n  break; // [1]\n  // ...\n  continue; // [2]\n  // ...\n  continue label1; // [3]\n  // ...\n  break label1; // [4]\n  }\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						},
						{
							"ID": "20210707214341-a4cuj1q",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-a4cuj1q"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "[1]"
								},
								{
									"Type": "NodeText",
									"Data": " "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "break"
								},
								{
									"Type": "NodeText",
									"Data": " 中断内部循环，并在外部循环结束。 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "[2]"
								},
								{
									"Type": "NodeText",
									"Data": " "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "continue"
								},
								{
									"Type": "NodeText",
									"Data": " 移回内部循环的起始处。但在条件 3 中，"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "continue label1"
								},
								{
									"Type": "NodeText",
									"Data": " 却同时中断内部循环以及外部循环，并移至 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "label1"
								},
								{
									"Type": "NodeText",
									"Data": " 处。 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "[3]"
								},
								{
									"Type": "NodeText",
									"Data": " 随后，它实际是继续循环，但却从外部循环开始。 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "[4]"
								},
								{
									"Type": "NodeText",
									"Data": " "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "break label1"
								},
								{
									"Type": "NodeText",
									"Data": " 也会中断所有循环，并回到 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "label1"
								},
								{
									"Type": "NodeText",
									"Data": " 处，但并不重新进入循环。也就是说，它实际是完全中止了两个循环。"
								}
							]
						},
						{
							"ID": "20210707214341-1kabw2a",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-1kabw2a"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "::: danger 注意"
								}
							]
						},
						{
							"ID": "20210707214341-ik2g36h",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-ik2g36h"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "这两个语句后面不能声明其他语句，因为永远执行不了，编译报错！"
								}
							]
						},
						{
							"ID": "20210707214341-vvxfxhi",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-vvxfxhi"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": ":::"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-6zoo0t3",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-6zoo0t3"
					},
					"Children": [
						{
							"ID": "20210707214341-1pz7a7t",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-1pz7a7t"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "return"
								},
								{
									"Type": "NodeText",
									"Data": "："
								}
							]
						},
						{
							"ID": "20210707214341-4wbkshn",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 45,
								"Padding": 2,
								"Marker": "LQ==",
								"Num": -1
							},
							"Properties": {
								"id": "20210707214341-4wbkshn"
							},
							"Children": [
								{
									"ID": "20210707214341-fv1g9kv",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214341-fv1g9kv"
									},
									"Children": [
										{
											"ID": "20210707214341-wxdrwiu",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-wxdrwiu"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "退出当前方法"
												}
											]
										}
									]
								},
								{
									"ID": "20210707214341-p5d3y2l",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214341-p5d3y2l"
									},
									"Children": [
										{
											"ID": "20210707214341-tpg7ngh",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-tpg7ngh"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "指定一个方法返回值 (在方法返回类型非 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "void"
												},
												{
													"Type": "NodeText",
													"Data": " 的情况下)"
												}
											]
										}
									]
								},
								{
									"ID": "20210707214341-5mwa7do",
									"Type": "NodeListItem",
									"Data": "-",
									"ListData": {
										"Tight": true,
										"BulletChar": 45,
										"Padding": 2,
										"Marker": "LQ==",
										"Num": -1
									},
									"Properties": {
										"id": "20210707214341-5mwa7do"
									},
									"Children": [
										{
											"ID": "20210707214341-n7z6kf3",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20210707214341-n7z6kf3"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "如果在方法签名中定义了返回值类型为 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "void"
												},
												{
													"Type": "NodeText",
													"Data": "，那么在代码执行结束时会有一个隐式的 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "return"
												},
												{
													"Type": "NodeText",
													"Data": "。 也就是说我们不用在总是在方法中显式地包含 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "return"
												},
												{
													"Type": "NodeText",
													"Data": " 语句。 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "注意"
												},
												{
													"Type": "NodeText",
													"Data": "：如果你的方法声明的返回值类型为非 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "void"
												},
												{
													"Type": "NodeText",
													"Data": " 类型，那么则必须确保每个代码路径都返回一个值。"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-b1si4bh",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20210707214341-b1si4bh"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "扩展知识点"
				}
			]
		},
		{
			"ID": "20210707214341-cv1d6xh",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707214341-cv1d6xh"
			},
			"Children": [
				{
					"ID": "20210707214341-rfxlcap",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-rfxlcap"
					},
					"Children": [
						{
							"ID": "20210707214341-j1c68l0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-j1c68l0"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "死循环：循环中的条件永远为 true，死循环的是永不结束的循环。（"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "死循环后语句执行不到，编译失败"
								},
								{
									"Type": "NodeText",
									"Data": "）"
								}
							]
						},
						{
							"ID": "20210707214341-jke7o6a",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-jke7o6a"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "while(true)"
								},
								{
									"Type": "NodeText",
									"Data": "、"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "for(;;)"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-o4w17qx",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-o4w17qx"
					},
					"Children": [
						{
							"ID": "20210707214341-p5uskds",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-p5uskds"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "嵌套循环：一个循环的循环体是另一个循环"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-ktjccaf",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707214341-ktjccaf"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "JShell 脚本工具"
				}
			]
		},
		{
			"ID": "20210707214341-0fgvpfp",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707214341-0fgvpfp"
			},
			"Children": [
				{
					"ID": "20210707214341-se5qmzx",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-se5qmzx"
					},
					"Children": [
						{
							"ID": "20210707214341-wd3ixw6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-wd3ixw6"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "JShell"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "脚本"
								},
								{
									"Type": "NodeText",
									"Data": "工具是 JDK9 的新特性。当我们编写的代码非常少的时候，而又不愿意编写类，main 方法，也不愿意去编译和运行，这个时候可以使用 JShell 工具，"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "一步一步运行代码"
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-dvh001k",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-dvh001k"
					},
					"Children": [
						{
							"ID": "20210707214341-ivortl3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-ivortl3"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "命令行直接输入"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "JShell"
								},
								{
									"Type": "NodeText",
									"Data": "命令，退出"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "/exit"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-lye1e5b",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707214341-lye1e5b"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "main 方法"
				}
			]
		},
		{
			"ID": "20210707214341-yy2rztg",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707214341-yy2rztg"
			},
			"Children": [
				{
					"ID": "20210707214341-8qvqwzq",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-8qvqwzq"
					},
					"Children": [
						{
							"ID": "20210707214341-ozq4wjj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-ozq4wjj"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "main()方法作为程序的入口"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-t2fqqkj",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-t2fqqkj"
					},
					"Children": [
						{
							"ID": "20210707214341-7v5orgi",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-7v5orgi"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "main()方法也是一个普通的静态方法"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-spaz8qp",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-spaz8qp"
					},
					"Children": [
						{
							"ID": "20210707214341-geechgc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-geechgc"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "main()方法可以作为我们与控制台交互的方式。加不加引号都可以（之前：使用 Scanner）"
								}
							]
						}
					]
				}
			]
		}
	]
}