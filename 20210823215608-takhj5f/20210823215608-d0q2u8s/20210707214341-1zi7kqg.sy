{
	"ID": "20210707214341-1zi7kqg",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20210707214341-1zi7kqg",
		"title": "204.枚举",
		"type": "doc"
	},
	"Children": [
		{
			"ID": "20210707214341-v7av1ir",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-v7av1ir"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "类的对象只有有限个，确定的。举例如下："
				}
			]
		},
		{
			"ID": "20210707214341-jq4tl0t",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707214341-jq4tl0t"
			},
			"Children": [
				{
					"ID": "20210707214341-u0k0t7z",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-u0k0t7z"
					},
					"Children": [
						{
							"ID": "20210707214341-eaetrma",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-eaetrma"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "星期：Monday(星期一)、......、Sunday(星期天)"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-rgrpp5e",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-rgrpp5e"
					},
					"Children": [
						{
							"ID": "20210707214341-5m1d102",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-5m1d102"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "性别：Man(男)、Woman(女)"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-5d94r8d",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-5d94r8d"
					},
					"Children": [
						{
							"ID": "20210707214341-whr5jly",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-whr5jly"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "季节：Spring(春节)......Winter(冬天)"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-dx86dla",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-dx86dla"
					},
					"Children": [
						{
							"ID": "20210707214341-kdm8wpk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-kdm8wpk"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "支付方式：Cash(现金)、WeChatPay(微信)、Alipay(支付宝)、BankCard(银行卡)、CreditCard(信用卡)"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-rtgnw5t",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-rtgnw5t"
					},
					"Children": [
						{
							"ID": "20210707214341-u6ew5n5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-u6ew5n5"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "就职状态：Busy、Free、Vocation、Dimission"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-7y0wjnu",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-7y0wjnu"
					},
					"Children": [
						{
							"ID": "20210707214341-ah80dby",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-ah80dby"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "订单状态：Nonpayment(未付款)、Paid(已付款)、Delivered(已发货)、Return(退货)、Checked(已确认)、Fulfilled(已配货)"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-ep2ct04",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-ep2ct04"
					},
					"Children": [
						{
							"ID": "20210707214341-y8lq2ec",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-y8lq2ec"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "线程状态：Thread 中 State 内部枚举类"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-2zpcvfw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-2zpcvfw"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "当需要定义一组常量时，强烈建议使用枚举类"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-yh98mul",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707214341-yh98mul"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "枚举类的实现"
				}
			]
		},
		{
			"ID": "20210707214341-qrjh4w8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-qrjh4w8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "JDK 1.5 新增的 "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "enum"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 关键字用于定义枚举类"
				}
			]
		},
		{
			"ID": "20210707214341-b5hnmgd",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707214341-b5hnmgd"
			},
			"Children": [
				{
					"ID": "20210707214341-dln5lyt",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-dln5lyt"
					},
					"Children": [
						{
							"ID": "20210707214341-qdxw6zn",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-qdxw6zn"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "使用 enum 定义的枚举类"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "默认继承"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "了 "
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "java.lang.Enum"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "类，因此"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "不能再继承其他类"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-kr6bydk",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-kr6bydk"
					},
					"Children": [
						{
							"ID": "20210707214341-xpmtxel",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-xpmtxel"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "必须在"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "枚举类的第一行声明枚举类实例对象"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，以"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": ","
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "分隔"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": ";"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 结尾。列出的实例对象系统会"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "自动添加"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "public static final"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "修饰"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-xhupeec",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-xhupeec"
					},
					"Children": [
						{
							"ID": "20210707214341-hkhbe4f",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-hkhbe4f"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "枚举类的"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "属性建议使用"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "private final"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "修饰，加上"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "final"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "后在生成"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "set"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "方法时会编译报错，以示提醒"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-6t2p0w8",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-6t2p0w8"
					},
					"Children": [
						{
							"ID": "20210707214341-4b84ad6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-4b84ad6"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "枚举类的"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "构造器默认使用"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " "
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "private"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 权限修饰符"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-0fyxw9c",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-0fyxw9c"
					},
					"Children": [
						{
							"ID": "20210707214341-5tuhar3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-5tuhar3"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "枚举类继承了"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Enum"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，重写了"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "toString()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，返回某个 "
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "enum"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 实例的名称（如 SPRING），可重写"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-zhstcm8",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-zhstcm8"
					},
					"Children": [
						{
							"ID": "20210707214341-5likvu0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-5likvu0"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "JDK 1.5 中可以在 switch 表达式中使用 Enum 定义的枚举类的对象作为表达式, case 子句可以直接使用枚举实例的名称，无需添加枚举类作为限定"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-8qswm1y",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-8qswm1y"
					},
					"Children": [
						{
							"ID": "20210707214341-g4wg4fk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-g4wg4fk"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "若枚举只有一个对象，则可以作为一种单例模式的实现方式，查看单例模式中例子"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-c20soqt",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707214341-c20soqt"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public enum Season {\n    SPRING(\"春天\",\"春风又绿江南岸\"),\n    SUMMER(\"夏天\",\"映日荷花别样红\"),\n    AUTUMN(\"秋天\",\"秋水共长天一色\"),\n    WINNER(\"冬天\",\"窗含西岭千秋雪\");\n\n    // 若没有属性，可以不定义它和构造器\n    private final String name;\n\n    private final String des;\n\n    Season(String name, String des) {\n        this.name = name;\n        this.des = des;\n    }\n\n    // 可添加 get 方法、重写 Enum 类的toString()\n    public String getName() {\n        return name;\n    }\n\n    public String getDes() {\n        return des;\n    }\n\n    @Override\n    public String toString() {\n        return \"Season{\" +\n                \"name='\" + name + '\\'' +\n                \", des='\" + des + '\\'' +\n                '}';\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210707214341-6zyo8xi",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707214341-6zyo8xi"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "常用方法"
				}
			]
		},
		{
			"ID": "20210707214341-zhgc9xy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210707214341-zhgc9xy"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "java.lang.Enum"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-b4yi6j4",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707214341-b4yi6j4"
			},
			"Children": [
				{
					"ID": "20210707214341-l492dyv",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-l492dyv"
					},
					"Children": [
						{
							"ID": "20210707214341-mk7bs1z",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-mk7bs1z"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "values()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：返回"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "枚举类型的对象数组"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，该方法可以很方便地遍历所有的枚举值"
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-70uty3y",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-70uty3y"
					},
					"Children": [
						{
							"ID": "20210707214341-2qon6bq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-2qon6bq"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "valueOf(String str)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：可以把一个字符串转为对应的枚举类对象。要求字符串必须是枚举类实例的名称。如不是，会有运行时异常:"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "IllegalArgumentException"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-vuxncoy",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-vuxncoy"
					},
					"Children": [
						{
							"ID": "20210707214341-6zlwa2t",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-6zlwa2t"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "toString()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：不重写则返回当前枚举类对象常量的名称"
								}
							]
						},
						{
							"ID": "20210707214341-nmg3cl9",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "amF2YQ==",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210707214341-nmg3cl9"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "// 以下代码演示不重写toString()方法\nSeason[] values = Season.values();\nSystem.out.println(Arrays.toString(values));// [SPRING, SUMMER, AUTUMN, WINNER]\n\nSeason summer = Season.valueOf(\"SUMMER\");\nSystem.out.println(summer);// SUMMER\n\nSystem.out.println(Season.SUMMER);// SUMMER，默认调用 toString()\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-skuubai",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-skuubai"
					},
					"Children": [
						{
							"ID": "20210707214341-3qm4v0v",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-3qm4v0v"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "ordinal()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " ：表示某个特定 "
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "enum"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 常量的声明顺序，从 0 开始。一般不需要使用该方法，它设计用于供基于枚举的复杂数据结构使用，例如"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "java.util.EnumSet"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "和"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "java.util.EnumMap"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-1xft2oh",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707214341-1xft2oh"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "可以实现接口"
				}
			]
		},
		{
			"ID": "20210707214341-vax2dxd",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20210707214341-vax2dxd"
			},
			"Children": [
				{
					"ID": "20210707214341-3zbkaem",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-3zbkaem"
					},
					"Children": [
						{
							"ID": "20210707214341-zvd8sth",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-zvd8sth"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "枚举类可以"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "实现一个或多个接口"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20210707214341-mz4hrtb",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20210707214341-mz4hrtb"
					},
					"Children": [
						{
							"ID": "20210707214341-56la3wp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-56la3wp"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "若每个枚举值在调用实现的接口方法呈现相同的行为方式，则只要统一实现该方法即可"
								}
							]
						},
						{
							"ID": "20210707214341-1n96l6f",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210707214341-1n96l6f"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "若需要每个枚举值在调用实现的接口方法呈现出不同的行为方式，则可以让"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "每个枚举值分别来实现该方法"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						},
						{
							"ID": "20210707214341-nifp4wv",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "amF2YQ==",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20210707214341-nifp4wv"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "// 简单示例如下\nSPRING(\"春天\",\"春风又绿江南岸\"){\n    @Override\n    public String show() {\n        // TODO\n    }\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210707214341-zookimc",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210707214341-zookimc"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "JDK1.5 之前自定义枚举"
				}
			]
		},
		{
			"ID": "20210707214341-hq1ifo8",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210707214341-hq1ifo8"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "//自定义枚举类\npublic class Season{\n    //1.声明Season对象的属性:private final修饰，final 可不加，但加上后在生成 set 方法时会编译报错，以示提醒\n    private final String seasonName;\n    private final String seasonDesc;\n\n    //2.私有化类的构造器，保证不能在类的外部创建其对象，并给对象属性赋值\n    private Season(String seasonName,String seasonDesc){\n        this.seasonName = seasonName;\n        this.seasonDesc = seasonDesc;\n    }\n\n    //3.提供当前枚举类的多个对象：public static final修饰\n    public static final Season SPRING = new Season(\"春天\",\"春暖花开\");\n    public static final Season SUMMER = new Season(\"夏天\",\"夏日炎炎\");\n    public static final Season AUTUMN = new Season(\"秋天\",\"秋高气爽\");\n    public static final Season WINTER = new Season(\"冬天\",\"冰天雪地\");\n\n    //4.其他诉求1：获取枚举类对象的属性\n    public String getSeasonName() {\n        return seasonName;\n    }\n\n    public String getSeasonDesc() {\n        return seasonDesc;\n    }\n    //4.其他诉求2：提供toString()\n    @Override\n    public String toString() {\n        return \"Season{\" +\n            \"seasonName='\" + seasonName + '\\'' +\n            \", seasonDesc='\" + seasonDesc + '\\'' +\n            '}';\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		}
	]
}